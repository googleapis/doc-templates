### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.ResourceSearchResult
  commentId: T:Google.Cloud.Asset.V1.ResourceSearchResult
  id: ResourceSearchResult
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.ResourceSearchResult.#ctor
  - Google.Cloud.Asset.V1.ResourceSearchResult.#ctor(Google.Cloud.Asset.V1.ResourceSearchResult)
  - Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
  - Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
  - Google.Cloud.Asset.V1.ResourceSearchResult.Description
  - Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
  - Google.Cloud.Asset.V1.ResourceSearchResult.Labels
  - Google.Cloud.Asset.V1.ResourceSearchResult.Location
  - Google.Cloud.Asset.V1.ResourceSearchResult.Name
  - Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
  - Google.Cloud.Asset.V1.ResourceSearchResult.Project
  langs:
  - csharp
  - vb
  name: ResourceSearchResult
  nameWithType: ResourceSearchResult
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResourceSearchResult
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1494
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA result of Resource Search, containing information of a cloud resource.\n"
  example: []
  syntax:
    content: 'public sealed class ResourceSearchResult : IMessage<ResourceSearchResult>, IMessage, IEquatable<ResourceSearchResult>, IDeepCloneable<ResourceSearchResult>'
    content.vb: >-
      Public NotInheritable Class ResourceSearchResult
          Implements IMessage(Of ResourceSearchResult), IMessage, IEquatable(Of ResourceSearchResult), IDeepCloneable(Of ResourceSearchResult)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.ResourceSearchResult}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.ResourceSearchResult}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.ResourceSearchResult}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.#ctor
  commentId: M:Google.Cloud.Asset.V1.ResourceSearchResult.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: ResourceSearchResult()
  nameWithType: ResourceSearchResult.ResourceSearchResult()
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.ResourceSearchResult()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1510
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public ResourceSearchResult()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.#ctor(Google.Cloud.Asset.V1.ResourceSearchResult)
  commentId: M:Google.Cloud.Asset.V1.ResourceSearchResult.#ctor(Google.Cloud.Asset.V1.ResourceSearchResult)
  id: '#ctor(Google.Cloud.Asset.V1.ResourceSearchResult)'
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: ResourceSearchResult(ResourceSearchResult)
  nameWithType: ResourceSearchResult.ResourceSearchResult(ResourceSearchResult)
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.ResourceSearchResult(Google.Cloud.Asset.V1.ResourceSearchResult)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1517
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public ResourceSearchResult(ResourceSearchResult other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.ResourceSearchResult
    content.vb: Public Sub New(other As ResourceSearchResult)
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Name
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.Name
  id: Name
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ResourceSearchResult.Name
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Name
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Name
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1551
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe full resource name of this resource. Example:\n`//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.\nSee [Cloud Asset Inventory Resource Name\nFormat](https://cloud.google.com/asset-inventory/docs/resource-name-format)\nfor more information.\n\nTo search against the `name`:\n\n* use a field query. Example: `name:instance1`\n* use a free text query. Example: `instance1`\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
  id: AssetType
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: AssetType
  nameWithType: ResourceSearchResult.AssetType
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AssetType
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1569
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe type of this resource. Example: `compute.googleapis.com/Disk`.\n\nTo search against the `asset_type`:\n\n* specify the `asset_type` field in your search request.\n"
  example: []
  syntax:
    content: public string AssetType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssetType As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.AssetType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Project
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.Project
  id: Project
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: ResourceSearchResult.Project
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Project
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Project
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1588
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe project that this resource belongs to, in the form of\nprojects/{PROJECT_NUMBER}.\n\nTo search against the `project`:\n\n* specify the `scope` field as this project in your search request.\n"
  example: []
  syntax:
    content: public string Project { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Project As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.Project*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
  id: DisplayName
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ResourceSearchResult.DisplayName
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DisplayName
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1607
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe display name of this resource.\n\nTo search against the `display_name`:\n\n* use a field query. Example: `displayName:&quot;My Instance&quot;`\n* use a free text query. Example: `&quot;My Instance&quot;`\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Description
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.Description
  id: Description
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ResourceSearchResult.Description
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Description
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Description
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1627
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOne or more paragraphs of text description of this resource. Maximum length\ncould be up to 1M bytes.\n\nTo search against the `description`:\n\n* use a field query. Example: `description:&quot;*important instance*&quot;`\n* use a free text query. Example: `&quot;*important instance*&quot;`\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Location
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.Location
  id: Location
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ResourceSearchResult.Location
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Location
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Location
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1647
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nLocation can be `global`, regional like `us-east1`, or zonal like\n`us-west1-b`.\n\nTo search against the `location`:\n\n* use a field query. Example: `location:us-west*`\n* use a free text query. Example: `us-west*`\n"
  example: []
  syntax:
    content: public string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Location As String
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.Location*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Labels
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.Labels
  id: Labels
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: ResourceSearchResult.Labels
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Labels
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Labels
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1673
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nLabels associated with this resource. See [Labelling and grouping GCP\nresources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)\nfor more information.\n\nTo search against the `labels`:\n\n* use a field query:\n- query on any label&apos;s key or value. Example: `labels:prod`\n- query by a given label. Example: `labels.env:prod`\n- query by a given label&apos;s existence. Example: `labels.env:*`\n* use a free text query. Example: `prod`\n"
  example: []
  syntax:
    content: public MapField<string, string> Labels { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property Labels As MapField(Of String, String)
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.Labels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
  id: NetworkTags
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: NetworkTags
  nameWithType: ResourceSearchResult.NetworkTags
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: NetworkTags
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1694
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nNetwork tags associated with this resource. Like labels, network tags are a\ntype of annotations used to group GCP resources. See [Labelling GCP\nresources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)\nfor more information.\n\nTo search against the `network_tags`:\n\n* use a field query. Example: `networkTags:internal`\n* use a free text query. Example: `internal`\n"
  example: []
  syntax:
    content: public RepeatedField<string> NetworkTags { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property NetworkTags As RepeatedField(Of String)
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
  commentId: P:Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
  id: AdditionalAttributes
  parent: Google.Cloud.Asset.V1.ResourceSearchResult
  langs:
  - csharp
  - vb
  name: AdditionalAttributes
  nameWithType: ResourceSearchResult.AdditionalAttributes
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AdditionalAttributes
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 1723
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe additional searchable attributes of this resource. The attributes may\nvary from one resource type to another. Examples: `projectId` for Project,\n`dnsName` for DNS ManagedZone. This field contains a subset of the resource\nmetadata fields that are returned by the List or Get APIs provided by the\ncorresponding GCP service (e.g., Compute Engine). see [API references and\nsupported searchable\nattributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types)\nfor more information.\n\nYou can search values of these fields through free text search. However,\nyou should not consume the field programically as the field names and\nvalues may change as the GCP service updates to a new incompatible API\nversion.\n\nTo search against the `additional_attributes`:\n\n* use a free text query to match the attributes values. Example: to search\n`additional_attributes = { dnsName: &quot;foobar&quot; }`, you can issue a query\n`foobar`.\n"
  example: []
  syntax:
    content: public Struct AdditionalAttributes { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property AdditionalAttributes As Struct
  overload: Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.ResourceSearchResult}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.ResourceSearchResult}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<ResourceSearchResult>
  nameWithType: IMessage<ResourceSearchResult>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.ResourceSearchResult>
  nameWithType.vb: IMessage(Of ResourceSearchResult)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.ResourceSearchResult)
  name.vb: IMessage(Of ResourceSearchResult)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.ResourceSearchResult}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.ResourceSearchResult}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ResourceSearchResult>
  nameWithType: IEquatable<ResourceSearchResult>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.ResourceSearchResult>
  nameWithType.vb: IEquatable(Of ResourceSearchResult)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.ResourceSearchResult)
  name.vb: IEquatable(Of ResourceSearchResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.ResourceSearchResult}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.ResourceSearchResult}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<ResourceSearchResult>
  nameWithType: IDeepCloneable<ResourceSearchResult>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.ResourceSearchResult>
  nameWithType.vb: IDeepCloneable(Of ResourceSearchResult)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.ResourceSearchResult)
  name.vb: IDeepCloneable(Of ResourceSearchResult)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.ResourceSearchResult
    name: ResourceSearchResult
    nameWithType: ResourceSearchResult
    fullName: Google.Cloud.Asset.V1.ResourceSearchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.#ctor
  name: ResourceSearchResult
  nameWithType: ResourceSearchResult.ResourceSearchResult
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.ResourceSearchResult
- uid: Google.Cloud.Asset.V1.ResourceSearchResult
  commentId: T:Google.Cloud.Asset.V1.ResourceSearchResult
  parent: Google.Cloud.Asset.V1
  name: ResourceSearchResult
  nameWithType: ResourceSearchResult
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Name*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.Name
  name: Name
  nameWithType: ResourceSearchResult.Name
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.AssetType*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
  name: AssetType
  nameWithType: ResourceSearchResult.AssetType
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.AssetType
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Project*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.Project
  name: Project
  nameWithType: ResourceSearchResult.Project
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Project
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
  name: DisplayName
  nameWithType: ResourceSearchResult.DisplayName
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.DisplayName
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Description*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.Description
  name: Description
  nameWithType: ResourceSearchResult.Description
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Description
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Location*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.Location
  name: Location
  nameWithType: ResourceSearchResult.Location
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Location
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.Labels*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.Labels
  name: Labels
  nameWithType: ResourceSearchResult.Labels
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.Labels
- uid: Google.Protobuf.Collections.MapField{System.String,System.String}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, String>
  nameWithType: MapField<String, String>
  fullName: Google.Protobuf.Collections.MapField<System.String, System.String>
  nameWithType.vb: MapField(Of String, String)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, System.String)
  name.vb: MapField(Of String, String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
  name: NetworkTags
  nameWithType: ResourceSearchResult.NetworkTags
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.NetworkTags
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes*
  commentId: Overload:Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
  name: AdditionalAttributes
  nameWithType: ResourceSearchResult.AdditionalAttributes
  fullName: Google.Cloud.Asset.V1.ResourceSearchResult.AdditionalAttributes
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
