### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  commentId: T:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  id: AnalyzeIamPolicyResponse
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor
  - Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor(Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  - Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
  - Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
  - Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  langs:
  - csharp
  - vb
  name: AnalyzeIamPolicyResponse
  nameWithType: AnalyzeIamPolicyResponse
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AnalyzeIamPolicyResponse
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5949
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA response message for\n[google.cloud.asset.v1.AssetService.AnalyzeIamPolicy][google.cloud.asset.v1.AssetService.AnalyzeIamPolicy].\n"
  example: []
  syntax:
    content: 'public sealed class AnalyzeIamPolicyResponse : IMessage<AnalyzeIamPolicyResponse>, IMessage, IEquatable<AnalyzeIamPolicyResponse>, IDeepCloneable<AnalyzeIamPolicyResponse>'
    content.vb: >-
      Public NotInheritable Class AnalyzeIamPolicyResponse
          Implements IMessage(Of AnalyzeIamPolicyResponse), IMessage, IEquatable(Of AnalyzeIamPolicyResponse), IDeepCloneable(Of AnalyzeIamPolicyResponse)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor
  commentId: M:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  langs:
  - csharp
  - vb
  name: AnalyzeIamPolicyResponse()
  nameWithType: AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse()
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5965
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public AnalyzeIamPolicyResponse()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor(Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  commentId: M:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor(Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  id: '#ctor(Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)'
  parent: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  langs:
  - csharp
  - vb
  name: AnalyzeIamPolicyResponse(AnalyzeIamPolicyResponse)
  nameWithType: AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse(AnalyzeIamPolicyResponse)
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse(Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5972
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public AnalyzeIamPolicyResponse(AnalyzeIamPolicyResponse other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    content.vb: Public Sub New(other As AnalyzeIamPolicyResponse)
  overload: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
  commentId: P:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
  id: MainAnalysis
  parent: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  langs:
  - csharp
  - vb
  name: MainAnalysis
  nameWithType: AnalyzeIamPolicyResponse.MainAnalysis
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MainAnalysis
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5991
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe main analysis that matches the original request.\n"
  example: []
  syntax:
    content: public AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis MainAnalysis { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    content.vb: Public Property MainAnalysis As AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  overload: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  commentId: P:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  id: ServiceAccountImpersonationAnalysis
  parent: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  langs:
  - csharp
  - vb
  name: ServiceAccountImpersonationAnalysis
  nameWithType: AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ServiceAccountImpersonationAnalysis
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 6009
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe service account impersonation analysis if\n[google.cloud.asset.v1.AnalyzeIamPolicyRequest.analyze_service_account_impersonation][google.cloud.asset.v1.AnalyzeIamPolicyRequest.analyze_service_account_impersonation]\nis enabled.\n"
  example: []
  syntax:
    content: public RepeatedField<AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis> ServiceAccountImpersonationAnalysis { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis}
    content.vb: Public ReadOnly Property ServiceAccountImpersonationAnalysis As RepeatedField(Of AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis)
  overload: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
  commentId: P:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
  id: FullyExplored
  parent: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  langs:
  - csharp
  - vb
  name: FullyExplored
  nameWithType: AnalyzeIamPolicyResponse.FullyExplored
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FullyExplored
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 6022
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nRepresents whether all entries in the [main_analysis][main_analysis] and\n[service_account_impersonation_analysis][] have been fully explored to\nanswer the query in the request.\n"
  example: []
  syntax:
    content: public bool FullyExplored { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FullyExplored As Boolean
  overload: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AnalyzeIamPolicyResponse>
  nameWithType: IMessage<AnalyzeIamPolicyResponse>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse>
  nameWithType.vb: IMessage(Of AnalyzeIamPolicyResponse)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  name.vb: IMessage(Of AnalyzeIamPolicyResponse)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AnalyzeIamPolicyResponse>
  nameWithType: IEquatable<AnalyzeIamPolicyResponse>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse>
  nameWithType.vb: IEquatable(Of AnalyzeIamPolicyResponse)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  name.vb: IEquatable(Of AnalyzeIamPolicyResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AnalyzeIamPolicyResponse>
  nameWithType: IDeepCloneable<AnalyzeIamPolicyResponse>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse>
  nameWithType.vb: IDeepCloneable(Of AnalyzeIamPolicyResponse)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse)
  name.vb: IDeepCloneable(Of AnalyzeIamPolicyResponse)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
    name: AnalyzeIamPolicyResponse
    nameWithType: AnalyzeIamPolicyResponse
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.#ctor
  name: AnalyzeIamPolicyResponse
  nameWithType: AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.AnalyzeIamPolicyResponse
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  commentId: T:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
  parent: Google.Cloud.Asset.V1
  name: AnalyzeIamPolicyResponse
  nameWithType: AnalyzeIamPolicyResponse
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis*
  commentId: Overload:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
  name: MainAnalysis
  nameWithType: AnalyzeIamPolicyResponse.MainAnalysis
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.MainAnalysis
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  commentId: T:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  parent: Google.Cloud.Asset.V1
  name: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  nameWithType: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis*
  commentId: Overload:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  name: ServiceAccountImpersonationAnalysis
  nameWithType: AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.ServiceAccountImpersonationAnalysis
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis>
  nameWithType: RepeatedField<AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis>
  nameWithType.vb: RepeatedField(Of AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis)
  name.vb: RepeatedField(Of AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    name: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    nameWithType: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    name: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    nameWithType: AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
    fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.Types.IamPolicyAnalysis
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored*
  commentId: Overload:Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
  name: FullyExplored
  nameWithType: AnalyzeIamPolicyResponse.FullyExplored
  fullName: Google.Cloud.Asset.V1.AnalyzeIamPolicyResponse.FullyExplored
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
