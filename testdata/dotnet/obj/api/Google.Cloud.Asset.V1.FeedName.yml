### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.FeedName
  commentId: T:Google.Cloud.Asset.V1.FeedName
  id: FeedName
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.FeedName.#ctor(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FeedId
  - Google.Cloud.Asset.V1.FeedName.FolderId
  - Google.Cloud.Asset.V1.FeedName.Format(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FormatFolderFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FormatProjectFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FromFolderFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FromProjectFeed(System.String,System.String)
  - Google.Cloud.Asset.V1.FeedName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  - Google.Cloud.Asset.V1.FeedName.GetHashCode
  - Google.Cloud.Asset.V1.FeedName.IsKnownPattern
  - Google.Cloud.Asset.V1.FeedName.op_Equality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  - Google.Cloud.Asset.V1.FeedName.op_Inequality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  - Google.Cloud.Asset.V1.FeedName.OrganizationId
  - Google.Cloud.Asset.V1.FeedName.Parse(System.String)
  - Google.Cloud.Asset.V1.FeedName.Parse(System.String,System.Boolean)
  - Google.Cloud.Asset.V1.FeedName.ProjectId
  - Google.Cloud.Asset.V1.FeedName.ToString
  - Google.Cloud.Asset.V1.FeedName.TryParse(System.String,Google.Cloud.Asset.V1.FeedName@)
  - Google.Cloud.Asset.V1.FeedName.TryParse(System.String,System.Boolean,Google.Cloud.Asset.V1.FeedName@)
  - Google.Cloud.Asset.V1.FeedName.Type
  - Google.Cloud.Asset.V1.FeedName.UnparsedResource
  langs:
  - csharp
  - vb
  name: FeedName
  nameWithType: FeedName
  fullName: Google.Cloud.Asset.V1.FeedName
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FeedName
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 23
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Resource name for the <code>Feed</code> resource.
  example: []
  syntax:
    content: 'public sealed class FeedName : IResourceName, IEquatable<FeedName>'
    content.vb: >-
      Public NotInheritable Class FeedName
          Implements IResourceName, IEquatable(Of FeedName)
  inheritance:
  - System.Object
  implements:
  - Google.Api.Gax.IResourceName
  - System.IEquatable{Google.Cloud.Asset.V1.FeedName}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.FeedName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  id: FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FromUnparsed(UnparsedResourceName)
  nameWithType: FeedName.FromUnparsed(UnparsedResourceName)
  fullName: Google.Cloud.Asset.V1.FeedName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromUnparsed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 52
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Creates a <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> containing an unparsed resource name.
  example: []
  syntax:
    content: public static FeedName FromUnparsed(UnparsedResourceName unparsedResourceName)
    parameters:
    - id: unparsedResourceName
      type: Google.Api.Gax.UnparsedResourceName
      description: The unparsed resource name. Must not be <code>null</code>.
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: "\nA new instance of <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> containing the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">unparsedResourceName</code>.\n"
    content.vb: Public Shared Function FromUnparsed(unparsedResourceName As UnparsedResourceName) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.FromUnparsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FromProjectFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FromProjectFeed(System.String,System.String)
  id: FromProjectFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FromProjectFeed(String, String)
  nameWithType: FeedName.FromProjectFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FromProjectFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromProjectFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 59
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Creates a <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> with the pattern <code>projects/{project}/feeds/{feed}</code>.
  example: []
  syntax:
    content: public static FeedName FromProjectFeed(string projectId, string feedId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: A new instance of <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromProjectFeed(projectId As String, feedId As String) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.FromProjectFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FromFolderFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FromFolderFeed(System.String,System.String)
  id: FromFolderFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FromFolderFeed(String, String)
  nameWithType: FeedName.FromFolderFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FromFolderFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromFolderFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 66
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Creates a <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> with the pattern <code>folders/{folder}/feeds/{feed}</code>.
  example: []
  syntax:
    content: public static FeedName FromFolderFeed(string folderId, string feedId)
    parameters:
    - id: folderId
      type: System.String
      description: The <code>Folder</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: A new instance of <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromFolderFeed(folderId As String, feedId As String) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.FromFolderFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed(System.String,System.String)
  id: FromOrganizationFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FromOrganizationFeed(String, String)
  nameWithType: FeedName.FromOrganizationFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromOrganizationFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 75
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nCreates a <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with the pattern <code>organizations/{organization}/feeds/{feed}</code>.\n"
  example: []
  syntax:
    content: public static FeedName FromOrganizationFeed(string organizationId, string feedId)
    parameters:
    - id: organizationId
      type: System.String
      description: The <code>Organization</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: A new instance of <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromOrganizationFeed(organizationId As String, feedId As String) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.Format(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.Format(System.String,System.String)
  id: Format(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Format(String, String)
  nameWithType: FeedName.Format(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.Format(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Format
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 88
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/feeds/{feed}</code>.\n"
  example: []
  syntax:
    content: public static string Format(string projectId, string feedId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern <code>projects/{project}/feeds/{feed}</code>\n.\n"
    content.vb: Public Shared Function Format(projectId As String, feedId As String) As String
  overload: Google.Cloud.Asset.V1.FeedName.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FormatProjectFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FormatProjectFeed(System.String,System.String)
  id: FormatProjectFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FormatProjectFeed(String, String)
  nameWithType: FeedName.FormatProjectFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FormatProjectFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FormatProjectFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 100
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/feeds/{feed}</code>.\n"
  example: []
  syntax:
    content: public static string FormatProjectFeed(string projectId, string feedId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern <code>projects/{project}/feeds/{feed}</code>\n.\n"
    content.vb: Public Shared Function FormatProjectFeed(projectId As String, feedId As String) As String
  overload: Google.Cloud.Asset.V1.FeedName.FormatProjectFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FormatFolderFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FormatFolderFeed(System.String,System.String)
  id: FormatFolderFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FormatFolderFeed(String, String)
  nameWithType: FeedName.FormatFolderFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FormatFolderFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FormatFolderFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 112
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>folders/{folder}/feeds/{feed}</code>.\n"
  example: []
  syntax:
    content: public static string FormatFolderFeed(string folderId, string feedId)
    parameters:
    - id: folderId
      type: System.String
      description: The <code>Folder</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern <code>folders/{folder}/feeds/{feed}</code>.\n"
    content.vb: Public Shared Function FormatFolderFeed(folderId As String, feedId As String) As String
  overload: Google.Cloud.Asset.V1.FeedName.FormatFolderFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed(System.String,System.String)
  id: FormatOrganizationFeed(System.String,System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FormatOrganizationFeed(String, String)
  nameWithType: FeedName.FormatOrganizationFeed(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed(System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FormatOrganizationFeed
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 125
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>organizations/{organization}/feeds/{feed}</code>.\n"
  example: []
  syntax:
    content: public static string FormatOrganizationFeed(string organizationId, string feedId)
    parameters:
    - id: organizationId
      type: System.String
      description: The <code>Organization</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>organizations/{organization}/feeds/{feed}</code>.\n"
    content.vb: Public Shared Function FormatOrganizationFeed(organizationId As String, feedId As String) As String
  overload: Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.Parse(System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.Parse(System.String)
  id: Parse(System.String)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: FeedName.Parse(String)
  fullName: Google.Cloud.Asset.V1.FeedName.Parse(System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Parse
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 139
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Parses the given resource name string into a new <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> instance.
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/feeds/{feed}</code></li><li><code>folders/{folder}/feeds/{feed}</code></li><li><code>organizations/{organization}/feeds/{feed}</code></li></ul>\n"
  example: []
  syntax:
    content: public static FeedName Parse(string feedName)
    parameters:
    - id: feedName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: The parsed <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(feedName As String) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.Parse(System.String,System.Boolean)
  commentId: M:Google.Cloud.Asset.V1.FeedName.Parse(System.String,System.Boolean)
  id: Parse(System.String,System.Boolean)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Parse(String, Boolean)
  nameWithType: FeedName.Parse(String, Boolean)
  fullName: Google.Cloud.Asset.V1.FeedName.Parse(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Parse
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 161
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nParses the given resource name string into a new <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally allowing an\nunparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/feeds/{feed}</code></li><li><code>folders/{folder}/feeds/{feed}</code></li><li><code>organizations/{organization}/feeds/{feed}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static FeedName Parse(string feedName, bool allowUnparsed)
    parameters:
    - id: feedName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Cloud.Asset.V1.FeedName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    return:
      type: Google.Cloud.Asset.V1.FeedName
      description: The parsed <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(feedName As String, allowUnparsed As Boolean) As FeedName
  overload: Google.Cloud.Asset.V1.FeedName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.TryParse(System.String,Google.Cloud.Asset.V1.FeedName@)
  commentId: M:Google.Cloud.Asset.V1.FeedName.TryParse(System.String,Google.Cloud.Asset.V1.FeedName@)
  id: TryParse(System.String,Google.Cloud.Asset.V1.FeedName@)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: TryParse(String, out FeedName)
  nameWithType: FeedName.TryParse(String, out FeedName)
  fullName: Google.Cloud.Asset.V1.FeedName.TryParse(System.String, out Google.Cloud.Asset.V1.FeedName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TryParse
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 178
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Tries to parse the given resource name string into a new <xref href="Google.Cloud.Asset.V1.FeedName" data-throw-if-not-resolved="false"></xref> instance.
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/feeds/{feed}</code></li><li><code>folders/{folder}/feeds/{feed}</code></li><li><code>organizations/{organization}/feeds/{feed}</code></li></ul>\n"
  example: []
  syntax:
    content: public static bool TryParse(string feedName, out FeedName result)
    parameters:
    - id: feedName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: result
      type: Google.Cloud.Asset.V1.FeedName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(feedName As String, ByRef result As FeedName) As Boolean
  overload: Google.Cloud.Asset.V1.FeedName.TryParse*
  nameWithType.vb: FeedName.TryParse(String, ByRef FeedName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Cloud.Asset.V1.FeedName.TryParse(System.String, ByRef Google.Cloud.Asset.V1.FeedName)
  name.vb: TryParse(String, ByRef FeedName)
- uid: Google.Cloud.Asset.V1.FeedName.TryParse(System.String,System.Boolean,Google.Cloud.Asset.V1.FeedName@)
  commentId: M:Google.Cloud.Asset.V1.FeedName.TryParse(System.String,System.Boolean,Google.Cloud.Asset.V1.FeedName@)
  id: TryParse(System.String,System.Boolean,Google.Cloud.Asset.V1.FeedName@)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: TryParse(String, Boolean, out FeedName)
  nameWithType: FeedName.TryParse(String, Boolean, out FeedName)
  fullName: Google.Cloud.Asset.V1.FeedName.TryParse(System.String, System.Boolean, out Google.Cloud.Asset.V1.FeedName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TryParse
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 203
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally\nallowing an unparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/feeds/{feed}</code></li><li><code>folders/{folder}/feeds/{feed}</code></li><li><code>organizations/{organization}/feeds/{feed}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static bool TryParse(string feedName, bool allowUnparsed, out FeedName result)
    parameters:
    - id: feedName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Cloud.Asset.V1.FeedName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    - id: result
      type: Google.Cloud.Asset.V1.FeedName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(feedName As String, allowUnparsed As Boolean, ByRef result As FeedName) As Boolean
  overload: Google.Cloud.Asset.V1.FeedName.TryParse*
  nameWithType.vb: FeedName.TryParse(String, Boolean, ByRef FeedName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Cloud.Asset.V1.FeedName.TryParse(System.String, System.Boolean, ByRef Google.Cloud.Asset.V1.FeedName)
  name.vb: TryParse(String, Boolean, ByRef FeedName)
- uid: Google.Cloud.Asset.V1.FeedName.#ctor(System.String,System.String)
  commentId: M:Google.Cloud.Asset.V1.FeedName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FeedName(String, String)
  nameWithType: FeedName.FeedName(String, String)
  fullName: Google.Cloud.Asset.V1.FeedName.FeedName(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 250
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nConstructs a new instance of a <xref href=\"Google.Cloud.Asset.V1.FeedName\" data-throw-if-not-resolved=\"false\"></xref> class from the component parts of pattern\n<code>projects/{project}/feeds/{feed}</code>\n"
  example: []
  syntax:
    content: public FeedName(string projectId, string feedId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: feedId
      type: System.String
      description: The <code>Feed</code> ID. Must not be <code>null</code> or empty.
    content.vb: Public Sub New(projectId As String, feedId As String)
  overload: Google.Cloud.Asset.V1.FeedName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.FeedName.Type
  commentId: P:Google.Cloud.Asset.V1.FeedName.Type
  id: Type
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: FeedName.Type
  fullName: Google.Cloud.Asset.V1.FeedName.Type
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Type
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 255
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: The <xref href="Google.Cloud.Asset.V1.FeedName.ResourceNameType" data-throw-if-not-resolved="false"></xref> of the contained resource name.
  example: []
  syntax:
    content: public FeedName.ResourceNameType Type { get; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.FeedName.ResourceNameType
    content.vb: Public ReadOnly Property Type As FeedName.ResourceNameType
  overload: Google.Cloud.Asset.V1.FeedName.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.UnparsedResource
  commentId: P:Google.Cloud.Asset.V1.FeedName.UnparsedResource
  id: UnparsedResource
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: UnparsedResource
  nameWithType: FeedName.UnparsedResource
  fullName: Google.Cloud.Asset.V1.FeedName.UnparsedResource
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: UnparsedResource
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 261
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe contained <xref href=\"Google.Api.Gax.UnparsedResourceName\" data-throw-if-not-resolved=\"false\"></xref>. Only non-<code>null</code> if this instance contains an\nunparsed resource name.\n"
  example: []
  syntax:
    content: public UnparsedResourceName UnparsedResource { get; }
    parameters: []
    return:
      type: Google.Api.Gax.UnparsedResourceName
    content.vb: Public ReadOnly Property UnparsedResource As UnparsedResourceName
  overload: Google.Cloud.Asset.V1.FeedName.UnparsedResource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.FeedId
  commentId: P:Google.Cloud.Asset.V1.FeedName.FeedId
  id: FeedId
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FeedId
  nameWithType: FeedName.FeedId
  fullName: Google.Cloud.Asset.V1.FeedName.FeedId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FeedId
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 266
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe <code>Feed</code> ID. May be <code>null</code>, depending on which resource name is contained by this instance.\n"
  example: []
  syntax:
    content: public string FeedId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FeedId As String
  overload: Google.Cloud.Asset.V1.FeedName.FeedId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.FolderId
  commentId: P:Google.Cloud.Asset.V1.FeedName.FolderId
  id: FolderId
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: FolderId
  nameWithType: FeedName.FolderId
  fullName: Google.Cloud.Asset.V1.FeedName.FolderId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FolderId
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 271
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe <code>Folder</code> ID. May be <code>null</code>, depending on which resource name is contained by this instance.\n"
  example: []
  syntax:
    content: public string FolderId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FolderId As String
  overload: Google.Cloud.Asset.V1.FeedName.FolderId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.OrganizationId
  commentId: P:Google.Cloud.Asset.V1.FeedName.OrganizationId
  id: OrganizationId
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: OrganizationId
  nameWithType: FeedName.OrganizationId
  fullName: Google.Cloud.Asset.V1.FeedName.OrganizationId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OrganizationId
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 277
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe <code>Organization</code> ID. May be <code>null</code>, depending on which resource name is contained by this\ninstance.\n"
  example: []
  syntax:
    content: public string OrganizationId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property OrganizationId As String
  overload: Google.Cloud.Asset.V1.FeedName.OrganizationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.ProjectId
  commentId: P:Google.Cloud.Asset.V1.FeedName.ProjectId
  id: ProjectId
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: FeedName.ProjectId
  fullName: Google.Cloud.Asset.V1.FeedName.ProjectId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ProjectId
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 282
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe <code>Project</code> ID. May be <code>null</code>, depending on which resource name is contained by this instance.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Cloud.Asset.V1.FeedName.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.IsKnownPattern
  commentId: P:Google.Cloud.Asset.V1.FeedName.IsKnownPattern
  id: IsKnownPattern
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: IsKnownPattern
  nameWithType: FeedName.IsKnownPattern
  fullName: Google.Cloud.Asset.V1.FeedName.IsKnownPattern
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: IsKnownPattern
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 285
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Whether this instance contains a resource name with a known pattern.
  example: []
  syntax:
    content: public bool IsKnownPattern { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsKnownPattern As Boolean
  overload: Google.Cloud.Asset.V1.FeedName.IsKnownPattern*
  implements:
  - Google.Api.Gax.IResourceName.IsKnownPattern
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.FeedName.ToString
  commentId: M:Google.Cloud.Asset.V1.FeedName.ToString
  id: ToString
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FeedName.ToString()
  fullName: Google.Cloud.Asset.V1.FeedName.ToString()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ToString
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 289
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: The string representation of the resource name.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Cloud.Asset.V1.FeedName.ToString*
  implements:
  - Google.Api.Gax.IResourceName.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Cloud.Asset.V1.FeedName.GetHashCode
  commentId: M:Google.Cloud.Asset.V1.FeedName.GetHashCode
  id: GetHashCode
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FeedName.GetHashCode()
  fullName: Google.Cloud.Asset.V1.FeedName.GetHashCode()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetHashCode
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 302
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: Returns a hash code for this resource name.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Cloud.Asset.V1.FeedName.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Cloud.Asset.V1.FeedName.op_Equality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  commentId: M:Google.Cloud.Asset.V1.FeedName.op_Equality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  id: op_Equality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Equality(FeedName, FeedName)
  nameWithType: FeedName.Equality(FeedName, FeedName)
  fullName: Google.Cloud.Asset.V1.FeedName.Equality(Google.Cloud.Asset.V1.FeedName, Google.Cloud.Asset.V1.FeedName)
  type: Operator
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: op_Equality
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 311
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  example: []
  syntax:
    content: public static bool operator ==(FeedName a, FeedName b)
    parameters:
    - id: a
      type: Google.Cloud.Asset.V1.FeedName
    - id: b
      type: Google.Cloud.Asset.V1.FeedName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As FeedName, b As FeedName) As Boolean
  overload: Google.Cloud.Asset.V1.FeedName.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Asset.V1.FeedName.op_Inequality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  commentId: M:Google.Cloud.Asset.V1.FeedName.op_Inequality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  id: op_Inequality(Google.Cloud.Asset.V1.FeedName,Google.Cloud.Asset.V1.FeedName)
  parent: Google.Cloud.Asset.V1.FeedName
  langs:
  - csharp
  - vb
  name: Inequality(FeedName, FeedName)
  nameWithType: FeedName.Inequality(FeedName, FeedName)
  fullName: Google.Cloud.Asset.V1.FeedName.Inequality(Google.Cloud.Asset.V1.FeedName, Google.Cloud.Asset.V1.FeedName)
  type: Operator
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: op_Inequality
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetServiceResourceNames.g.cs
    startLine: 314
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  example: []
  syntax:
    content: public static bool operator !=(FeedName a, FeedName b)
    parameters:
    - id: a
      type: Google.Cloud.Asset.V1.FeedName
    - id: b
      type: Google.Cloud.Asset.V1.FeedName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As FeedName, b As FeedName) As Boolean
  overload: Google.Cloud.Asset.V1.FeedName.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  isExternal: true
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: System.IEquatable{Google.Cloud.Asset.V1.FeedName}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.FeedName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<FeedName>
  nameWithType: IEquatable<FeedName>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.FeedName>
  nameWithType.vb: IEquatable(Of FeedName)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.FeedName)
  name.vb: IEquatable(Of FeedName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.FeedName
    name: FeedName
    nameWithType: FeedName
    fullName: Google.Cloud.Asset.V1.FeedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.FeedName
    name: FeedName
    nameWithType: FeedName
    fullName: Google.Cloud.Asset.V1.FeedName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: true
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.FeedName
  commentId: T:Google.Cloud.Asset.V1.FeedName
  parent: Google.Cloud.Asset.V1
  name: FeedName
  nameWithType: FeedName
  fullName: Google.Cloud.Asset.V1.FeedName
- uid: Google.Cloud.Asset.V1.FeedName.FromUnparsed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FromUnparsed
  name: FromUnparsed
  nameWithType: FeedName.FromUnparsed
  fullName: Google.Cloud.Asset.V1.FeedName.FromUnparsed
- uid: Google.Api.Gax.UnparsedResourceName
  commentId: T:Google.Api.Gax.UnparsedResourceName
  parent: Google.Api.Gax
  isExternal: true
  name: UnparsedResourceName
  nameWithType: UnparsedResourceName
  fullName: Google.Api.Gax.UnparsedResourceName
- uid: Google.Cloud.Asset.V1.FeedName.FromProjectFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FromProjectFeed
  name: FromProjectFeed
  nameWithType: FeedName.FromProjectFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FromProjectFeed
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Asset.V1.FeedName.FromFolderFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FromFolderFeed
  name: FromFolderFeed
  nameWithType: FeedName.FromFolderFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FromFolderFeed
- uid: Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed
  name: FromOrganizationFeed
  nameWithType: FeedName.FromOrganizationFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FromOrganizationFeed
- uid: Google.Cloud.Asset.V1.FeedName.Format*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.Format
  name: Format
  nameWithType: FeedName.Format
  fullName: Google.Cloud.Asset.V1.FeedName.Format
- uid: Google.Cloud.Asset.V1.FeedName.FormatProjectFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FormatProjectFeed
  name: FormatProjectFeed
  nameWithType: FeedName.FormatProjectFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FormatProjectFeed
- uid: Google.Cloud.Asset.V1.FeedName.FormatFolderFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FormatFolderFeed
  name: FormatFolderFeed
  nameWithType: FeedName.FormatFolderFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FormatFolderFeed
- uid: Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed
  name: FormatOrganizationFeed
  nameWithType: FeedName.FormatOrganizationFeed
  fullName: Google.Cloud.Asset.V1.FeedName.FormatOrganizationFeed
- uid: Google.Cloud.Asset.V1.FeedName.Parse*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.Parse
  name: Parse
  nameWithType: FeedName.Parse
  fullName: Google.Cloud.Asset.V1.FeedName.Parse
- uid: Google.Cloud.Asset.V1.FeedName.UnparsedResource
  commentId: P:Google.Cloud.Asset.V1.FeedName.UnparsedResource
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Asset.V1.FeedName.TryParse*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.TryParse
  name: TryParse
  nameWithType: FeedName.TryParse
  fullName: Google.Cloud.Asset.V1.FeedName.TryParse
- uid: Google.Cloud.Asset.V1.FeedName.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.#ctor
  name: FeedName
  nameWithType: FeedName.FeedName
  fullName: Google.Cloud.Asset.V1.FeedName.FeedName
- uid: Google.Cloud.Asset.V1.FeedName.ResourceNameType
  commentId: T:Google.Cloud.Asset.V1.FeedName.ResourceNameType
  parent: Google.Cloud.Asset.V1
  name: FeedName.ResourceNameType
  nameWithType: FeedName.ResourceNameType
  fullName: Google.Cloud.Asset.V1.FeedName.ResourceNameType
- uid: Google.Cloud.Asset.V1.FeedName.Type*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.Type
  name: Type
  nameWithType: FeedName.Type
  fullName: Google.Cloud.Asset.V1.FeedName.Type
- uid: Google.Cloud.Asset.V1.FeedName.UnparsedResource*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.UnparsedResource
  name: UnparsedResource
  nameWithType: FeedName.UnparsedResource
  fullName: Google.Cloud.Asset.V1.FeedName.UnparsedResource
- uid: Google.Cloud.Asset.V1.FeedName.FeedId*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FeedId
  name: FeedId
  nameWithType: FeedName.FeedId
  fullName: Google.Cloud.Asset.V1.FeedName.FeedId
- uid: Google.Cloud.Asset.V1.FeedName.FolderId*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.FolderId
  name: FolderId
  nameWithType: FeedName.FolderId
  fullName: Google.Cloud.Asset.V1.FeedName.FolderId
- uid: Google.Cloud.Asset.V1.FeedName.OrganizationId*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.OrganizationId
  name: OrganizationId
  nameWithType: FeedName.OrganizationId
  fullName: Google.Cloud.Asset.V1.FeedName.OrganizationId
- uid: Google.Cloud.Asset.V1.FeedName.ProjectId*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.ProjectId
  name: ProjectId
  nameWithType: FeedName.ProjectId
  fullName: Google.Cloud.Asset.V1.FeedName.ProjectId
- uid: Google.Cloud.Asset.V1.FeedName.IsKnownPattern*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.IsKnownPattern
  name: IsKnownPattern
  nameWithType: FeedName.IsKnownPattern
  fullName: Google.Cloud.Asset.V1.FeedName.IsKnownPattern
- uid: Google.Api.Gax.IResourceName.IsKnownPattern
  commentId: P:Google.Api.Gax.IResourceName.IsKnownPattern
  parent: Google.Api.Gax.IResourceName
  isExternal: true
  name: IsKnownPattern
  nameWithType: IResourceName.IsKnownPattern
  fullName: Google.Api.Gax.IResourceName.IsKnownPattern
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.FeedName.ToString*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.ToString
  name: ToString
  nameWithType: FeedName.ToString
  fullName: Google.Cloud.Asset.V1.FeedName.ToString
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  parent: Google.Api.Gax.IResourceName
  isExternal: true
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  spec.csharp:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.FeedName.GetHashCode*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.GetHashCode
  name: GetHashCode
  nameWithType: FeedName.GetHashCode
  fullName: Google.Cloud.Asset.V1.FeedName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Asset.V1.FeedName.op_Equality*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.op_Equality
  name: Equality
  nameWithType: FeedName.Equality
  fullName: Google.Cloud.Asset.V1.FeedName.Equality
- uid: Google.Cloud.Asset.V1.FeedName.op_Inequality*
  commentId: Overload:Google.Cloud.Asset.V1.FeedName.op_Inequality
  name: Inequality
  nameWithType: FeedName.Inequality
  fullName: Google.Cloud.Asset.V1.FeedName.Inequality
