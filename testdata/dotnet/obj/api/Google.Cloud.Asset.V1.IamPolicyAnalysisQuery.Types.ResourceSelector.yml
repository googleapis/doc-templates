### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  id: IamPolicyAnalysisQuery.Types.ResourceSelector
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisQuery.Types.ResourceSelector
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResourceSelector
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 4881
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nSpecifies the resource to analyze for access policies, which may be set\ndirectly on the resource, or on ancestors such as organizations, folders or\nprojects.\n"
  example: []
  syntax:
    content: 'public sealed class ResourceSelector : IMessage<IamPolicyAnalysisQuery.Types.ResourceSelector>, IMessage, IEquatable<IamPolicyAnalysisQuery.Types.ResourceSelector>, IDeepCloneable<IamPolicyAnalysisQuery.Types.ResourceSelector>'
    content.vb: >-
      Public NotInheritable Class ResourceSelector
          Implements IMessage(Of IamPolicyAnalysisQuery.Types.ResourceSelector), IMessage, IEquatable(Of IamPolicyAnalysisQuery.Types.ResourceSelector), IDeepCloneable(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  langs:
  - csharp
  - vb
  name: ResourceSelector()
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 4897
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public ResourceSelector()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  langs:
  - csharp
  - vb
  name: ResourceSelector(IamPolicyAnalysisQuery.Types.ResourceSelector)
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector(IamPolicyAnalysisQuery.Types.ResourceSelector)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 4904
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public ResourceSelector(IamPolicyAnalysisQuery.Types.ResourceSelector other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    content.vb: Public Sub New(other As IamPolicyAnalysisQuery.Types.ResourceSelector)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  id: FullResourceName
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  langs:
  - csharp
  - vb
  name: FullResourceName
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FullResourceName
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 4924
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe [full resource name]\n(https://cloud.google.com/asset-inventory/docs/resource-name-format)\nof a resource of [supported resource\ntypes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types).\n"
  example: []
  syntax:
    content: public string FullResourceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FullResourceName As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType: IMessage<IamPolicyAnalysisQuery.Types.ResourceSelector>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  name.vb: IMessage(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType: IEquatable<IamPolicyAnalysisQuery.Types.ResourceSelector>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  name.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType: IDeepCloneable<IamPolicyAnalysisQuery.Types.ResourceSelector>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.ResourceSelector)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
    name: IamPolicyAnalysisQuery.Types.ResourceSelector
    nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.#ctor
  name: ResourceSelector
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.ResourceSelector
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisQuery.Types.ResourceSelector
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  name: FullResourceName
  nameWithType: IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.ResourceSelector.FullResourceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
