### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  id: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  - Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  friendlyApiName: Cloud Asset V1 API
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BigQueryDestination
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9776
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA BigQuery destination.\n"
  example: []
  syntax:
    content: 'public sealed class BigQueryDestination : IMessage<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>, IEquatable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>, IDeepCloneable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class BigQueryDestination
          Implements IMessage(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination), IEquatable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination), IDeepCloneable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: BigQueryDestination()
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9796
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public BigQueryDestination()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: BigQueryDestination(IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination(IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination(Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9803
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public BigQueryDestination(IamPolicyAnalysisOutputConfig.Types.BigQueryDestination other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    content.vb: Public Sub New(other As IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  id: Dataset
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: Dataset
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Dataset
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9825
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nRequired. The BigQuery dataset in format &quot;projects/projectId/datasets/datasetId&quot;,\nto which the analysis results should be exported. If this dataset does\nnot exist, the export call will return an INVALID_ARGUMENT error.\n"
  example: []
  syntax:
    content: public string Dataset { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Dataset As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  id: TablePrefix
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: TablePrefix
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TablePrefix
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9845
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nRequired. The prefix of the BigQuery tables to which the analysis results will be\nwritten. Tables will be created based on this table_prefix if not exist:\n* &lt;table_prefix>_analysis table will contain export operation&apos;s metadata.\n* &lt;table_prefix>_analysis_result will contain all the\n[IamPolicyAnalysisResult][google.cloud.asset.v1.IamPolicyAnalysisResult].\nWhen [partition_key] is specified, both tables will be partitioned based\non the [partition_key].\n"
  example: []
  syntax:
    content: public string TablePrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TablePrefix As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  id: PartitionKey
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionKey
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9859
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe partition key for BigQuery partitioned table.\n"
  example: []
  syntax:
    content: public IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey PartitionKey { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
    content.vb: Public Property PartitionKey As IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  id: WriteDisposition
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  langs:
  - csharp
  - vb
  name: WriteDisposition
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: WriteDisposition
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 9885
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. Specifies the action that occurs if the destination table or partition\nalready exists. The following values are supported:\n\n* WRITE_TRUNCATE: If the table or partition already exists, BigQuery\noverwrites the entire table or all the partitions data.\n* WRITE_APPEND: If the table or partition already exists, BigQuery\nappends the data to the table or the latest partition.\n* WRITE_EMPTY: If the table already exists and contains data, an error is\nreturned.\n\nThe default value is WRITE_APPEND. Each action is atomic and only occurs\nif BigQuery is able to complete the job successfully. Details are at\nhttps://cloud.google.com/bigquery/docs/loading-data-local#appending_to_or_overwriting_a_table_using_a_local_file.\n"
  example: []
  syntax:
    content: public string WriteDisposition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WriteDisposition As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType: IMessage<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  name.vb: IMessage(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType: IEquatable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  name.vb: IEquatable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType: IDeepCloneable<IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisOutputConfig.Types.BigQueryDestination)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.#ctor
  name: BigQueryDestination
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.BigQueryDestination
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  name: Dataset
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Dataset
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  name: TablePrefix
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.TablePrefix
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  name: PartitionKey
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.PartitionKey
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.Types.PartitionKey
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  name: WriteDisposition
  nameWithType: IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisOutputConfig.Types.BigQueryDestination.WriteDisposition
