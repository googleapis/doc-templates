### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.Asset
  commentId: T:Google.Cloud.Asset.V1.Asset
  id: Asset
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.Asset.#ctor
  - Google.Cloud.Asset.V1.Asset.#ctor(Google.Cloud.Asset.V1.Asset)
  - Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
  - Google.Cloud.Asset.V1.Asset.AccessLevel
  - Google.Cloud.Asset.V1.Asset.AccessPolicy
  - Google.Cloud.Asset.V1.Asset.Ancestors
  - Google.Cloud.Asset.V1.Asset.AssetType
  - Google.Cloud.Asset.V1.Asset.IamPolicy
  - Google.Cloud.Asset.V1.Asset.Name
  - Google.Cloud.Asset.V1.Asset.OrgPolicy
  - Google.Cloud.Asset.V1.Asset.Resource
  - Google.Cloud.Asset.V1.Asset.ResourceName
  - Google.Cloud.Asset.V1.Asset.ServicePerimeter
  - Google.Cloud.Asset.V1.Asset.UpdateTime
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: Asset
  fullName: Google.Cloud.Asset.V1.Asset
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetsResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Asset
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetsResourceNames.g.cs
    startLine: 20
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nAn asset in Google Cloud. An asset can be any resource in the Google Cloud\n[resource\nhierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),\na resource outside the Google Cloud resource hierarchy (such as Google\nKubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy).\nSee [Supported asset\ntypes](https://cloud.google.com/asset-inventory/docs/supported-asset-types)\nfor more information.\n"
  example: []
  syntax:
    content: 'public sealed class Asset : IMessage<Asset>, IMessage, IEquatable<Asset>, IDeepCloneable<Asset>'
    content.vb: >-
      Public NotInheritable Class Asset
          Implements IMessage(Of Asset), IMessage, IEquatable(Of Asset), IDeepCloneable(Of Asset)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.Asset}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.Asset}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.Asset}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.Asset.#ctor
  commentId: M:Google.Cloud.Asset.V1.Asset.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: Asset()
  nameWithType: Asset.Asset()
  fullName: Google.Cloud.Asset.V1.Asset.Asset()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 652
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Asset()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.Asset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.#ctor(Google.Cloud.Asset.V1.Asset)
  commentId: M:Google.Cloud.Asset.V1.Asset.#ctor(Google.Cloud.Asset.V1.Asset)
  id: '#ctor(Google.Cloud.Asset.V1.Asset)'
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: Asset(Asset)
  nameWithType: Asset.Asset(Asset)
  fullName: Google.Cloud.Asset.V1.Asset.Asset(Google.Cloud.Asset.V1.Asset)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 659
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Asset(Asset other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.Asset
    content.vb: Public Sub New(other As Asset)
  overload: Google.Cloud.Asset.V1.Asset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.UpdateTime
  commentId: P:Google.Cloud.Asset.V1.Asset.UpdateTime
  id: UpdateTime
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: UpdateTime
  nameWithType: Asset.UpdateTime
  fullName: Google.Cloud.Asset.V1.Asset.UpdateTime
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: UpdateTime
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 695
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe last update timestamp of an asset. update_time is updated when\ncreate/update/delete operation is performed.\n"
  example: []
  syntax:
    content: public Timestamp UpdateTime { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Timestamp
    content.vb: Public Property UpdateTime As Timestamp
  overload: Google.Cloud.Asset.V1.Asset.UpdateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.Name
  commentId: P:Google.Cloud.Asset.V1.Asset.Name
  id: Name
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Asset.Name
  fullName: Google.Cloud.Asset.V1.Asset.Name
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Name
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 714
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe full name of the asset. Example:\n`//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`\n\nSee [Resource\nnames](https://cloud.google.com/apis/design/resource_names#full_resource_name)\nfor more information.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Google.Cloud.Asset.V1.Asset.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.AssetType
  commentId: P:Google.Cloud.Asset.V1.Asset.AssetType
  id: AssetType
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: AssetType
  nameWithType: Asset.AssetType
  fullName: Google.Cloud.Asset.V1.Asset.AssetType
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AssetType
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 732
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe type of the asset. Example: `compute.googleapis.com/Disk`\n\nSee [Supported asset\ntypes](https://cloud.google.com/asset-inventory/docs/supported-asset-types)\nfor more information.\n"
  example: []
  syntax:
    content: public string AssetType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssetType As String
  overload: Google.Cloud.Asset.V1.Asset.AssetType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.Resource
  commentId: P:Google.Cloud.Asset.V1.Asset.Resource
  id: Resource
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: Asset.Resource
  fullName: Google.Cloud.Asset.V1.Asset.Resource
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Resource
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 746
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA representation of the resource.\n"
  example: []
  syntax:
    content: public Resource Resource { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.Resource
    content.vb: Public Property Resource As Resource
  overload: Google.Cloud.Asset.V1.Asset.Resource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.IamPolicy
  commentId: P:Google.Cloud.Asset.V1.Asset.IamPolicy
  id: IamPolicy
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: IamPolicy
  nameWithType: Asset.IamPolicy
  fullName: Google.Cloud.Asset.V1.Asset.IamPolicy
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: IamPolicy
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 768
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA representation of the Cloud IAM policy set on a Google Cloud resource.\nThere can be a maximum of one Cloud IAM policy set on any given resource.\nIn addition, Cloud IAM policies inherit their granted access scope from any\npolicies set on parent resources in the resource hierarchy. Therefore, the\neffectively policy is the union of both the policy set on this resource\nand each policy set on all of the resource&apos;s ancestry resource levels in\nthe hierarchy. See\n[this topic](https://cloud.google.com/iam/docs/policies#inheritance) for\nmore information.\n"
  example: []
  syntax:
    content: public Policy IamPolicy { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Iam.V1.Policy
    content.vb: Public Property IamPolicy As Policy
  overload: Google.Cloud.Asset.V1.Asset.IamPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.OrgPolicy
  commentId: P:Google.Cloud.Asset.V1.Asset.OrgPolicy
  id: OrgPolicy
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: OrgPolicy
  nameWithType: Asset.OrgPolicy
  fullName: Google.Cloud.Asset.V1.Asset.OrgPolicy
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OrgPolicy
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 787
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nA representation of an [organization\npolicy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy).\nThere can be more than one organization policy with different constraints\nset on a given resource.\n"
  example: []
  syntax:
    content: public RepeatedField<Policy> OrgPolicy { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.OrgPolicy.V1.Policy}
    content.vb: Public ReadOnly Property OrgPolicy As RepeatedField(Of Policy)
  overload: Google.Cloud.Asset.V1.Asset.OrgPolicy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.Asset.AccessPolicy
  commentId: P:Google.Cloud.Asset.V1.Asset.AccessPolicy
  id: AccessPolicy
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: AccessPolicy
  nameWithType: Asset.AccessPolicy
  fullName: Google.Cloud.Asset.V1.Asset.AccessPolicy
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AccessPolicy
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 798
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nPlease also refer to the [access policy user\nguide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).\n"
  example: []
  syntax:
    content: public AccessPolicy AccessPolicy { get; set; }
    parameters: []
    return:
      type: Google.Identity.AccessContextManager.V1.AccessPolicy
    content.vb: Public Property AccessPolicy As AccessPolicy
  overload: Google.Cloud.Asset.V1.Asset.AccessPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.AccessLevel
  commentId: P:Google.Cloud.Asset.V1.Asset.AccessLevel
  id: AccessLevel
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: AccessLevel
  nameWithType: Asset.AccessLevel
  fullName: Google.Cloud.Asset.V1.Asset.AccessLevel
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AccessLevel
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 813
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nPlease also refer to the [access level user\nguide](https://cloud.google.com/access-context-manager/docs/overview#access-levels).\n"
  example: []
  syntax:
    content: public AccessLevel AccessLevel { get; set; }
    parameters: []
    return:
      type: Google.Identity.AccessContextManager.V1.AccessLevel
    content.vb: Public Property AccessLevel As AccessLevel
  overload: Google.Cloud.Asset.V1.Asset.AccessLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.ServicePerimeter
  commentId: P:Google.Cloud.Asset.V1.Asset.ServicePerimeter
  id: ServicePerimeter
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: ServicePerimeter
  nameWithType: Asset.ServicePerimeter
  fullName: Google.Cloud.Asset.V1.Asset.ServicePerimeter
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ServicePerimeter
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 828
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nPlease also refer to the [service perimeter user\nguide](https://cloud.google.com/vpc-service-controls/docs/overview).\n"
  example: []
  syntax:
    content: public ServicePerimeter ServicePerimeter { get; set; }
    parameters: []
    return:
      type: Google.Identity.AccessContextManager.V1.ServicePerimeter
    content.vb: Public Property ServicePerimeter As ServicePerimeter
  overload: Google.Cloud.Asset.V1.Asset.ServicePerimeter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.Asset.Ancestors
  commentId: P:Google.Cloud.Asset.V1.Asset.Ancestors
  id: Ancestors
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: Ancestors
  nameWithType: Asset.Ancestors
  fullName: Google.Cloud.Asset.V1.Asset.Ancestors
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Ancestors
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 852
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe ancestry path of an asset in Google Cloud [resource\nhierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),\nrepresented as a list of relative resource names. An ancestry path starts\nwith the closest ancestor in the hierarchy and ends at root. If the asset\nis a project, folder, or organization, the ancestry path starts from the\nasset itself.\n\nExample: `[&quot;projects/123456789&quot;, &quot;folders/5432&quot;, &quot;organizations/1234&quot;]`\n"
  example: []
  syntax:
    content: public RepeatedField<string> Ancestors { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Ancestors As RepeatedField(Of String)
  overload: Google.Cloud.Asset.V1.Asset.Ancestors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
  commentId: P:Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
  id: AccessContextPolicyCase
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: AccessContextPolicyCase
  nameWithType: Asset.AccessContextPolicyCase
  fullName: Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AccessContextPolicyCase
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 866
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Asset.AccessContextPolicyOneofCase AccessContextPolicyCase { get; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.Asset.AccessContextPolicyOneofCase
    content.vb: Public ReadOnly Property AccessContextPolicyCase As Asset.AccessContextPolicyOneofCase
  overload: Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.Asset.ResourceName
  commentId: P:Google.Cloud.Asset.V1.Asset.ResourceName
  id: ResourceName
  parent: Google.Cloud.Asset.V1.Asset
  langs:
  - csharp
  - vb
  name: ResourceName
  nameWithType: Asset.ResourceName
  fullName: Google.Cloud.Asset.V1.Asset.ResourceName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetsResourceNames.g.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResourceName
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetsResourceNames.g.cs
    startLine: 25
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\n<xref href=\"Google.Api.Gax.IResourceName\" data-throw-if-not-resolved=\"false\"></xref>-typed view over the <xref href=\"Google.Cloud.Asset.V1.Asset.Name\" data-throw-if-not-resolved=\"false\"></xref> resource name property.\n"
  example: []
  syntax:
    content: public IResourceName ResourceName { get; set; }
    parameters: []
    return:
      type: Google.Api.Gax.IResourceName
    content.vb: Public Property ResourceName As IResourceName
  overload: Google.Cloud.Asset.V1.Asset.ResourceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.Asset}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.Asset}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Asset>
  nameWithType: IMessage<Asset>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.Asset>
  nameWithType.vb: IMessage(Of Asset)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.Asset)
  name.vb: IMessage(Of Asset)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.Asset}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.Asset}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Asset>
  nameWithType: IEquatable<Asset>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.Asset>
  nameWithType.vb: IEquatable(Of Asset)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.Asset)
  name.vb: IEquatable(Of Asset)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.Asset}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.Asset}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Asset>
  nameWithType: IDeepCloneable<Asset>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.Asset>
  nameWithType.vb: IDeepCloneable(Of Asset)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.Asset)
  name.vb: IDeepCloneable(Of Asset)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.Asset
    name: Asset
    nameWithType: Asset
    fullName: Google.Cloud.Asset.V1.Asset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.Asset.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.#ctor
  name: Asset
  nameWithType: Asset.Asset
  fullName: Google.Cloud.Asset.V1.Asset.Asset
- uid: Google.Cloud.Asset.V1.Asset
  commentId: T:Google.Cloud.Asset.V1.Asset
  parent: Google.Cloud.Asset.V1
  name: Asset
  nameWithType: Asset
  fullName: Google.Cloud.Asset.V1.Asset
- uid: Google.Cloud.Asset.V1.Asset.UpdateTime*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.UpdateTime
  name: UpdateTime
  nameWithType: Asset.UpdateTime
  fullName: Google.Cloud.Asset.V1.Asset.UpdateTime
- uid: Google.Protobuf.WellKnownTypes.Timestamp
  commentId: T:Google.Protobuf.WellKnownTypes.Timestamp
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Protobuf.WellKnownTypes.Timestamp
  nameWithType: Protobuf.WellKnownTypes.Timestamp
  fullName: Google.Protobuf.WellKnownTypes.Timestamp
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Asset.V1.Asset.Name*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.Name
  name: Name
  nameWithType: Asset.Name
  fullName: Google.Cloud.Asset.V1.Asset.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Asset.V1.Asset.AssetType*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.AssetType
  name: AssetType
  nameWithType: Asset.AssetType
  fullName: Google.Cloud.Asset.V1.Asset.AssetType
- uid: Google.Cloud.Asset.V1.Asset.Resource*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.Resource
  name: Resource
  nameWithType: Asset.Resource
  fullName: Google.Cloud.Asset.V1.Asset.Resource
- uid: Google.Cloud.Asset.V1.Resource
  commentId: T:Google.Cloud.Asset.V1.Resource
  parent: Google.Cloud.Asset.V1
  name: Resource
  nameWithType: Resource
  fullName: Google.Cloud.Asset.V1.Resource
- uid: Google.Cloud.Asset.V1.Asset.IamPolicy*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.IamPolicy
  name: IamPolicy
  nameWithType: Asset.IamPolicy
  fullName: Google.Cloud.Asset.V1.Asset.IamPolicy
- uid: Google.Cloud.Iam.V1.Policy
  commentId: T:Google.Cloud.Iam.V1.Policy
  parent: Google.Cloud.Iam.V1
  name: Policy
  nameWithType: Policy
  fullName: Google.Cloud.Iam.V1.Policy
- uid: Google.Cloud.Iam.V1
  commentId: N:Google.Cloud.Iam.V1
  name: Google.Cloud.Iam.V1
  nameWithType: Google.Cloud.Iam.V1
  fullName: Google.Cloud.Iam.V1
- uid: Google.Cloud.Asset.V1.Asset.OrgPolicy*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.OrgPolicy
  name: OrgPolicy
  nameWithType: Asset.OrgPolicy
  fullName: Google.Cloud.Asset.V1.Asset.OrgPolicy
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.OrgPolicy.V1.Policy}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.OrgPolicy.V1.Policy}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<Policy>
  nameWithType: RepeatedField<Policy>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.OrgPolicy.V1.Policy>
  nameWithType.vb: RepeatedField(Of Policy)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.OrgPolicy.V1.Policy)
  name.vb: RepeatedField(Of Policy)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.OrgPolicy.V1.Policy
    name: Policy
    nameWithType: Policy
    fullName: Google.Cloud.OrgPolicy.V1.Policy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.OrgPolicy.V1.Policy
    name: Policy
    nameWithType: Policy
    fullName: Google.Cloud.OrgPolicy.V1.Policy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Asset.V1.Asset.AccessPolicy*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.AccessPolicy
  name: AccessPolicy
  nameWithType: Asset.AccessPolicy
  fullName: Google.Cloud.Asset.V1.Asset.AccessPolicy
- uid: Google.Identity.AccessContextManager.V1.AccessPolicy
  commentId: T:Google.Identity.AccessContextManager.V1.AccessPolicy
  parent: Google.Identity.AccessContextManager.V1
  name: AccessPolicy
  nameWithType: AccessPolicy
  fullName: Google.Identity.AccessContextManager.V1.AccessPolicy
- uid: Google.Identity.AccessContextManager.V1
  commentId: N:Google.Identity.AccessContextManager.V1
  name: Google.Identity.AccessContextManager.V1
  nameWithType: Google.Identity.AccessContextManager.V1
  fullName: Google.Identity.AccessContextManager.V1
- uid: Google.Cloud.Asset.V1.Asset.AccessLevel*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.AccessLevel
  name: AccessLevel
  nameWithType: Asset.AccessLevel
  fullName: Google.Cloud.Asset.V1.Asset.AccessLevel
- uid: Google.Identity.AccessContextManager.V1.AccessLevel
  commentId: T:Google.Identity.AccessContextManager.V1.AccessLevel
  parent: Google.Identity.AccessContextManager.V1
  name: AccessLevel
  nameWithType: AccessLevel
  fullName: Google.Identity.AccessContextManager.V1.AccessLevel
- uid: Google.Cloud.Asset.V1.Asset.ServicePerimeter*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.ServicePerimeter
  name: ServicePerimeter
  nameWithType: Asset.ServicePerimeter
  fullName: Google.Cloud.Asset.V1.Asset.ServicePerimeter
- uid: Google.Identity.AccessContextManager.V1.ServicePerimeter
  commentId: T:Google.Identity.AccessContextManager.V1.ServicePerimeter
  parent: Google.Identity.AccessContextManager.V1
  name: ServicePerimeter
  nameWithType: ServicePerimeter
  fullName: Google.Identity.AccessContextManager.V1.ServicePerimeter
- uid: Google.Cloud.Asset.V1.Asset.Ancestors*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.Ancestors
  name: Ancestors
  nameWithType: Asset.Ancestors
  fullName: Google.Cloud.Asset.V1.Asset.Ancestors
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
  name: AccessContextPolicyCase
  nameWithType: Asset.AccessContextPolicyCase
  fullName: Google.Cloud.Asset.V1.Asset.AccessContextPolicyCase
- uid: Google.Cloud.Asset.V1.Asset.AccessContextPolicyOneofCase
  commentId: T:Google.Cloud.Asset.V1.Asset.AccessContextPolicyOneofCase
  parent: Google.Cloud.Asset.V1
  name: Asset.AccessContextPolicyOneofCase
  nameWithType: Asset.AccessContextPolicyOneofCase
  fullName: Google.Cloud.Asset.V1.Asset.AccessContextPolicyOneofCase
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  isExternal: true
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: Google.Cloud.Asset.V1.Asset.Name
  commentId: P:Google.Cloud.Asset.V1.Asset.Name
  isExternal: true
- uid: Google.Cloud.Asset.V1.Asset.ResourceName*
  commentId: Overload:Google.Cloud.Asset.V1.Asset.ResourceName
  name: ResourceName
  nameWithType: Asset.ResourceName
  fullName: Google.Cloud.Asset.V1.Asset.ResourceName
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: true
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
