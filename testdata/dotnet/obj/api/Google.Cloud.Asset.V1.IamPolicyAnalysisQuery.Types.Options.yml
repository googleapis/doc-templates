### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  id: IamPolicyAnalysisQuery.Types.Options
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisQuery.Types.Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Options
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5320
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nContains query options.\n"
  example: []
  syntax:
    content: 'public sealed class Options : IMessage<IamPolicyAnalysisQuery.Types.Options>, IMessage, IEquatable<IamPolicyAnalysisQuery.Types.Options>, IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>'
    content.vb: >-
      Public NotInheritable Class Options
          Implements IMessage(Of IamPolicyAnalysisQuery.Types.Options), IMessage, IEquatable(Of IamPolicyAnalysisQuery.Types.Options), IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: Options()
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5336
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Options()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: Options(IamPolicyAnalysisQuery.Types.Options)
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options(IamPolicyAnalysisQuery.Types.Options)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5343
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Options(IamPolicyAnalysisQuery.Types.Options other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    content.vb: Public Sub New(other As IamPolicyAnalysisQuery.Types.Options)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  id: ExpandGroups
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandGroups
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandGroups
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5375
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true, the identities section of the result will expand any\nGoogle groups appearing in an IAM policy binding.\n\nIf\n[google.cloud.asset.v1.IamPolicyAnalysisQuery.identity_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.identity_selector]\nis specified, the identity in the result will be determined by the\nselector, and this flag is not allowed to set.\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandGroups { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandGroups As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  id: ExpandRoles
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandRoles
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandRoles
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5397
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true, the access section of result will expand any roles\nappearing in IAM policy bindings to include their permissions.\n\nIf\n[google.cloud.asset.v1.IamPolicyAnalysisQuery.access_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.access_selector]\nis specified, the access section of the result will be determined by the\nselector, and this flag is not allowed to set.\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandRoles { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandRoles As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  id: ExpandResources
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandResources
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandResources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandResources
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5431
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true and\n[google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector]\nis not specified, the resource section of the result will expand any\nresource attached to an IAM policy to include resources lower in the\nresource hierarchy.\n\nFor example, if the request analyzes for which resources user A has\npermission P, and the results include an IAM policy with P on a GCP\nfolder, the results will also include resources in that folder with\npermission P.\n\nIf true and\n[google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector]\nis specified, the resource section of the result will expand the\nspecified resource to include resources lower in the resource hierarchy.\n\nFor example, if the request analyzes for which users have permission P on\na GCP folder with this option enabled, the results will include all users\nwho have permission P on that folder or any lower resource(ex. project).\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandResources { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandResources As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  id: OutputResourceEdges
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: OutputResourceEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OutputResourceEdges
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5447
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true, the result will output resource edges, starting\nfrom the policy attached resource, to any expanded resources.\nDefault is false.\n"
  example: []
  syntax:
    content: public bool OutputResourceEdges { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OutputResourceEdges As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  id: OutputGroupEdges
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: OutputGroupEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OutputGroupEdges
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5463
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true, the result will output group identity edges, starting\nfrom the binding&apos;s group members, to any expanded identities.\nDefault is false.\n"
  example: []
  syntax:
    content: public bool OutputGroupEdges { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OutputGroupEdges As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  id: AnalyzeServiceAccountImpersonation
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: AnalyzeServiceAccountImpersonation
  nameWithType: IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AnalyzeServiceAccountImpersonation
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5500
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nIf true, the response will include access analysis from identities to\nresources via service account impersonation. This is a very expensive\noperation, because many derived queries will be executed. We highly\nrecommend you use\n[google.cloud.asset.v1.AssetService.ExportIamPolicyAnalysis][google.cloud.asset.v1.AssetService.ExportIamPolicyAnalysis]\nrpc instead.\n\nFor example, if the request analyzes for which resources user A has\npermission P, and there&apos;s an IAM policy states user A has\niam.serviceAccounts.getAccessToken permission to a service account SA,\nand there&apos;s another IAM policy states service account SA has permission P\nto a GCP folder F, then user A potentially has access to the GCP folder\nF. And those advanced analysis results will be included in\n[google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].\n\nAnother example, if the request analyzes for who has\npermission P to a GCP folder F, and there&apos;s an IAM policy states user A\nhas iam.serviceAccounts.actAs permission to a service account SA, and\nthere&apos;s another IAM policy states service account SA has permission P to\nthe GCP folder F, then user A potentially has access to the GCP folder\nF. And those advanced analysis results will be included in\n[google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool AnalyzeServiceAccountImpersonation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AnalyzeServiceAccountImpersonation As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  id: MaxFanoutsPerGroup
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: MaxFanoutsPerGroup
  nameWithType: IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MaxFanoutsPerGroup
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5516
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe maximum number of fanouts per group when [expand_groups][expand_groups]\nis enabled. This internal field is to help load testing and determine a\nproper value, and won&apos;t be public in the future.\n"
  example: []
  syntax:
    content: public int MaxFanoutsPerGroup { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxFanoutsPerGroup As Integer
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  id: MaxFanoutsPerResource
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: MaxFanoutsPerResource
  nameWithType: IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MaxFanoutsPerResource
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.cs
    startLine: 5533
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe maximum number of fanouts per parent resource, such as\nGCP Project etc., when [expand_resources][] is enabled. This internal\nfield is to help load testing and determine a proper value, and won&apos;t be\npublic in the future.\n"
  example: []
  syntax:
    content: public int MaxFanoutsPerResource { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxFanoutsPerResource As Integer
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IMessage<IamPolicyAnalysisQuery.Types.Options>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IMessage(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IEquatable<IamPolicyAnalysisQuery.Types.Options>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  name: Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisQuery.Types.Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  name: ExpandGroups
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  name: ExpandRoles
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  name: ExpandResources
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandResources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  name: OutputResourceEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  name: OutputGroupEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  name: AnalyzeServiceAccountImpersonation
  nameWithType: IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  name: MaxFanoutsPerGroup
  nameWithType: IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerGroup
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  name: MaxFanoutsPerResource
  nameWithType: IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.MaxFanoutsPerResource
