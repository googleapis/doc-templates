### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  id: IamPolicyAnalysisQuery.Types.Options
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  - Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisQuery.Types.Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Options
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7862
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nContains query options.\n"
  example: []
  syntax:
    content: 'public sealed class Options : IMessage<IamPolicyAnalysisQuery.Types.Options>, IEquatable<IamPolicyAnalysisQuery.Types.Options>, IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class Options
          Implements IMessage(Of IamPolicyAnalysisQuery.Types.Options), IEquatable(Of IamPolicyAnalysisQuery.Types.Options), IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: Options()
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7882
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Options()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: Options(IamPolicyAnalysisQuery.Types.Options)
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options(IamPolicyAnalysisQuery.Types.Options)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options(Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7889
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Options(IamPolicyAnalysisQuery.Types.Options other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    content.vb: Public Sub New(other As IamPolicyAnalysisQuery.Types.Options)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  id: ExpandGroups
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandGroups
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandGroups
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7918
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true, the identities section of the result will expand any\nGoogle groups appearing in an IAM policy binding.\n\nIf [IamPolicyAnalysisQuery.identity_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.identity_selector] is specified, the\nidentity in the result will be determined by the selector, and this flag\nis not allowed to set.\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandGroups { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandGroups As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  id: ExpandRoles
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandRoles
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandRoles
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7939
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true, the access section of result will expand any roles\nappearing in IAM policy bindings to include their permissions.\n\nIf [IamPolicyAnalysisQuery.access_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.access_selector] is specified, the access\nsection of the result will be determined by the selector, and this flag\nis not allowed to set.\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandRoles { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandRoles As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  id: ExpandResources
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: ExpandResources
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandResources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExpandResources
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7973
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true and [IamPolicyAnalysisQuery.resource_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector] is not\nspecified, the resource section of the result will expand any resource\nattached to an IAM policy to include resources lower in the resource\nhierarchy.\n\nFor example, if the request analyzes for which resources user A has\npermission P, and the results include an IAM policy with P on a GCP\nfolder, the results will also include resources in that folder with\npermission P.\n\nIf true and [IamPolicyAnalysisQuery.resource_selector][google.cloud.asset.v1.IamPolicyAnalysisQuery.resource_selector] is specified,\nthe resource section of the result will expand the specified resource to\ninclude resources lower in the resource hierarchy. Only project or\nlower resources are supported. Folder and organization resource cannot be\nused together with this option.\n\nFor example, if the request analyzes for which users have permission P on\na GCP project with this option enabled, the results will include all\nusers who have permission P on that project or any lower resource.\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool ExpandResources { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExpandResources As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  id: OutputResourceEdges
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: OutputResourceEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OutputResourceEdges
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 7989
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true, the result will output resource edges, starting\nfrom the policy attached resource, to any expanded resources.\nDefault is false.\n"
  example: []
  syntax:
    content: public bool OutputResourceEdges { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OutputResourceEdges As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  id: OutputGroupEdges
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: OutputGroupEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OutputGroupEdges
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 8005
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true, the result will output group identity edges, starting\nfrom the binding&apos;s group members, to any expanded identities.\nDefault is false.\n"
  example: []
  syntax:
    content: public bool OutputGroupEdges { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OutputGroupEdges As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  id: AnalyzeServiceAccountImpersonation
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  langs:
  - csharp
  - vb
  name: AnalyzeServiceAccountImpersonation
  nameWithType: IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
      branch: 4452d3ba8345dd6cf2976f10876e28bd3e2e48a0
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AnalyzeServiceAccountImpersonation
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/AssetService.g.cs
    startLine: 8041
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nOptional. If true, the response will include access analysis from identities to\nresources via service account impersonation. This is a very expensive\noperation, because many derived queries will be executed. We highly\nrecommend you use [AssetService.AnalyzeIamPolicyLongrunning][google.cloud.asset.v1.AssetService.AnalyzeIamPolicyLongrunning] rpc\ninstead.\n\nFor example, if the request analyzes for which resources user A has\npermission P, and there&apos;s an IAM policy states user A has\niam.serviceAccounts.getAccessToken permission to a service account SA,\nand there&apos;s another IAM policy states service account SA has permission P\nto a GCP folder F, then user A potentially has access to the GCP folder\nF. And those advanced analysis results will be included in\n[AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].\n\nAnother example, if the request analyzes for who has\npermission P to a GCP folder F, and there&apos;s an IAM policy states user A\nhas iam.serviceAccounts.actAs permission to a service account SA, and\nthere&apos;s another IAM policy states service account SA has permission P to\nthe GCP folder F, then user A potentially has access to the GCP folder\nF. And those advanced analysis results will be included in\n[AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].\n\nDefault is false.\n"
  example: []
  syntax:
    content: public bool AnalyzeServiceAccountImpersonation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AnalyzeServiceAccountImpersonation As Boolean
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IMessage<IamPolicyAnalysisQuery.Types.Options>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IMessage(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IEquatable<IamPolicyAnalysisQuery.Types.Options>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IEquatable(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>
  nameWithType: IDeepCloneable<IamPolicyAnalysisQuery.Types.Options>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisQuery.Types.Options)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
    name: IamPolicyAnalysisQuery.Types.Options
    nameWithType: IamPolicyAnalysisQuery.Types.Options
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.#ctor
  name: Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.Options
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisQuery.Types.Options
  nameWithType: IamPolicyAnalysisQuery.Types.Options
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  name: ExpandGroups
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandGroups
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandGroups
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  name: ExpandRoles
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandRoles
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandRoles
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
  name: ExpandResources
  nameWithType: IamPolicyAnalysisQuery.Types.Options.ExpandResources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.ExpandResources
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  name: OutputResourceEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputResourceEdges
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  name: OutputGroupEdges
  nameWithType: IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.OutputGroupEdges
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  name: AnalyzeServiceAccountImpersonation
  nameWithType: IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisQuery.Types.Options.AnalyzeServiceAccountImpersonation
