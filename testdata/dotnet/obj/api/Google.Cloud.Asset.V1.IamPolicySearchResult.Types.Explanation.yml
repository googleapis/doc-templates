### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  commentId: T:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  id: IamPolicySearchResult.Types.Explanation
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor
  - Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor(Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  - Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
  langs:
  - csharp
  - vb
  name: IamPolicySearchResult.Types.Explanation
  nameWithType: IamPolicySearchResult.Types.Explanation
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Explanation
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2211
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nExplanation about the IAM policy search result.\n"
  example: []
  syntax:
    content: 'public sealed class Explanation : IMessage<IamPolicySearchResult.Types.Explanation>, IMessage, IEquatable<IamPolicySearchResult.Types.Explanation>, IDeepCloneable<IamPolicySearchResult.Types.Explanation>'
    content.vb: >-
      Public NotInheritable Class Explanation
          Implements IMessage(Of IamPolicySearchResult.Types.Explanation), IMessage, IEquatable(Of IamPolicySearchResult.Types.Explanation), IDeepCloneable(Of IamPolicySearchResult.Types.Explanation)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  langs:
  - csharp
  - vb
  name: Explanation()
  nameWithType: IamPolicySearchResult.Types.Explanation.Explanation()
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Explanation()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2227
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Explanation()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor(Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  commentId: M:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor(Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)'
  parent: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  langs:
  - csharp
  - vb
  name: Explanation(IamPolicySearchResult.Types.Explanation)
  nameWithType: IamPolicySearchResult.Types.Explanation.Explanation(IamPolicySearchResult.Types.Explanation)
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Explanation(Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2234
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Explanation(IamPolicySearchResult.Types.Explanation other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    content.vb: Public Sub New(other As IamPolicySearchResult.Types.Explanation)
  overload: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
  commentId: P:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
  id: MatchedPermissions
  parent: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  langs:
  - csharp
  - vb
  name: MatchedPermissions
  nameWithType: IamPolicySearchResult.Types.Explanation.MatchedPermissions
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MatchedPermissions
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2259
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe map from roles to their included permissions that match the\npermission query (i.e., a query containing `policy.role.permissions:`).\nExample: if query `policy.role.permissions:compute.disk.get`\nmatches a policy binding that contains owner role, the\nmatched_permissions will be `{&quot;roles/owner&quot;: [&quot;compute.disk.get&quot;]}`. The\nroles can also be found in the returned `policy` bindings. Note that the\nmap is populated only for requests with permission queries.\n"
  example: []
  syntax:
    content: public MapField<string, IamPolicySearchResult.Types.Explanation.Types.Permissions> MatchedPermissions { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions}
    content.vb: Public ReadOnly Property MatchedPermissions As MapField(Of String, IamPolicySearchResult.Types.Explanation.Types.Permissions)
  overload: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicySearchResult.Types.Explanation>
  nameWithType: IMessage<IamPolicySearchResult.Types.Explanation>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation>
  nameWithType.vb: IMessage(Of IamPolicySearchResult.Types.Explanation)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  name.vb: IMessage(Of IamPolicySearchResult.Types.Explanation)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicySearchResult.Types.Explanation>
  nameWithType: IEquatable<IamPolicySearchResult.Types.Explanation>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation>
  nameWithType.vb: IEquatable(Of IamPolicySearchResult.Types.Explanation)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  name.vb: IEquatable(Of IamPolicySearchResult.Types.Explanation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicySearchResult.Types.Explanation>
  nameWithType: IDeepCloneable<IamPolicySearchResult.Types.Explanation>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation>
  nameWithType.vb: IDeepCloneable(Of IamPolicySearchResult.Types.Explanation)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation)
  name.vb: IDeepCloneable(Of IamPolicySearchResult.Types.Explanation)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
    name: IamPolicySearchResult.Types.Explanation
    nameWithType: IamPolicySearchResult.Types.Explanation
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.#ctor
  name: Explanation
  nameWithType: IamPolicySearchResult.Types.Explanation.Explanation
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Explanation
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  commentId: T:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
  parent: Google.Cloud.Asset.V1
  name: IamPolicySearchResult.Types.Explanation
  nameWithType: IamPolicySearchResult.Types.Explanation
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation
- uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
  name: MatchedPermissions
  nameWithType: IamPolicySearchResult.Types.Explanation.MatchedPermissions
  fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.MatchedPermissions
- uid: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, IamPolicySearchResult.Types.Explanation.Types.Permissions>
  nameWithType: MapField<String, IamPolicySearchResult.Types.Explanation.Types.Permissions>
  fullName: Google.Protobuf.Collections.MapField<System.String, Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions>
  nameWithType.vb: MapField(Of String, IamPolicySearchResult.Types.Explanation.Types.Permissions)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions)
  name.vb: MapField(Of String, IamPolicySearchResult.Types.Explanation.Types.Permissions)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions
    name: IamPolicySearchResult.Types.Explanation.Types.Permissions
    nameWithType: IamPolicySearchResult.Types.Explanation.Types.Permissions
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions
    name: IamPolicySearchResult.Types.Explanation.Types.Permissions
    nameWithType: IamPolicySearchResult.Types.Explanation.Types.Permissions
    fullName: Google.Cloud.Asset.V1.IamPolicySearchResult.Types.Explanation.Types.Permissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
