### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  id: IamPolicyAnalysisResult.Types.AccessControlList
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisResult.Types.AccessControlList
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AccessControlList
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3706
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nAn access control list, derived from the above IAM policy binding, which\ncontains a set of resources and accesses. May include one\nitem from each set to compose an access control entry.\n\nNOTICE that there could be multiple access control lists for one IAM policy\nbinding. The access control lists are created based on resource and access\ncombinations.\n\nFor example, assume we have the following cases in one IAM policy binding:\n- Permission P1 and P2 apply to resource R1 and R2;\n- Permission P3 applies to resource R2 and R3;\n\nThis will result in the following access control lists:\n- AccessControlList 1: [R1, R2], [P1, P2]\n- AccessControlList 2: [R2, R3], [P3]\n"
  example: []
  syntax:
    content: 'public sealed class AccessControlList : IMessage<IamPolicyAnalysisResult.Types.AccessControlList>, IMessage, IEquatable<IamPolicyAnalysisResult.Types.AccessControlList>, IDeepCloneable<IamPolicyAnalysisResult.Types.AccessControlList>'
    content.vb: >-
      Public NotInheritable Class AccessControlList
          Implements IMessage(Of IamPolicyAnalysisResult.Types.AccessControlList), IMessage, IEquatable(Of IamPolicyAnalysisResult.Types.AccessControlList), IDeepCloneable(Of IamPolicyAnalysisResult.Types.AccessControlList)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  langs:
  - csharp
  - vb
  name: AccessControlList()
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3722
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public AccessControlList()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  langs:
  - csharp
  - vb
  name: AccessControlList(IamPolicyAnalysisResult.Types.AccessControlList)
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList(IamPolicyAnalysisResult.Types.AccessControlList)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3729
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public AccessControlList(IamPolicyAnalysisResult.Types.AccessControlList other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    content.vb: Public Sub New(other As IamPolicyAnalysisResult.Types.AccessControlList)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
  id: Resources
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.Resources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Resources
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3752
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe resources that match one of the following conditions:\n- The resource_selector, if it is specified in request;\n- Otherwise, resources reachable from the policy attached resource.\n"
  example: []
  syntax:
    content: public RepeatedField<IamPolicyAnalysisResult.Types.Resource> Resources { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource}
    content.vb: Public ReadOnly Property Resources As RepeatedField(Of IamPolicyAnalysisResult.Types.Resource)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  id: Accesses
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  langs:
  - csharp
  - vb
  name: Accesses
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Accesses
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3767
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe accesses that match one of the following conditions:\n- The access_selector, if it is specified in request;\n- Otherwise, access specifiers reachable from the policy binding&apos;s role.\n"
  example: []
  syntax:
    content: public RepeatedField<IamPolicyAnalysisResult.Types.Access> Accesses { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
    content.vb: Public ReadOnly Property Accesses As RepeatedField(Of IamPolicyAnalysisResult.Types.Access)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  id: ResourceEdges
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  langs:
  - csharp
  - vb
  name: ResourceEdges
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResourceEdges
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3784
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nResource edges of the graph starting from the policy attached\nresource to any descendant resources. The [Edge.source_node][] contains\nthe full resource name of a parent resource and [Edge.target_node][]\ncontains the full resource name of a child resource. This field is\npresent only if the output_resource_edges option is enabled in request.\n"
  example: []
  syntax:
    content: public RepeatedField<IamPolicyAnalysisResult.Types.Edge> ResourceEdges { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge}
    content.vb: Public ReadOnly Property ResourceEdges As RepeatedField(Of IamPolicyAnalysisResult.Types.Edge)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType: IMessage<IamPolicyAnalysisResult.Types.AccessControlList>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisResult.Types.AccessControlList)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  name.vb: IMessage(Of IamPolicyAnalysisResult.Types.AccessControlList)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType: IEquatable<IamPolicyAnalysisResult.Types.AccessControlList>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisResult.Types.AccessControlList)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  name.vb: IEquatable(Of IamPolicyAnalysisResult.Types.AccessControlList)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType: IDeepCloneable<IamPolicyAnalysisResult.Types.AccessControlList>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisResult.Types.AccessControlList)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisResult.Types.AccessControlList)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
    name: IamPolicyAnalysisResult.Types.AccessControlList
    nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.#ctor
  name: AccessControlList
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.AccessControlList
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisResult.Types.AccessControlList
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
  name: Resources
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.Resources
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Resources
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<IamPolicyAnalysisResult.Types.Resource>
  nameWithType: RepeatedField<IamPolicyAnalysisResult.Types.Resource>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource>
  nameWithType.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Resource)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource)
  name.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Resource)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource
    name: IamPolicyAnalysisResult.Types.Resource
    nameWithType: IamPolicyAnalysisResult.Types.Resource
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource
    name: IamPolicyAnalysisResult.Types.Resource
    nameWithType: IamPolicyAnalysisResult.Types.Resource
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Resource
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  name: Accesses
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.Accesses
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.Accesses
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<IamPolicyAnalysisResult.Types.Access>
  nameWithType: RepeatedField<IamPolicyAnalysisResult.Types.Access>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access>
  nameWithType.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Access)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  name.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Access)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  name: ResourceEdges
  nameWithType: IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.AccessControlList.ResourceEdges
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<IamPolicyAnalysisResult.Types.Edge>
  nameWithType: RepeatedField<IamPolicyAnalysisResult.Types.Edge>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge>
  nameWithType.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Edge)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge)
  name.vb: RepeatedField(Of IamPolicyAnalysisResult.Types.Edge)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge
    name: IamPolicyAnalysisResult.Types.Edge
    nameWithType: IamPolicyAnalysisResult.Types.Edge
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge
    name: IamPolicyAnalysisResult.Types.Edge
    nameWithType: IamPolicyAnalysisResult.Types.Edge
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Edge
  - name: )
    nameWithType: )
    fullName: )
