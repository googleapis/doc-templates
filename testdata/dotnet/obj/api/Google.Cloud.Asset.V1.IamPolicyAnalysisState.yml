### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisState
  id: IamPolicyAnalysisState
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
  - Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisState
  nameWithType: IamPolicyAnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: IamPolicyAnalysisState
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2484
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nRepresents the detailed state of an entity under analysis, such as a\nresource, an identity or an access.\n"
  example: []
  syntax:
    content: 'public sealed class IamPolicyAnalysisState : IMessage<IamPolicyAnalysisState>, IMessage, IEquatable<IamPolicyAnalysisState>, IDeepCloneable<IamPolicyAnalysisState>'
    content.vb: >-
      Public NotInheritable Class IamPolicyAnalysisState
          Implements IMessage(Of IamPolicyAnalysisState), IMessage, IEquatable(Of IamPolicyAnalysisState), IDeepCloneable(Of IamPolicyAnalysisState)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisState()
  nameWithType: IamPolicyAnalysisState.IamPolicyAnalysisState()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.IamPolicyAnalysisState()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2500
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public IamPolicyAnalysisState()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisState)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisState(IamPolicyAnalysisState)
  nameWithType: IamPolicyAnalysisState.IamPolicyAnalysisState(IamPolicyAnalysisState)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.IamPolicyAnalysisState(Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2507
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public IamPolicyAnalysisState(IamPolicyAnalysisState other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    content.vb: Public Sub New(other As IamPolicyAnalysisState)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
  id: Code
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: IamPolicyAnalysisState.Code
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Code
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2530
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe Google standard error code that best describes the state.\nFor example:\n- OK means the analysis on this entity has been successfully finished;\n- PERMISSION_DENIED means an access denied error is encountered;\n- DEADLINE_EXCEEDED means the analysis on this entity hasn&apos;t been started\nin time;\n"
  example: []
  syntax:
    content: public Code Code { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Code
    content.vb: Public Property Code As Code
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
  id: Cause
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  langs:
  - csharp
  - vb
  name: Cause
  nameWithType: IamPolicyAnalysisState.Cause
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Cause
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 2544
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe human-readable description of the cause of failure.\n"
  example: []
  syntax:
    content: public string Cause { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Cause As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisState>
  nameWithType: IMessage<IamPolicyAnalysisState>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisState>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisState)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  name.vb: IMessage(Of IamPolicyAnalysisState)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisState>
  nameWithType: IEquatable<IamPolicyAnalysisState>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisState>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisState)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  name.vb: IEquatable(Of IamPolicyAnalysisState)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisState}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisState>
  nameWithType: IDeepCloneable<IamPolicyAnalysisState>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisState>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisState)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisState)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisState)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    name: IamPolicyAnalysisState
    nameWithType: IamPolicyAnalysisState
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisState.#ctor
  name: IamPolicyAnalysisState
  nameWithType: IamPolicyAnalysisState.IamPolicyAnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.IamPolicyAnalysisState
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisState
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisState
  nameWithType: IamPolicyAnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
  name: Code
  nameWithType: IamPolicyAnalysisState.Code
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Code
- uid: Google.Rpc.Code
  commentId: T:Google.Rpc.Code
  parent: Google.Rpc
  isExternal: true
  name: Code
  nameWithType: Code
  fullName: Google.Rpc.Code
- uid: Google.Rpc
  commentId: N:Google.Rpc
  isExternal: true
  name: Google.Rpc
  nameWithType: Google.Rpc
  fullName: Google.Rpc
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
  name: Cause
  nameWithType: IamPolicyAnalysisState.Cause
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState.Cause
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
