### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  id: IamPolicyAnalysisResult.Types.Access
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
  - Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
  langs:
  - csharp
  - vb
  name: IamPolicyAnalysisResult.Types.Access
  nameWithType: IamPolicyAnalysisResult.Types.Access
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Access
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3106
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nAn IAM role or permission under analysis.\n"
  example: []
  syntax:
    content: 'public sealed class Access : IMessage<IamPolicyAnalysisResult.Types.Access>, IMessage, IEquatable<IamPolicyAnalysisResult.Types.Access>, IDeepCloneable<IamPolicyAnalysisResult.Types.Access>'
    content.vb: >-
      Public NotInheritable Class Access
          Implements IMessage(Of IamPolicyAnalysisResult.Types.Access), IMessage, IEquatable(Of IamPolicyAnalysisResult.Types.Access), IDeepCloneable(Of IamPolicyAnalysisResult.Types.Access)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: Access()
  nameWithType: IamPolicyAnalysisResult.Types.Access.Access()
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Access()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3122
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Access()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  commentId: M:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  id: '#ctor(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)'
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: Access(IamPolicyAnalysisResult.Types.Access)
  nameWithType: IamPolicyAnalysisResult.Types.Access.Access(IamPolicyAnalysisResult.Types.Access)
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Access(Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3129
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public Access(IamPolicyAnalysisResult.Types.Access other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    content.vb: Public Sub New(other As IamPolicyAnalysisResult.Types.Access)
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
  id: Role
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: IamPolicyAnalysisResult.Types.Access.Role
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Role
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3154
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe role.\n"
  example: []
  syntax:
    content: public string Role { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Role As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
  id: Permission
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: Permission
  nameWithType: IamPolicyAnalysisResult.Types.Access.Permission
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Permission
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3168
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe permission.\n"
  example: []
  syntax:
    content: public string Permission { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Permission As String
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
  id: AnalysisState
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: AnalysisState
  nameWithType: IamPolicyAnalysisResult.Types.Access.AnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AnalysisState
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3183
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe analysis state of this access.\n"
  example: []
  syntax:
    content: public IamPolicyAnalysisState AnalysisState { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisState
    content.vb: Public Property AnalysisState As IamPolicyAnalysisState
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  commentId: P:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  id: OneofAccessCase
  parent: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  langs:
  - csharp
  - vb
  name: OneofAccessCase
  nameWithType: IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: OneofAccessCase
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 3199
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase OneofAccessCase { get; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
    content.vb: Public ReadOnly Property OneofAccessCase As IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
  overload: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<IamPolicyAnalysisResult.Types.Access>
  nameWithType: IMessage<IamPolicyAnalysisResult.Types.Access>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access>
  nameWithType.vb: IMessage(Of IamPolicyAnalysisResult.Types.Access)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  name.vb: IMessage(Of IamPolicyAnalysisResult.Types.Access)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IamPolicyAnalysisResult.Types.Access>
  nameWithType: IEquatable<IamPolicyAnalysisResult.Types.Access>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access>
  nameWithType.vb: IEquatable(Of IamPolicyAnalysisResult.Types.Access)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  name.vb: IEquatable(Of IamPolicyAnalysisResult.Types.Access)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<IamPolicyAnalysisResult.Types.Access>
  nameWithType: IDeepCloneable<IamPolicyAnalysisResult.Types.Access>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access>
  nameWithType.vb: IDeepCloneable(Of IamPolicyAnalysisResult.Types.Access)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access)
  name.vb: IDeepCloneable(Of IamPolicyAnalysisResult.Types.Access)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
    name: IamPolicyAnalysisResult.Types.Access
    nameWithType: IamPolicyAnalysisResult.Types.Access
    fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.#ctor
  name: Access
  nameWithType: IamPolicyAnalysisResult.Types.Access.Access
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Access
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisResult.Types.Access
  nameWithType: IamPolicyAnalysisResult.Types.Access
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
  name: Role
  nameWithType: IamPolicyAnalysisResult.Types.Access.Role
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Role
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
  name: Permission
  nameWithType: IamPolicyAnalysisResult.Types.Access.Permission
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.Permission
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
  name: AnalysisState
  nameWithType: IamPolicyAnalysisResult.Types.Access.AnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.AnalysisState
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisState
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisState
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisState
  nameWithType: IamPolicyAnalysisState
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisState
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase*
  commentId: Overload:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  name: OneofAccessCase
  nameWithType: IamPolicyAnalysisResult.Types.Access.OneofAccessCase
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessCase
- uid: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
  commentId: T:Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
  parent: Google.Cloud.Asset.V1
  name: IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
  nameWithType: IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
  fullName: Google.Cloud.Asset.V1.IamPolicyAnalysisResult.Types.Access.OneofAccessOneofCase
