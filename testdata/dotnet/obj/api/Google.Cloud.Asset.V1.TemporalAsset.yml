### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Asset.V1.TemporalAsset
  commentId: T:Google.Cloud.Asset.V1.TemporalAsset
  id: TemporalAsset
  parent: Google.Cloud.Asset.V1
  children:
  - Google.Cloud.Asset.V1.TemporalAsset.#ctor
  - Google.Cloud.Asset.V1.TemporalAsset.#ctor(Google.Cloud.Asset.V1.TemporalAsset)
  - Google.Cloud.Asset.V1.TemporalAsset.Asset
  - Google.Cloud.Asset.V1.TemporalAsset.Deleted
  - Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
  - Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
  - Google.Cloud.Asset.V1.TemporalAsset.Window
  langs:
  - csharp
  - vb
  name: TemporalAsset
  nameWithType: TemporalAsset
  fullName: Google.Cloud.Asset.V1.TemporalAsset
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TemporalAsset
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 139
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nAn asset in Google Cloud and its temporal metadata, including the time window\nwhen it was observed and its status during that window.\n"
  example: []
  syntax:
    content: 'public sealed class TemporalAsset : IMessage<TemporalAsset>, IMessage, IEquatable<TemporalAsset>, IDeepCloneable<TemporalAsset>'
    content.vb: >-
      Public NotInheritable Class TemporalAsset
          Implements IMessage(Of TemporalAsset), IMessage, IEquatable(Of TemporalAsset), IDeepCloneable(Of TemporalAsset)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Asset.V1.TemporalAsset}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Cloud.Asset.V1.TemporalAsset}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.TemporalAsset}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Asset.V1.TemporalAsset.#ctor
  commentId: M:Google.Cloud.Asset.V1.TemporalAsset.#ctor
  id: '#ctor'
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: TemporalAsset()
  nameWithType: TemporalAsset.TemporalAsset()
  fullName: Google.Cloud.Asset.V1.TemporalAsset.TemporalAsset()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 155
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public TemporalAsset()
    content.vb: Public Sub New
  overload: Google.Cloud.Asset.V1.TemporalAsset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.#ctor(Google.Cloud.Asset.V1.TemporalAsset)
  commentId: M:Google.Cloud.Asset.V1.TemporalAsset.#ctor(Google.Cloud.Asset.V1.TemporalAsset)
  id: '#ctor(Google.Cloud.Asset.V1.TemporalAsset)'
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: TemporalAsset(TemporalAsset)
  nameWithType: TemporalAsset.TemporalAsset(TemporalAsset)
  fullName: Google.Cloud.Asset.V1.TemporalAsset.TemporalAsset(Google.Cloud.Asset.V1.TemporalAsset)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 162
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  syntax:
    content: public TemporalAsset(TemporalAsset other)
    parameters:
    - id: other
      type: Google.Cloud.Asset.V1.TemporalAsset
    content.vb: Public Sub New(other As TemporalAsset)
  overload: Google.Cloud.Asset.V1.TemporalAsset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.Window
  commentId: P:Google.Cloud.Asset.V1.TemporalAsset.Window
  id: Window
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: Window
  nameWithType: TemporalAsset.Window
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Window
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Window
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 183
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nThe time window when the asset data and state was observed.\n"
  example: []
  syntax:
    content: public TimeWindow Window { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.TimeWindow
    content.vb: Public Property Window As TimeWindow
  overload: Google.Cloud.Asset.V1.TemporalAsset.Window*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.Deleted
  commentId: P:Google.Cloud.Asset.V1.TemporalAsset.Deleted
  id: Deleted
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: TemporalAsset.Deleted
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Deleted
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Deleted
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 197
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nWhether the asset has been deleted or not.\n"
  example: []
  syntax:
    content: public bool Deleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deleted As Boolean
  overload: Google.Cloud.Asset.V1.TemporalAsset.Deleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.Asset
  commentId: P:Google.Cloud.Asset.V1.TemporalAsset.Asset
  id: Asset
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: TemporalAsset.Asset
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Asset
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Asset
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 211
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nAn asset in Google Cloud.\n"
  example: []
  syntax:
    content: public Asset Asset { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.Asset
    content.vb: Public Property Asset As Asset
  overload: Google.Cloud.Asset.V1.TemporalAsset.Asset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
  commentId: P:Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
  id: PriorAssetState
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: PriorAssetState
  nameWithType: TemporalAsset.PriorAssetState
  fullName: Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PriorAssetState
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 225
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nState of prior_asset.\n"
  example: []
  syntax:
    content: public TemporalAsset.Types.PriorAssetState PriorAssetState { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.TemporalAsset.Types.PriorAssetState
    content.vb: Public Property PriorAssetState As TemporalAsset.Types.PriorAssetState
  overload: Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
  commentId: P:Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
  id: PriorAsset
  parent: Google.Cloud.Asset.V1.TemporalAsset
  langs:
  - csharp
  - vb
  name: PriorAsset
  nameWithType: TemporalAsset.PriorAsset
  fullName: Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
      branch: 1daa3cc51230def21dd12842ffe26401a7f22791
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PriorAsset
    path: ../../../apis/Google.Cloud.Asset.V1/Google.Cloud.Asset.V1/Assets.cs
    startLine: 240
  assemblies:
  - Google.Cloud.Asset.V1
  namespace: Google.Cloud.Asset.V1
  summary: "\nPrior copy of the asset. Populated if prior_asset_state is PRESENT.\nCurrently this is only set for responses in Real-Time Feed.\n"
  example: []
  syntax:
    content: public Asset PriorAsset { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Asset.V1.Asset
    content.vb: Public Property PriorAsset As Asset
  overload: Google.Cloud.Asset.V1.TemporalAsset.PriorAsset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Asset.V1
  commentId: N:Google.Cloud.Asset.V1
  name: Google.Cloud.Asset.V1
  nameWithType: Google.Cloud.Asset.V1
  fullName: Google.Cloud.Asset.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Asset.V1.TemporalAsset}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Asset.V1.TemporalAsset}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<TemporalAsset>
  nameWithType: IMessage<TemporalAsset>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Asset.V1.TemporalAsset>
  nameWithType.vb: IMessage(Of TemporalAsset)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Asset.V1.TemporalAsset)
  name.vb: IMessage(Of TemporalAsset)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Cloud.Asset.V1.TemporalAsset}
  commentId: T:System.IEquatable{Google.Cloud.Asset.V1.TemporalAsset}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TemporalAsset>
  nameWithType: IEquatable<TemporalAsset>
  fullName: System.IEquatable<Google.Cloud.Asset.V1.TemporalAsset>
  nameWithType.vb: IEquatable(Of TemporalAsset)
  fullName.vb: System.IEquatable(Of Google.Cloud.Asset.V1.TemporalAsset)
  name.vb: IEquatable(Of TemporalAsset)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.TemporalAsset}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Asset.V1.TemporalAsset}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<TemporalAsset>
  nameWithType: IDeepCloneable<TemporalAsset>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Asset.V1.TemporalAsset>
  nameWithType.vb: IDeepCloneable(Of TemporalAsset)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Asset.V1.TemporalAsset)
  name.vb: IDeepCloneable(Of TemporalAsset)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Asset.V1.TemporalAsset
    name: TemporalAsset
    nameWithType: TemporalAsset
    fullName: Google.Cloud.Asset.V1.TemporalAsset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Asset.V1.TemporalAsset.#ctor*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.#ctor
  name: TemporalAsset
  nameWithType: TemporalAsset.TemporalAsset
  fullName: Google.Cloud.Asset.V1.TemporalAsset.TemporalAsset
- uid: Google.Cloud.Asset.V1.TemporalAsset
  commentId: T:Google.Cloud.Asset.V1.TemporalAsset
  parent: Google.Cloud.Asset.V1
  name: TemporalAsset
  nameWithType: TemporalAsset
  fullName: Google.Cloud.Asset.V1.TemporalAsset
- uid: Google.Cloud.Asset.V1.TemporalAsset.Window*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.Window
  name: Window
  nameWithType: TemporalAsset.Window
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Window
- uid: Google.Cloud.Asset.V1.TimeWindow
  commentId: T:Google.Cloud.Asset.V1.TimeWindow
  parent: Google.Cloud.Asset.V1
  name: TimeWindow
  nameWithType: TimeWindow
  fullName: Google.Cloud.Asset.V1.TimeWindow
- uid: Google.Cloud.Asset.V1.TemporalAsset.Deleted*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.Deleted
  name: Deleted
  nameWithType: TemporalAsset.Deleted
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Deleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Asset.V1.TemporalAsset.Asset*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.Asset
  name: Asset
  nameWithType: TemporalAsset.Asset
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Asset
- uid: Google.Cloud.Asset.V1.Asset
  commentId: T:Google.Cloud.Asset.V1.Asset
  parent: Google.Cloud.Asset.V1
  name: Asset
  nameWithType: Asset
  fullName: Google.Cloud.Asset.V1.Asset
- uid: Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
  name: PriorAssetState
  nameWithType: TemporalAsset.PriorAssetState
  fullName: Google.Cloud.Asset.V1.TemporalAsset.PriorAssetState
- uid: Google.Cloud.Asset.V1.TemporalAsset.Types.PriorAssetState
  commentId: T:Google.Cloud.Asset.V1.TemporalAsset.Types.PriorAssetState
  parent: Google.Cloud.Asset.V1
  name: TemporalAsset.Types.PriorAssetState
  nameWithType: TemporalAsset.Types.PriorAssetState
  fullName: Google.Cloud.Asset.V1.TemporalAsset.Types.PriorAssetState
- uid: Google.Cloud.Asset.V1.TemporalAsset.PriorAsset*
  commentId: Overload:Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
  name: PriorAsset
  nameWithType: TemporalAsset.PriorAsset
  fullName: Google.Cloud.Asset.V1.TemporalAsset.PriorAsset
