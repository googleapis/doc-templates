### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  id: "MemcacheParametersOrBuilder"
  parent: "com.google.cloud.memcache.v1"
  children:
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams(java.lang.String)"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId()"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes()"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams()"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount()"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap()"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault(java.lang.String,java.lang.String)"
  - "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow(java.lang.String)"
  langs:
  - "java"
  name: "MemcacheParametersOrBuilder"
  nameWithType: "MemcacheParametersOrBuilder"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  type: "Interface"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public interface MemcacheParametersOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams(java.lang.String)"
  id: "containsParams(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "containsParams(String key)"
  nameWithType: "MemcacheParametersOrBuilder.containsParams(String key)"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams(String key)"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined set of parameters to use in the memcached process.\n```\n\n`map<string, string> params = 3;`"
  syntax:
    content: "public abstract boolean containsParams(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId()"
  id: "getId()"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "MemcacheParametersOrBuilder.getId()"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId()"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The unique ID associated with this set of parameters. Users\n can use this id to determine if the parameters associated with the instance\n differ from the parameters associated with the nodes and any action needs\n to be taken to apply parameters on nodes.\n```\n\n`string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getId()"
    return:
      type: "java.lang.String"
      description: "The id."
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes()"
  id: "getIdBytes()"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getIdBytes()"
  nameWithType: "MemcacheParametersOrBuilder.getIdBytes()"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes()"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The unique ID associated with this set of parameters. Users\n can use this id to determine if the parameters associated with the instance\n differ from the parameters associated with the nodes and any action needs\n to be taken to apply parameters on nodes.\n```\n\n`string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getIdBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for id."
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams()"
  id: "getParams()"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getParams()"
  nameWithType: "MemcacheParametersOrBuilder.getParams()"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams()"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Use <xref uid=\"com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap()\" data-throw-if-not-resolved=\"false\">#getParamsMap()</xref> instead."
  syntax:
    content: "public abstract Map<String,String> getParams()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount()"
  id: "getParamsCount()"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getParamsCount()"
  nameWithType: "MemcacheParametersOrBuilder.getParamsCount()"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount()"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined set of parameters to use in the memcached process.\n```\n\n`map<string, string> params = 3;`"
  syntax:
    content: "public abstract int getParamsCount()"
    return:
      type: "int"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap()"
  id: "getParamsMap()"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getParamsMap()"
  nameWithType: "MemcacheParametersOrBuilder.getParamsMap()"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap()"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined set of parameters to use in the memcached process.\n```\n\n`map<string, string> params = 3;`"
  syntax:
    content: "public abstract Map<String,String> getParamsMap()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault(java.lang.String,java.lang.String)"
  id: "getParamsOrDefault(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getParamsOrDefault(String key, String defaultValue)"
  nameWithType: "MemcacheParametersOrBuilder.getParamsOrDefault(String key, String defaultValue)"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault(String key, String defaultValue)"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined set of parameters to use in the memcached process.\n```\n\n`map<string, string> params = 3;`"
  syntax:
    content: "public abstract String getParamsOrDefault(String key, String defaultValue)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    - id: "defaultValue"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow(java.lang.String)"
  id: "getParamsOrThrow(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  langs:
  - "java"
  name: "getParamsOrThrow(String key)"
  nameWithType: "MemcacheParametersOrBuilder.getParamsOrThrow(String key)"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow(String key)"
  overload: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined set of parameters to use in the memcached process.\n```\n\n`map<string, string> params = 3;`"
  syntax:
    content: "public abstract String getParamsOrThrow(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId*"
  name: "getId"
  nameWithType: "MemcacheParametersOrBuilder.getId"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getId"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.ByteString"
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes*"
  name: "getIdBytes"
  nameWithType: "MemcacheParametersOrBuilder.getIdBytes"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getIdBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount*"
  name: "getParamsCount"
  nameWithType: "MemcacheParametersOrBuilder.getParamsCount"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsCount"
  package: "com.google.cloud.memcache.v1"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams*"
  name: "containsParams"
  nameWithType: "MemcacheParametersOrBuilder.containsParams"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.containsParams"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams*"
  name: "getParams"
  nameWithType: "MemcacheParametersOrBuilder.getParams"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParams"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap*"
  name: "getParamsMap"
  nameWithType: "MemcacheParametersOrBuilder.getParamsMap"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsMap"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault*"
  name: "getParamsOrDefault"
  nameWithType: "MemcacheParametersOrBuilder.getParamsOrDefault"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrDefault"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow*"
  name: "getParamsOrThrow"
  nameWithType: "MemcacheParametersOrBuilder.getParamsOrThrow"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder.getParamsOrThrow"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
