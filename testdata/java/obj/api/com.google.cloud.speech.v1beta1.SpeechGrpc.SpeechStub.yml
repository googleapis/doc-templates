### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  id: "SpeechStub"
  parent: "com.google.cloud.speech.v1beta1"
  children:
  - "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize(com.google.cloud.speech.v1beta1.AsyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  - "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize(io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeResponse>)"
  - "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize(com.google.cloud.speech.v1beta1.SyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.SyncRecognizeResponse>)"
  langs:
  - "java"
  name: "SpeechGrpc.SpeechStub"
  nameWithType: "SpeechGrpc.SpeechStub"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  type: "Class"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\nService that implements Google Cloud Speech API.\n```"
  syntax:
    content: "public static final class SpeechGrpc.SpeechStub extends AbstractStub<SpeechGrpc.SpeechStub>"
  inheritance:
  - "java.lang.Object"
  - "io.grpc.stub.AbstractStub"
  inheritedMembers:
  - "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
  - "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
  - "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
  - "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  - "io.grpc.stub.AbstractStub.getCallOptions()"
  - "io.grpc.stub.AbstractStub.getChannel()"
  - "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
  - "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
  - "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
  - "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
  - "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
  - "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
  - "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
  - "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
  - "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
  - "io.grpc.stub.AbstractStub.withWaitForReady()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub(io.grpc.Channel)"
  id: "SpeechStub(io.grpc.Channel)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "SpeechStub(Channel channel)"
  nameWithType: "SpeechGrpc.SpeechStub.SpeechStub(Channel channel)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub(Channel channel)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1beta1"
  syntax:
    content: "private SpeechStub(Channel channel)"
    parameters:
    - id: "channel"
      type: "io.grpc.Channel"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub(io.grpc.Channel,io.grpc.CallOptions)"
  id: "SpeechStub(io.grpc.Channel,io.grpc.CallOptions)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "SpeechStub(Channel channel, CallOptions callOptions)"
  nameWithType: "SpeechGrpc.SpeechStub.SpeechStub(Channel channel, CallOptions callOptions)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub(Channel channel, CallOptions callOptions)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1beta1"
  syntax:
    content: "private SpeechStub(Channel channel, CallOptions callOptions)"
    parameters:
    - id: "channel"
      type: "io.grpc.Channel"
    - id: "callOptions"
      type: "io.grpc.CallOptions"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize(com.google.cloud.speech.v1beta1.AsyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "asyncRecognize(com.google.cloud.speech.v1beta1.AsyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "asyncRecognize(AsyncRecognizeRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "SpeechGrpc.SpeechStub.asyncRecognize(AsyncRecognizeRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize(AsyncRecognizeRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\nPerforms asynchronous speech recognition: receive results via the\n [google.longrunning.Operations]\n (/speech/reference/rest/v1beta1/operations#Operation)\n interface. Returns either an\n `Operation.error` or an `Operation.response` which contains\n an `AsyncRecognizeResponse` message.\n```"
  syntax:
    content: "public void asyncRecognize(AsyncRecognizeRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.speech.v1beta1.AsyncRecognizeRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  id: "build(io.grpc.Channel,io.grpc.CallOptions)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "build(Channel channel, CallOptions callOptions)"
  nameWithType: "SpeechGrpc.SpeechStub.build(Channel channel, CallOptions callOptions)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build(Channel channel, CallOptions callOptions)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build*"
  overridden: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  syntax:
    content: "protected SpeechGrpc.SpeechStub build(Channel channel, CallOptions callOptions)"
    parameters:
    - id: "channel"
      type: "io.grpc.Channel"
    - id: "callOptions"
      type: "io.grpc.CallOptions"
    return:
      type: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize(io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeResponse>)"
  id: "streamingRecognize(io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeResponse>)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "streamingRecognize(StreamObserver<StreamingRecognizeResponse> responseObserver)"
  nameWithType: "SpeechGrpc.SpeechStub.streamingRecognize(StreamObserver<StreamingRecognizeResponse> responseObserver)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize(StreamObserver<StreamingRecognizeResponse> responseObserver)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\nPerforms bidirectional streaming speech recognition: receive results while\n sending audio. This method is only available via the gRPC API (not REST).\n```"
  syntax:
    content: "public StreamObserver<StreamingRecognizeRequest> streamingRecognize(StreamObserver<StreamingRecognizeResponse> responseObserver)"
    parameters:
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeResponse>"
    return:
      type: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeRequest>"
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize(com.google.cloud.speech.v1beta1.SyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.SyncRecognizeResponse>)"
  id: "syncRecognize(com.google.cloud.speech.v1beta1.SyncRecognizeRequest,io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.SyncRecognizeResponse>)"
  parent: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub"
  langs:
  - "java"
  name: "syncRecognize(SyncRecognizeRequest request, StreamObserver<SyncRecognizeResponse> responseObserver)"
  nameWithType: "SpeechGrpc.SpeechStub.syncRecognize(SyncRecognizeRequest request, StreamObserver<SyncRecognizeResponse> responseObserver)"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize(SyncRecognizeRequest request, StreamObserver<SyncRecognizeResponse> responseObserver)"
  overload: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\nPerforms synchronous speech recognition: receive results after all audio\n has been sent and processed.\n```"
  syntax:
    content: "public void syncRecognize(SyncRecognizeRequest request, StreamObserver<SyncRecognizeResponse> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.speech.v1beta1.SyncRecognizeRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.SyncRecognizeResponse>"
references:
- uid: "io.grpc.Channel"
  spec.java:
  - uid: "io.grpc.Channel"
    name: "Channel"
    fullName: "io.grpc.Channel"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub*"
  name: "SpeechStub"
  nameWithType: "SpeechGrpc.SpeechStub.SpeechStub"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.SpeechStub"
  package: "com.google.cloud.speech.v1beta1"
- uid: "io.grpc.CallOptions"
  spec.java:
  - uid: "io.grpc.CallOptions"
    name: "CallOptions"
    fullName: "io.grpc.CallOptions"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build*"
  name: "build"
  nameWithType: "SpeechGrpc.SpeechStub.build"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.build"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.SyncRecognizeRequest"
  name: "SyncRecognizeRequest"
  nameWithType: "SyncRecognizeRequest"
  fullName: "com.google.cloud.speech.v1beta1.SyncRecognizeRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.SyncRecognizeResponse>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1beta1.SyncRecognizeResponse"
    name: "SyncRecognizeResponse"
    fullName: "com.google.cloud.speech.v1beta1.SyncRecognizeResponse"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize*"
  name: "syncRecognize"
  nameWithType: "SpeechGrpc.SpeechStub.syncRecognize"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.syncRecognize"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.AsyncRecognizeRequest"
  name: "AsyncRecognizeRequest"
  nameWithType: "AsyncRecognizeRequest"
  fullName: "com.google.cloud.speech.v1beta1.AsyncRecognizeRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
    isExternal: true
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize*"
  name: "asyncRecognize"
  nameWithType: "SpeechGrpc.SpeechStub.asyncRecognize"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.asyncRecognize"
  package: "com.google.cloud.speech.v1beta1"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeResponse>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1beta1.StreamingRecognizeResponse"
    name: "StreamingRecognizeResponse"
    fullName: "com.google.cloud.speech.v1beta1.StreamingRecognizeResponse"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.speech.v1beta1.StreamingRecognizeRequest>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1beta1.StreamingRecognizeRequest"
    name: "StreamingRecognizeRequest"
    fullName: "com.google.cloud.speech.v1beta1.StreamingRecognizeRequest"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize*"
  name: "streamingRecognize"
  nameWithType: "SpeechGrpc.SpeechStub.streamingRecognize"
  fullName: "com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub.streamingRecognize"
  package: "com.google.cloud.speech.v1beta1"
- uid: "io.grpc.stub.AbstractStub<com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub>"
  name: "AbstractStub<SpeechGrpc.SpeechStub>"
  nameWithType: "AbstractStub<SpeechGrpc.SpeechStub>"
  fullName: "io.grpc.stub.AbstractStub<com.google.cloud.speech.v1beta1.SpeechGrpc.SpeechStub>"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "io.grpc.stub.AbstractStub.getChannel()"
  name: "AbstractStub.getChannel()"
  nameWithType: "AbstractStub.getChannel()"
  fullName: "io.grpc.stub.AbstractStub.getChannel()"
- uid: "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
  name: "AbstractStub.withExecutor(Executor)"
  nameWithType: "AbstractStub.withExecutor(Executor)"
  fullName: "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
- uid: "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
  name: "AbstractStub.<T>withOption(CallOptions.Key<T>,T)"
  nameWithType: "AbstractStub.<T>withOption(CallOptions.Key<T>,T)"
  fullName: "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
- uid: "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
  name: "AbstractStub.<T>newStub(AbstractStub.StubFactory<T>,Channel)"
  nameWithType: "AbstractStub.<T>newStub(AbstractStub.StubFactory<T>,Channel)"
  fullName: "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
- uid: "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
  name: "AbstractStub.withMaxOutboundMessageSize(int)"
  nameWithType: "AbstractStub.withMaxOutboundMessageSize(int)"
  fullName: "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  name: "AbstractStub.build(Channel,CallOptions)"
  nameWithType: "AbstractStub.build(Channel,CallOptions)"
  fullName: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.grpc.stub.AbstractStub.getCallOptions()"
  name: "AbstractStub.getCallOptions()"
  nameWithType: "AbstractStub.getCallOptions()"
  fullName: "io.grpc.stub.AbstractStub.getCallOptions()"
- uid: "io.grpc.stub.AbstractStub.withWaitForReady()"
  name: "AbstractStub.withWaitForReady()"
  nameWithType: "AbstractStub.withWaitForReady()"
  fullName: "io.grpc.stub.AbstractStub.withWaitForReady()"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
  name: "AbstractStub.withDeadline(Deadline)"
  nameWithType: "AbstractStub.withDeadline(Deadline)"
  fullName: "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
- uid: "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
  name: "AbstractStub.withMaxInboundMessageSize(int)"
  nameWithType: "AbstractStub.withMaxInboundMessageSize(int)"
  fullName: "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
  name: "AbstractStub.withInterceptors(ClientInterceptor)"
  nameWithType: "AbstractStub.withInterceptors(ClientInterceptor)"
  fullName: "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
- uid: "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
  name: "AbstractStub.withCompression(String)"
  nameWithType: "AbstractStub.withCompression(String)"
  fullName: "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
  name: "AbstractStub.withDeadlineAfter(long,TimeUnit)"
  nameWithType: "AbstractStub.withDeadlineAfter(long,TimeUnit)"
  fullName: "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
- uid: "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
  name: "AbstractStub.<T>newStub(AbstractStub.StubFactory<T>,Channel,CallOptions)"
  nameWithType: "AbstractStub.<T>newStub(AbstractStub.StubFactory<T>,Channel,CallOptions)"
  fullName: "io.grpc.stub.AbstractStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
- uid: "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
  name: "AbstractStub.withChannel(Channel)"
  nameWithType: "AbstractStub.withChannel(Channel)"
  fullName: "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
- uid: "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
  name: "AbstractStub.withCallCredentials(CallCredentials)"
  nameWithType: "AbstractStub.withCallCredentials(CallCredentials)"
  fullName: "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
- uid: "io.grpc.stub.StreamObserver"
  name: "StreamObserver"
  nameWithType: "StreamObserver"
  fullName: "io.grpc.stub.StreamObserver"
- uid: "com.google.cloud.speech.v1beta1.SyncRecognizeResponse"
  name: "SyncRecognizeResponse"
  nameWithType: "SyncRecognizeResponse"
  fullName: "com.google.cloud.speech.v1beta1.SyncRecognizeResponse"
- uid: "com.google.longrunning.Operation"
  isExternal: true
  name: "Operation"
  nameWithType: "Operation"
  fullName: "com.google.longrunning.Operation"
- uid: "com.google.cloud.speech.v1beta1.StreamingRecognizeResponse"
  name: "StreamingRecognizeResponse"
  nameWithType: "StreamingRecognizeResponse"
  fullName: "com.google.cloud.speech.v1beta1.StreamingRecognizeResponse"
- uid: "com.google.cloud.speech.v1beta1.StreamingRecognizeRequest"
  name: "StreamingRecognizeRequest"
  nameWithType: "StreamingRecognizeRequest"
  fullName: "com.google.cloud.speech.v1beta1.StreamingRecognizeRequest"
- uid: "io.grpc.stub.AbstractStub"
  name: "AbstractStub"
  nameWithType: "AbstractStub"
  fullName: "io.grpc.stub.AbstractStub"
- uid: "T>withOption(io.grpc.CallOptions.Key"
  name: "T>withOption(CallOptions.Key"
  nameWithType: "T>withOption(CallOptions.Key"
  fullName: "T>withOption(io.grpc.CallOptions.Key"
- uid: "T>,T)"
  name: "T>,T)"
  nameWithType: "T>,T)"
  fullName: "T>,T)"
- uid: "io.grpc.stub.AbstractStub."
  name: "AbstractStub."
  nameWithType: "AbstractStub."
  fullName: "io.grpc.stub.AbstractStub."
- uid: "T>,io.grpc.Channel)"
  name: "T>,Channel)"
  nameWithType: "T>,Channel)"
  fullName: "T>,io.grpc.Channel)"
- uid: "T>newStub(io.grpc.stub.AbstractStub.StubFactory"
  name: "T>newStub(AbstractStub.StubFactory"
  nameWithType: "T>newStub(AbstractStub.StubFactory"
  fullName: "T>newStub(io.grpc.stub.AbstractStub.StubFactory"
- uid: "T>,io.grpc.Channel,io.grpc.CallOptions)"
  name: "T>,Channel,CallOptions)"
  nameWithType: "T>,Channel,CallOptions)"
  fullName: "T>,io.grpc.Channel,io.grpc.CallOptions)"
