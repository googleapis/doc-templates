### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  id: "CloudMemcacheClient"
  parent: "com.google.cloud.memcache.v1"
  children:
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesFixedSizeCollection"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPage"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(com.google.cloud.memcache.v1.ApplyParametersRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(com.google.cloud.memcache.v1.InstanceName,java.util.List<java.lang.String>,boolean)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(java.lang.String,java.util.List<java.lang.String>,boolean)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination(long,java.util.concurrent.TimeUnit)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.close()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.create()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.create(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.create(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(com.google.cloud.memcache.v1.CreateInstanceRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(com.google.cloud.memcache.v1.LocationName,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(java.lang.String,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(com.google.cloud.memcache.v1.DeleteInstanceRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(com.google.cloud.memcache.v1.InstanceName)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(java.lang.String)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(com.google.cloud.memcache.v1.GetInstanceRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(com.google.cloud.memcache.v1.InstanceName)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(java.lang.String)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(com.google.cloud.memcache.v1.ListInstancesRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(com.google.cloud.memcache.v1.LocationName)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(java.lang.String)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(com.google.cloud.memcache.v1.Instance,com.google.protobuf.FieldMask)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(com.google.cloud.memcache.v1.UpdateInstanceRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(com.google.cloud.memcache.v1.InstanceName,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(com.google.cloud.memcache.v1.UpdateParametersRequest)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(java.lang.String,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable()"
  - "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable()"
  langs:
  - "java"
  name: "CloudMemcacheClient"
  nameWithType: "CloudMemcacheClient"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  type: "Class"
  package: "com.google.cloud.memcache.v1"
  summary: "Service Description: Configures and manages Cloud Memorystore for Memcached instances.\n\nThe \\`memcache.googleapis.com\\` service implements the Google Cloud Memorystore for Memcached API and defines the following resource model for managing Memorystore Memcached (also called Memcached below) instances:\n\n *  The service works with a collection of cloud projects, named: \\`/projects/\\*\\`\n *  Each project has a collection of available locations, named: \\`/locations/\\*\\`\n *  Each location has a collection of Memcached instances, named: \\`/instances/\\*\\`\n *  As such, Memcached instances are resources of the form: \\`/projects/\\{project\\_id\\}/locations/\\{location\\_id\\}/instances/\\{instance\\_id\\}\\`\n\nNote that location\\_id must be a GCP \\`region\\`; for example:\n\n *  \\`projects/my-memcached-project/locations/us-central1/instances/my-memcached\\`\n\nThis class provides the ability to make remote calls to the backing service through method calls that map to API methods. Sample code to get started:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   InstanceName name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\");\n   Instance response = cloudMemcacheClient.getInstance(name);\n }\n```\n\nNote: close() needs to be called on the CloudMemcacheClient object to clean up resources such as threads. In the example above, try-with-resources is used, which automatically calls close().\n\nThe surface of this class includes several types of Java methods for each of the API's methods:\n\n1.  A \"flattened\" method. With this type of method, the fields of the request type have been converted into function parameters. It may be the case that not all fields are available as parameters, and not every API method will have a flattened method entry point.\n2.  A \"request object\" method. This type of method only takes one parameter, a request object, which must be constructed before the call. Not every API method will have a request object method.\n3.  A \"callable\" method. This type of method takes no parameters and returns an immutable API callable object, which can be used to initiate calls to the service.\n\nSee the individual methods for example code.\n\nMany parameters require resource names to be formatted in a particular way. To assist with these names, this class includes a format method for each type of name, and additionally a parse method to extract the individual identifiers contained within names that are returned.\n\nThis class can be customized by passing in a custom instance of CloudMemcacheSettings to create(). For example:\n\nTo customize credentials:\n\n```java\nCloudMemcacheSettings cloudMemcacheSettings =\n     CloudMemcacheSettings.newBuilder()\n         .setCredentialsProvider(FixedCredentialsProvider.create(myCredentials))\n         .build();\n CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create(cloudMemcacheSettings);\n```\n\nTo customize the endpoint:\n\n```java\nCloudMemcacheSettings cloudMemcacheSettings =\n     CloudMemcacheSettings.newBuilder().setEndpoint(myEndpoint).build();\n CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create(cloudMemcacheSettings);\n```\n\nPlease refer to the GitHub repository's samples for more quickstart code snippets."
  syntax:
    content: "public class CloudMemcacheClient implements BackgroundResource"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.google.api.gax.core.BackgroundResource"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  id: "CloudMemcacheClient(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "CloudMemcacheClient(CloudMemcacheSettings settings)"
  nameWithType: "CloudMemcacheClient.CloudMemcacheClient(CloudMemcacheSettings settings)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(CloudMemcacheSettings settings)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient*"
  type: "Constructor"
  package: "com.google.cloud.memcache.v1"
  summary: "Constructs an instance of CloudMemcacheClient, using the given settings. This is protected so that it is easy to make a subclass, but otherwise, the static factory methods should be preferred."
  syntax:
    content: "protected CloudMemcacheClient(CloudMemcacheSettings settings)"
    parameters:
    - id: "settings"
      type: "com.google.cloud.memcache.v1.CloudMemcacheSettings"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  id: "CloudMemcacheClient(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "CloudMemcacheClient(CloudMemcacheStub stub)"
  nameWithType: "CloudMemcacheClient.CloudMemcacheClient(CloudMemcacheStub stub)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient(CloudMemcacheStub stub)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient*"
  type: "Constructor"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "protected CloudMemcacheClient(CloudMemcacheStub stub)"
    parameters:
    - id: "stub"
      type: "com.google.cloud.memcache.v1.stub.CloudMemcacheStub"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(com.google.cloud.memcache.v1.ApplyParametersRequest)"
  id: "applyParametersAsync(com.google.cloud.memcache.v1.ApplyParametersRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "applyParametersAsync(ApplyParametersRequest request)"
  nameWithType: "CloudMemcacheClient.applyParametersAsync(ApplyParametersRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(ApplyParametersRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "ApplyParameters will restart the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   ApplyParametersRequest request =\n       ApplyParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .addAllNodeIds(new ArrayList())\n           .setApplyAll(true)\n           .build();\n   Instance response = cloudMemcacheClient.applyParametersAsync(request).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> applyParametersAsync(ApplyParametersRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.ApplyParametersRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(com.google.cloud.memcache.v1.InstanceName,java.util.List<java.lang.String>,boolean)"
  id: "applyParametersAsync(com.google.cloud.memcache.v1.InstanceName,java.util.List<java.lang.String>,boolean)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "applyParametersAsync(InstanceName name, List<String> nodeIds, boolean applyAll)"
  nameWithType: "CloudMemcacheClient.applyParametersAsync(InstanceName name, List<String> nodeIds, boolean applyAll)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(InstanceName name, List<String> nodeIds, boolean applyAll)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "ApplyParameters will restart the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   InstanceName name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\");\n   List nodeIds = new ArrayList<>();\n   boolean applyAll = true;\n   Instance response = cloudMemcacheClient.applyParametersAsync(name, nodeIds, applyAll).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> applyParametersAsync(InstanceName name, List<String> nodeIds, boolean applyAll)"
    parameters:
    - id: "name"
      type: "com.google.cloud.memcache.v1.InstanceName"
      description: "Required. Resource name of the Memcached instance for which parameter group updates\n     should be applied."
    - id: "nodeIds"
      type: "java.util.List<java.lang.String>"
      description: "Nodes to which we should apply the instance-level parameter group."
    - id: "applyAll"
      type: "boolean"
      description: "Whether to apply instance-level parameter group to all nodes. If set to true,\n     will explicitly restrict users from specifying any nodes, and apply parameter group updates\n     to all nodes within the instance."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(java.lang.String,java.util.List<java.lang.String>,boolean)"
  id: "applyParametersAsync(java.lang.String,java.util.List<java.lang.String>,boolean)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "applyParametersAsync(String name, List<String> nodeIds, boolean applyAll)"
  nameWithType: "CloudMemcacheClient.applyParametersAsync(String name, List<String> nodeIds, boolean applyAll)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync(String name, List<String> nodeIds, boolean applyAll)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "ApplyParameters will restart the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString();\n   List nodeIds = new ArrayList<>();\n   boolean applyAll = true;\n   Instance response = cloudMemcacheClient.applyParametersAsync(name, nodeIds, applyAll).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> applyParametersAsync(String name, List<String> nodeIds, boolean applyAll)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "Required. Resource name of the Memcached instance for which parameter group updates\n     should be applied."
    - id: "nodeIds"
      type: "java.util.List<java.lang.String>"
      description: "Nodes to which we should apply the instance-level parameter group."
    - id: "applyAll"
      type: "boolean"
      description: "Whether to apply instance-level parameter group to all nodes. If set to true,\n     will explicitly restrict users from specifying any nodes, and apply parameter group updates\n     to all nodes within the instance."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable()"
  id: "applyParametersCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "applyParametersCallable()"
  nameWithType: "CloudMemcacheClient.applyParametersCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "ApplyParameters will restart the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   ApplyParametersRequest request =\n       ApplyParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .addAllNodeIds(new ArrayList())\n           .setApplyAll(true)\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.applyParametersCallable().futureCall(request);\n   // Do something.\n   Operation response = future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<ApplyParametersRequest,Operation> applyParametersCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable()"
  id: "applyParametersOperationCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "applyParametersOperationCallable()"
  nameWithType: "CloudMemcacheClient.applyParametersOperationCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "ApplyParameters will restart the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   ApplyParametersRequest request =\n       ApplyParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .addAllNodeIds(new ArrayList())\n           .setApplyAll(true)\n           .build();\n   OperationFuture future =\n       cloudMemcacheClient.applyParametersOperationCallable().futureCall(request);\n   // Do something.\n   Instance response = future.get();\n }\n```"
  syntax:
    content: "public final OperationCallable<ApplyParametersRequest,Instance,OperationMetadata> applyParametersOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination(long,java.util.concurrent.TimeUnit)"
  id: "awaitTermination(long,java.util.concurrent.TimeUnit)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "awaitTermination(long duration, TimeUnit unit)"
  nameWithType: "CloudMemcacheClient.awaitTermination(long duration, TimeUnit unit)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination(long duration, TimeUnit unit)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public boolean awaitTermination(long duration, TimeUnit unit)"
    parameters:
    - id: "duration"
      type: "long"
    - id: "unit"
      type: "java.util.concurrent.TimeUnit"
    return:
      type: "boolean"
  exceptions:
  - type: "java.lang.InterruptedException"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.close()"
  id: "close()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "close()"
  nameWithType: "CloudMemcacheClient.close()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.close()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.close*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public final void close()"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.create()"
  id: "create()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "create()"
  nameWithType: "CloudMemcacheClient.create()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.create()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.create*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Constructs an instance of CloudMemcacheClient with default settings."
  syntax:
    content: "public static final CloudMemcacheClient create()"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.create(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  id: "create(com.google.cloud.memcache.v1.CloudMemcacheSettings)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "create(CloudMemcacheSettings settings)"
  nameWithType: "CloudMemcacheClient.create(CloudMemcacheSettings settings)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.create(CloudMemcacheSettings settings)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.create*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Constructs an instance of CloudMemcacheClient, using the given settings. The channels are created based on the settings passed in, or defaults for any settings that are not set."
  syntax:
    content: "public static final CloudMemcacheClient create(CloudMemcacheSettings settings)"
    parameters:
    - id: "settings"
      type: "com.google.cloud.memcache.v1.CloudMemcacheSettings"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.create(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  id: "create(com.google.cloud.memcache.v1.stub.CloudMemcacheStub)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "create(CloudMemcacheStub stub)"
  nameWithType: "CloudMemcacheClient.create(CloudMemcacheStub stub)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.create(CloudMemcacheStub stub)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.create*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Constructs an instance of CloudMemcacheClient, using the given stub for making calls. This is for advanced usage - prefer using create(CloudMemcacheSettings)."
  syntax:
    content: "public static final CloudMemcacheClient create(CloudMemcacheStub stub)"
    parameters:
    - id: "stub"
      type: "com.google.cloud.memcache.v1.stub.CloudMemcacheStub"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(com.google.cloud.memcache.v1.CreateInstanceRequest)"
  id: "createInstanceAsync(com.google.cloud.memcache.v1.CreateInstanceRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "createInstanceAsync(CreateInstanceRequest request)"
  nameWithType: "CloudMemcacheClient.createInstanceAsync(CreateInstanceRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(CreateInstanceRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Creates a new Instance in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   CreateInstanceRequest request =\n       CreateInstanceRequest.newBuilder()\n           .setParent(LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString())\n           .setInstanceId(\"instanceId902024336\")\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   Instance response = cloudMemcacheClient.createInstanceAsync(request).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> createInstanceAsync(CreateInstanceRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.CreateInstanceRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(com.google.cloud.memcache.v1.LocationName,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  id: "createInstanceAsync(com.google.cloud.memcache.v1.LocationName,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "createInstanceAsync(LocationName parent, Instance instance, String instanceId)"
  nameWithType: "CloudMemcacheClient.createInstanceAsync(LocationName parent, Instance instance, String instanceId)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(LocationName parent, Instance instance, String instanceId)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Creates a new Instance in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   LocationName parent = LocationName.of(\"[PROJECT]\", \"[LOCATION]\");\n   Instance instance = Instance.newBuilder().build();\n   String instanceId = \"instanceId902024336\";\n   Instance response =\n       cloudMemcacheClient.createInstanceAsync(parent, instance, instanceId).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> createInstanceAsync(LocationName parent, Instance instance, String instanceId)"
    parameters:
    - id: "parent"
      type: "com.google.cloud.memcache.v1.LocationName"
      description: "Required. The resource name of the instance location using the form:\n     `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region"
    - id: "instance"
      type: "com.google.cloud.memcache.v1.Instance"
      description: "Required. A Memcached Instance"
    - id: "instanceId"
      type: "java.lang.String"
      description: "Required. The logical name of the Memcached instance in the user project with\n     the following restrictions:\n     <ul>\n       <li>Must contain only lowercase letters, numbers, and hyphens.\n       <li>Must start with a letter.\n       <li>Must be between 1-40 characters.\n       <li>Must end with a number or a letter.\n       <li>Must be unique within the user project / location\n     </ul>\n     <p>If any of the above are not met, will raise an invalid argument error."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(java.lang.String,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  id: "createInstanceAsync(java.lang.String,com.google.cloud.memcache.v1.Instance,java.lang.String)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "createInstanceAsync(String parent, Instance instance, String instanceId)"
  nameWithType: "CloudMemcacheClient.createInstanceAsync(String parent, Instance instance, String instanceId)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync(String parent, Instance instance, String instanceId)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Creates a new Instance in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String parent = LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString();\n   Instance instance = Instance.newBuilder().build();\n   String instanceId = \"instanceId902024336\";\n   Instance response =\n       cloudMemcacheClient.createInstanceAsync(parent, instance, instanceId).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> createInstanceAsync(String parent, Instance instance, String instanceId)"
    parameters:
    - id: "parent"
      type: "java.lang.String"
      description: "Required. The resource name of the instance location using the form:\n     `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region"
    - id: "instance"
      type: "com.google.cloud.memcache.v1.Instance"
      description: "Required. A Memcached Instance"
    - id: "instanceId"
      type: "java.lang.String"
      description: "Required. The logical name of the Memcached instance in the user project with\n     the following restrictions:\n     <ul>\n       <li>Must contain only lowercase letters, numbers, and hyphens.\n       <li>Must start with a letter.\n       <li>Must be between 1-40 characters.\n       <li>Must end with a number or a letter.\n       <li>Must be unique within the user project / location\n     </ul>\n     <p>If any of the above are not met, will raise an invalid argument error."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable()"
  id: "createInstanceCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "createInstanceCallable()"
  nameWithType: "CloudMemcacheClient.createInstanceCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Creates a new Instance in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   CreateInstanceRequest request =\n       CreateInstanceRequest.newBuilder()\n           .setParent(LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString())\n           .setInstanceId(\"instanceId902024336\")\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.createInstanceCallable().futureCall(request);\n   // Do something.\n   Operation response = future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<CreateInstanceRequest,Operation> createInstanceCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable()"
  id: "createInstanceOperationCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "createInstanceOperationCallable()"
  nameWithType: "CloudMemcacheClient.createInstanceOperationCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Creates a new Instance in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   CreateInstanceRequest request =\n       CreateInstanceRequest.newBuilder()\n           .setParent(LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString())\n           .setInstanceId(\"instanceId902024336\")\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   OperationFuture future =\n       cloudMemcacheClient.createInstanceOperationCallable().futureCall(request);\n   // Do something.\n   Instance response = future.get();\n }\n```"
  syntax:
    content: "public final OperationCallable<CreateInstanceRequest,Instance,OperationMetadata> createInstanceOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(com.google.cloud.memcache.v1.DeleteInstanceRequest)"
  id: "deleteInstanceAsync(com.google.cloud.memcache.v1.DeleteInstanceRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "deleteInstanceAsync(DeleteInstanceRequest request)"
  nameWithType: "CloudMemcacheClient.deleteInstanceAsync(DeleteInstanceRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(DeleteInstanceRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Deletes a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   DeleteInstanceRequest request =\n       DeleteInstanceRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .build();\n   cloudMemcacheClient.deleteInstanceAsync(request).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Empty,OperationMetadata> deleteInstanceAsync(DeleteInstanceRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(com.google.cloud.memcache.v1.InstanceName)"
  id: "deleteInstanceAsync(com.google.cloud.memcache.v1.InstanceName)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "deleteInstanceAsync(InstanceName name)"
  nameWithType: "CloudMemcacheClient.deleteInstanceAsync(InstanceName name)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(InstanceName name)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Deletes a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   InstanceName name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\");\n   cloudMemcacheClient.deleteInstanceAsync(name).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Empty,OperationMetadata> deleteInstanceAsync(InstanceName name)"
    parameters:
    - id: "name"
      type: "com.google.cloud.memcache.v1.InstanceName"
      description: "Required. Memcached instance resource name in the format:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id`\n     refers to a GCP region"
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(java.lang.String)"
  id: "deleteInstanceAsync(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "deleteInstanceAsync(String name)"
  nameWithType: "CloudMemcacheClient.deleteInstanceAsync(String name)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync(String name)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Deletes a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString();\n   cloudMemcacheClient.deleteInstanceAsync(name).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Empty,OperationMetadata> deleteInstanceAsync(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "Required. Memcached instance resource name in the format:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id`\n     refers to a GCP region"
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable()"
  id: "deleteInstanceCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "deleteInstanceCallable()"
  nameWithType: "CloudMemcacheClient.deleteInstanceCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Deletes a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   DeleteInstanceRequest request =\n       DeleteInstanceRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.deleteInstanceCallable().futureCall(request);\n   // Do something.\n   future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<DeleteInstanceRequest,Operation> deleteInstanceCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable()"
  id: "deleteInstanceOperationCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "deleteInstanceOperationCallable()"
  nameWithType: "CloudMemcacheClient.deleteInstanceOperationCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Deletes a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   DeleteInstanceRequest request =\n       DeleteInstanceRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .build();\n   OperationFuture future =\n       cloudMemcacheClient.deleteInstanceOperationCallable().futureCall(request);\n   // Do something.\n   future.get();\n }\n```"
  syntax:
    content: "public final OperationCallable<DeleteInstanceRequest,Empty,OperationMetadata> deleteInstanceOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(com.google.cloud.memcache.v1.GetInstanceRequest)"
  id: "getInstance(com.google.cloud.memcache.v1.GetInstanceRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getInstance(GetInstanceRequest request)"
  nameWithType: "CloudMemcacheClient.getInstance(GetInstanceRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(GetInstanceRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Gets details of a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   GetInstanceRequest request =\n       GetInstanceRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .build();\n   Instance response = cloudMemcacheClient.getInstance(request);\n }\n```"
  syntax:
    content: "public final Instance getInstance(GetInstanceRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.GetInstanceRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.cloud.memcache.v1.Instance"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(com.google.cloud.memcache.v1.InstanceName)"
  id: "getInstance(com.google.cloud.memcache.v1.InstanceName)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getInstance(InstanceName name)"
  nameWithType: "CloudMemcacheClient.getInstance(InstanceName name)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(InstanceName name)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Gets details of a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   InstanceName name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\");\n   Instance response = cloudMemcacheClient.getInstance(name);\n }\n```"
  syntax:
    content: "public final Instance getInstance(InstanceName name)"
    parameters:
    - id: "name"
      type: "com.google.cloud.memcache.v1.InstanceName"
      description: "Required. Memcached instance resource name in the format:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id`\n     refers to a GCP region"
    return:
      type: "com.google.cloud.memcache.v1.Instance"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(java.lang.String)"
  id: "getInstance(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getInstance(String name)"
  nameWithType: "CloudMemcacheClient.getInstance(String name)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance(String name)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Gets details of a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString();\n   Instance response = cloudMemcacheClient.getInstance(name);\n }\n```"
  syntax:
    content: "public final Instance getInstance(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "Required. Memcached instance resource name in the format:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id`\n     refers to a GCP region"
    return:
      type: "com.google.cloud.memcache.v1.Instance"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable()"
  id: "getInstanceCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getInstanceCallable()"
  nameWithType: "CloudMemcacheClient.getInstanceCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Gets details of a single Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   GetInstanceRequest request =\n       GetInstanceRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .build();\n   ApiFuture future = cloudMemcacheClient.getInstanceCallable().futureCall(request);\n   // Do something.\n   Instance response = future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<GetInstanceRequest,Instance> getInstanceCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.GetInstanceRequest,com.google.cloud.memcache.v1.Instance>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient()"
  id: "getOperationsClient()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getOperationsClient()"
  nameWithType: "CloudMemcacheClient.getOperationsClient()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Returns the OperationsClient that can be used to query the status of a long-running operation returned by another API method call."
  syntax:
    content: "public final OperationsClient getOperationsClient()"
    return:
      type: "com.google.longrunning.OperationsClient"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings()"
  id: "getSettings()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getSettings()"
  nameWithType: "CloudMemcacheClient.getSettings()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public final CloudMemcacheSettings getSettings()"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheSettings"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub()"
  id: "getStub()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "getStub()"
  nameWithType: "CloudMemcacheClient.getStub()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public CloudMemcacheStub getStub()"
    return:
      type: "com.google.cloud.memcache.v1.stub.CloudMemcacheStub"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown()"
  id: "isShutdown()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "isShutdown()"
  nameWithType: "CloudMemcacheClient.isShutdown()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public boolean isShutdown()"
    return:
      type: "boolean"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated()"
  id: "isTerminated()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "isTerminated()"
  nameWithType: "CloudMemcacheClient.isTerminated()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public boolean isTerminated()"
    return:
      type: "boolean"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(com.google.cloud.memcache.v1.ListInstancesRequest)"
  id: "listInstances(com.google.cloud.memcache.v1.ListInstancesRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "listInstances(ListInstancesRequest request)"
  nameWithType: "CloudMemcacheClient.listInstances(ListInstancesRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(ListInstancesRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Lists Instances in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   ListInstancesRequest request =\n       ListInstancesRequest.newBuilder()\n           .setParent(LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString())\n           .setPageSize(883849137)\n           .setPageToken(\"pageToken873572522\")\n           .setFilter(\"filter-1274492040\")\n           .setOrderBy(\"orderBy-1207110587\")\n           .build();\n   for (Instance element : cloudMemcacheClient.listInstances(request).iterateAll()) {\n     // doThingsWith(element);\n   }\n }\n```"
  syntax:
    content: "public final CloudMemcacheClient.ListInstancesPagedResponse listInstances(ListInstancesRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.ListInstancesRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(com.google.cloud.memcache.v1.LocationName)"
  id: "listInstances(com.google.cloud.memcache.v1.LocationName)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "listInstances(LocationName parent)"
  nameWithType: "CloudMemcacheClient.listInstances(LocationName parent)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(LocationName parent)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Lists Instances in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   LocationName parent = LocationName.of(\"[PROJECT]\", \"[LOCATION]\");\n   for (Instance element : cloudMemcacheClient.listInstances(parent).iterateAll()) {\n     // doThingsWith(element);\n   }\n }\n```"
  syntax:
    content: "public final CloudMemcacheClient.ListInstancesPagedResponse listInstances(LocationName parent)"
    parameters:
    - id: "parent"
      type: "com.google.cloud.memcache.v1.LocationName"
      description: "Required. The resource name of the instance location using the form:\n     `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(java.lang.String)"
  id: "listInstances(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "listInstances(String parent)"
  nameWithType: "CloudMemcacheClient.listInstances(String parent)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances(String parent)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Lists Instances in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String parent = LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString();\n   for (Instance element : cloudMemcacheClient.listInstances(parent).iterateAll()) {\n     // doThingsWith(element);\n   }\n }\n```"
  syntax:
    content: "public final CloudMemcacheClient.ListInstancesPagedResponse listInstances(String parent)"
    parameters:
    - id: "parent"
      type: "java.lang.String"
      description: "Required. The resource name of the instance location using the form:\n     `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region"
    return:
      type: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable()"
  id: "listInstancesCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "listInstancesCallable()"
  nameWithType: "CloudMemcacheClient.listInstancesCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Lists Instances in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   while (true) {\n     ListInstancesResponse response = cloudMemcacheClient.listInstancesCallable().call(request);\n     for (Instance element : response.getResponsesList()) {\n       // doThingsWith(element);\n     }\n     String nextPageToken = response.getNextPageToken();\n     if (!Strings.isNullOrEmpty(nextPageToken)) {\n       request = request.toBuilder().setPageToken(nextPageToken).build();\n     } else {\n       break;\n     }\n   }\n }\n```"
  syntax:
    content: "public final UnaryCallable<ListInstancesRequest,ListInstancesResponse> listInstancesCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.ListInstancesResponse>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable()"
  id: "listInstancesPagedCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "listInstancesPagedCallable()"
  nameWithType: "CloudMemcacheClient.listInstancesPagedCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Lists Instances in a given location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   ListInstancesRequest request =\n       ListInstancesRequest.newBuilder()\n           .setParent(LocationName.of(\"[PROJECT]\", \"[LOCATION]\").toString())\n           .setPageSize(883849137)\n           .setPageToken(\"pageToken873572522\")\n           .setFilter(\"filter-1274492040\")\n           .setOrderBy(\"orderBy-1207110587\")\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.listInstancesPagedCallable().futureCall(request);\n   // Do something.\n   for (Instance element : future.get().iterateAll()) {\n     // doThingsWith(element);\n   }\n }\n```"
  syntax:
    content: "public final UnaryCallable<ListInstancesRequest,CloudMemcacheClient.ListInstancesPagedResponse> listInstancesPagedCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown()"
  id: "shutdown()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "shutdown()"
  nameWithType: "CloudMemcacheClient.shutdown()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public void shutdown()"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow()"
  id: "shutdownNow()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "shutdownNow()"
  nameWithType: "CloudMemcacheClient.shutdownNow()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public void shutdownNow()"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(com.google.cloud.memcache.v1.Instance,com.google.protobuf.FieldMask)"
  id: "updateInstanceAsync(com.google.cloud.memcache.v1.Instance,com.google.protobuf.FieldMask)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateInstanceAsync(Instance instance, FieldMask updateMask)"
  nameWithType: "CloudMemcacheClient.updateInstanceAsync(Instance instance, FieldMask updateMask)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(Instance instance, FieldMask updateMask)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates an existing Instance in a given project and location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   Instance instance = Instance.newBuilder().build();\n   FieldMask updateMask = FieldMask.newBuilder().build();\n   Instance response = cloudMemcacheClient.updateInstanceAsync(instance, updateMask).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> updateInstanceAsync(Instance instance, FieldMask updateMask)"
    parameters:
    - id: "instance"
      type: "com.google.cloud.memcache.v1.Instance"
      description: "Required. A Memcached Instance. Only fields specified in update_mask are\n     updated."
    - id: "updateMask"
      type: "com.google.protobuf.FieldMask"
      description: "Required. Mask of fields to update. &#42; `displayName`"
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(com.google.cloud.memcache.v1.UpdateInstanceRequest)"
  id: "updateInstanceAsync(com.google.cloud.memcache.v1.UpdateInstanceRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateInstanceAsync(UpdateInstanceRequest request)"
  nameWithType: "CloudMemcacheClient.updateInstanceAsync(UpdateInstanceRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync(UpdateInstanceRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates an existing Instance in a given project and location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateInstanceRequest request =\n       UpdateInstanceRequest.newBuilder()\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   Instance response = cloudMemcacheClient.updateInstanceAsync(request).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> updateInstanceAsync(UpdateInstanceRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable()"
  id: "updateInstanceCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateInstanceCallable()"
  nameWithType: "CloudMemcacheClient.updateInstanceCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates an existing Instance in a given project and location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateInstanceRequest request =\n       UpdateInstanceRequest.newBuilder()\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.updateInstanceCallable().futureCall(request);\n   // Do something.\n   Operation response = future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<UpdateInstanceRequest,Operation> updateInstanceCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable()"
  id: "updateInstanceOperationCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateInstanceOperationCallable()"
  nameWithType: "CloudMemcacheClient.updateInstanceOperationCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates an existing Instance in a given project and location.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateInstanceRequest request =\n       UpdateInstanceRequest.newBuilder()\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setInstance(Instance.newBuilder().build())\n           .build();\n   OperationFuture future =\n       cloudMemcacheClient.updateInstanceOperationCallable().futureCall(request);\n   // Do something.\n   Instance response = future.get();\n }\n```"
  syntax:
    content: "public final OperationCallable<UpdateInstanceRequest,Instance,OperationMetadata> updateInstanceOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(com.google.cloud.memcache.v1.InstanceName,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  id: "updateParametersAsync(com.google.cloud.memcache.v1.InstanceName,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateParametersAsync(InstanceName name, FieldMask updateMask, MemcacheParameters parameters)"
  nameWithType: "CloudMemcacheClient.updateParametersAsync(InstanceName name, FieldMask updateMask, MemcacheParameters parameters)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(InstanceName name, FieldMask updateMask, MemcacheParameters parameters)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates the defined Memcached Parameters for an existing Instance. This method only stages the parameters, it must be followed by ApplyParameters to apply the parameters to nodes of the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   InstanceName name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\");\n   FieldMask updateMask = FieldMask.newBuilder().build();\n   MemcacheParameters parameters = MemcacheParameters.newBuilder().build();\n   Instance response =\n       cloudMemcacheClient.updateParametersAsync(name, updateMask, parameters).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> updateParametersAsync(InstanceName name, FieldMask updateMask, MemcacheParameters parameters)"
    parameters:
    - id: "name"
      type: "com.google.cloud.memcache.v1.InstanceName"
      description: "Required. Resource name of the Memcached instance for which the parameters should\n     be updated."
    - id: "updateMask"
      type: "com.google.protobuf.FieldMask"
      description: "Required. Mask of fields to update."
    - id: "parameters"
      type: "com.google.cloud.memcache.v1.MemcacheParameters"
      description: "The parameters to apply to the instance."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(com.google.cloud.memcache.v1.UpdateParametersRequest)"
  id: "updateParametersAsync(com.google.cloud.memcache.v1.UpdateParametersRequest)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateParametersAsync(UpdateParametersRequest request)"
  nameWithType: "CloudMemcacheClient.updateParametersAsync(UpdateParametersRequest request)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(UpdateParametersRequest request)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates the defined Memcached Parameters for an existing Instance. This method only stages the parameters, it must be followed by ApplyParameters to apply the parameters to nodes of the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateParametersRequest request =\n       UpdateParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setParameters(MemcacheParameters.newBuilder().build())\n           .build();\n   Instance response = cloudMemcacheClient.updateParametersAsync(request).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> updateParametersAsync(UpdateParametersRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1.UpdateParametersRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(java.lang.String,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  id: "updateParametersAsync(java.lang.String,com.google.protobuf.FieldMask,com.google.cloud.memcache.v1.MemcacheParameters)"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateParametersAsync(String name, FieldMask updateMask, MemcacheParameters parameters)"
  nameWithType: "CloudMemcacheClient.updateParametersAsync(String name, FieldMask updateMask, MemcacheParameters parameters)"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync(String name, FieldMask updateMask, MemcacheParameters parameters)"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates the defined Memcached Parameters for an existing Instance. This method only stages the parameters, it must be followed by ApplyParameters to apply the parameters to nodes of the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   String name = InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString();\n   FieldMask updateMask = FieldMask.newBuilder().build();\n   MemcacheParameters parameters = MemcacheParameters.newBuilder().build();\n   Instance response =\n       cloudMemcacheClient.updateParametersAsync(name, updateMask, parameters).get();\n }\n```"
  syntax:
    content: "public final OperationFuture<Instance,OperationMetadata> updateParametersAsync(String name, FieldMask updateMask, MemcacheParameters parameters)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "Required. Resource name of the Memcached instance for which the parameters should\n     be updated."
    - id: "updateMask"
      type: "com.google.protobuf.FieldMask"
      description: "Required. Mask of fields to update."
    - id: "parameters"
      type: "com.google.cloud.memcache.v1.MemcacheParameters"
      description: "The parameters to apply to the instance."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable()"
  id: "updateParametersCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateParametersCallable()"
  nameWithType: "CloudMemcacheClient.updateParametersCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates the defined Memcached Parameters for an existing Instance. This method only stages the parameters, it must be followed by ApplyParameters to apply the parameters to nodes of the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateParametersRequest request =\n       UpdateParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setParameters(MemcacheParameters.newBuilder().build())\n           .build();\n   ApiFuture future =\n       cloudMemcacheClient.updateParametersCallable().futureCall(request);\n   // Do something.\n   Operation response = future.get();\n }\n```"
  syntax:
    content: "public final UnaryCallable<UpdateParametersRequest,Operation> updateParametersCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable()"
  id: "updateParametersOperationCallable()"
  parent: "com.google.cloud.memcache.v1.CloudMemcacheClient"
  langs:
  - "java"
  name: "updateParametersOperationCallable()"
  nameWithType: "CloudMemcacheClient.updateParametersOperationCallable()"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable()"
  overload: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Updates the defined Memcached Parameters for an existing Instance. This method only stages the parameters, it must be followed by ApplyParameters to apply the parameters to nodes of the Memcached Instance.\n\nSample code:\n\n```java\ntry (CloudMemcacheClient cloudMemcacheClient = CloudMemcacheClient.create()) {\n   UpdateParametersRequest request =\n       UpdateParametersRequest.newBuilder()\n           .setName(InstanceName.of(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\").toString())\n           .setUpdateMask(FieldMask.newBuilder().build())\n           .setParameters(MemcacheParameters.newBuilder().build())\n           .build();\n   OperationFuture future =\n       cloudMemcacheClient.updateParametersOperationCallable().futureCall(request);\n   // Do something.\n   Instance response = future.get();\n }\n```"
  syntax:
    content: "public final OperationCallable<UpdateParametersRequest,Instance,OperationMetadata> updateParametersOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
references:
- uid: "com.google.cloud.memcache.v1.CloudMemcacheSettings"
  name: "CloudMemcacheSettings"
  nameWithType: "CloudMemcacheSettings"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheSettings"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient*"
  name: "CloudMemcacheClient"
  nameWithType: "CloudMemcacheClient.CloudMemcacheClient"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.CloudMemcacheClient"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.stub.CloudMemcacheStub"
  name: "CloudMemcacheStub"
  nameWithType: "CloudMemcacheStub"
  fullName: "com.google.cloud.memcache.v1.stub.CloudMemcacheStub"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.create*"
  name: "create"
  nameWithType: "CloudMemcacheClient.create"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.create"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings*"
  name: "getSettings"
  nameWithType: "CloudMemcacheClient.getSettings"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getSettings"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub*"
  name: "getStub"
  nameWithType: "CloudMemcacheClient.getStub"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getStub"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.longrunning.OperationsClient"
  spec.java:
  - uid: "com.google.longrunning.OperationsClient"
    name: "OperationsClient"
    fullName: "com.google.longrunning.OperationsClient"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient*"
  name: "getOperationsClient"
  nameWithType: "CloudMemcacheClient.getOperationsClient"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getOperationsClient"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.LocationName"
  name: "LocationName"
  nameWithType: "LocationName"
  fullName: "com.google.cloud.memcache.v1.LocationName"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
  name: "CloudMemcacheClient.ListInstancesPagedResponse"
  nameWithType: "CloudMemcacheClient.ListInstancesPagedResponse"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances*"
  name: "listInstances"
  nameWithType: "CloudMemcacheClient.listInstances"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstances"
  package: "com.google.cloud.memcache.v1"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.ListInstancesRequest"
  name: "ListInstancesRequest"
  nameWithType: "ListInstancesRequest"
  fullName: "com.google.cloud.memcache.v1.ListInstancesRequest"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.ListInstancesRequest"
    name: "ListInstancesRequest"
    fullName: "com.google.cloud.memcache.v1.ListInstancesRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
    name: "ListInstancesPagedResponse"
    fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable*"
  name: "listInstancesPagedCallable"
  nameWithType: "CloudMemcacheClient.listInstancesPagedCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesPagedCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.ListInstancesResponse>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.ListInstancesRequest"
    name: "ListInstancesRequest"
    fullName: "com.google.cloud.memcache.v1.ListInstancesRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.ListInstancesResponse"
    name: "ListInstancesResponse"
    fullName: "com.google.cloud.memcache.v1.ListInstancesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable*"
  name: "listInstancesCallable"
  nameWithType: "CloudMemcacheClient.listInstancesCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.listInstancesCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceName"
  name: "InstanceName"
  nameWithType: "InstanceName"
  fullName: "com.google.cloud.memcache.v1.InstanceName"
- uid: "com.google.cloud.memcache.v1.Instance"
  name: "Instance"
  nameWithType: "Instance"
  fullName: "com.google.cloud.memcache.v1.Instance"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance*"
  name: "getInstance"
  nameWithType: "CloudMemcacheClient.getInstance"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstance"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.GetInstanceRequest"
  name: "GetInstanceRequest"
  nameWithType: "GetInstanceRequest"
  fullName: "com.google.cloud.memcache.v1.GetInstanceRequest"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.GetInstanceRequest,com.google.cloud.memcache.v1.Instance>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.GetInstanceRequest"
    name: "GetInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.GetInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable*"
  name: "getInstanceCallable"
  nameWithType: "CloudMemcacheClient.getInstanceCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.getInstanceCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.longrunning.OperationFuture"
    name: "OperationFuture"
    fullName: "com.google.api.gax.longrunning.OperationFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync*"
  name: "createInstanceAsync"
  nameWithType: "CloudMemcacheClient.createInstanceAsync"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceAsync"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CreateInstanceRequest"
  name: "CreateInstanceRequest"
  nameWithType: "CreateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1.CreateInstanceRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.CreateInstanceRequest"
    name: "CreateInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.CreateInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable*"
  name: "createInstanceOperationCallable"
  nameWithType: "CloudMemcacheClient.createInstanceOperationCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceOperationCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.longrunning.Operation>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.CreateInstanceRequest"
    name: "CreateInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.CreateInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable*"
  name: "createInstanceCallable"
  nameWithType: "CloudMemcacheClient.createInstanceCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.createInstanceCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.FieldMask"
  spec.java:
  - uid: "com.google.protobuf.FieldMask"
    name: "FieldMask"
    fullName: "com.google.protobuf.FieldMask"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync*"
  name: "updateInstanceAsync"
  nameWithType: "CloudMemcacheClient.updateInstanceAsync"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceAsync"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
  name: "UpdateInstanceRequest"
  nameWithType: "UpdateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
    name: "UpdateInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable*"
  name: "updateInstanceOperationCallable"
  nameWithType: "CloudMemcacheClient.updateInstanceOperationCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceOperationCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.longrunning.Operation>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
    name: "UpdateInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.UpdateInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable*"
  name: "updateInstanceCallable"
  nameWithType: "CloudMemcacheClient.updateInstanceCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateInstanceCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParameters"
  name: "MemcacheParameters"
  nameWithType: "MemcacheParameters"
  fullName: "com.google.cloud.memcache.v1.MemcacheParameters"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync*"
  name: "updateParametersAsync"
  nameWithType: "CloudMemcacheClient.updateParametersAsync"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersAsync"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.UpdateParametersRequest"
  name: "UpdateParametersRequest"
  nameWithType: "UpdateParametersRequest"
  fullName: "com.google.cloud.memcache.v1.UpdateParametersRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.UpdateParametersRequest"
    name: "UpdateParametersRequest"
    fullName: "com.google.cloud.memcache.v1.UpdateParametersRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable*"
  name: "updateParametersOperationCallable"
  nameWithType: "CloudMemcacheClient.updateParametersOperationCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersOperationCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.longrunning.Operation>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.UpdateParametersRequest"
    name: "UpdateParametersRequest"
    fullName: "com.google.cloud.memcache.v1.UpdateParametersRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable*"
  name: "updateParametersCallable"
  nameWithType: "CloudMemcacheClient.updateParametersCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.updateParametersCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.longrunning.OperationFuture<com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.longrunning.OperationFuture"
    name: "OperationFuture"
    fullName: "com.google.api.gax.longrunning.OperationFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.google.protobuf.Empty"
    name: "Empty"
    fullName: "com.google.protobuf.Empty"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync*"
  name: "deleteInstanceAsync"
  nameWithType: "CloudMemcacheClient.deleteInstanceAsync"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceAsync"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
  name: "DeleteInstanceRequest"
  nameWithType: "DeleteInstanceRequest"
  fullName: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
    name: "DeleteInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.protobuf.Empty"
    name: "Empty"
    fullName: "com.google.protobuf.Empty"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable*"
  name: "deleteInstanceOperationCallable"
  nameWithType: "CloudMemcacheClient.deleteInstanceOperationCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceOperationCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.longrunning.Operation>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
    name: "DeleteInstanceRequest"
    fullName: "com.google.cloud.memcache.v1.DeleteInstanceRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable*"
  name: "deleteInstanceCallable"
  nameWithType: "CloudMemcacheClient.deleteInstanceCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.deleteInstanceCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync*"
  name: "applyParametersAsync"
  nameWithType: "CloudMemcacheClient.applyParametersAsync"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersAsync"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.ApplyParametersRequest"
  name: "ApplyParametersRequest"
  nameWithType: "ApplyParametersRequest"
  fullName: "com.google.cloud.memcache.v1.ApplyParametersRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata>"
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.ApplyParametersRequest"
    name: "ApplyParametersRequest"
    fullName: "com.google.cloud.memcache.v1.ApplyParametersRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1.Instance"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1.OperationMetadata"
    name: "OperationMetadata"
    fullName: "com.google.cloud.memcache.v1.OperationMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable*"
  name: "applyParametersOperationCallable"
  nameWithType: "CloudMemcacheClient.applyParametersOperationCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersOperationCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.longrunning.Operation>"
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.ApplyParametersRequest"
    name: "ApplyParametersRequest"
    fullName: "com.google.cloud.memcache.v1.ApplyParametersRequest"
  - name: ","
    fullName: ","
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable*"
  name: "applyParametersCallable"
  nameWithType: "CloudMemcacheClient.applyParametersCallable"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.applyParametersCallable"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.close*"
  name: "close"
  nameWithType: "CloudMemcacheClient.close"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.close"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown*"
  name: "shutdown"
  nameWithType: "CloudMemcacheClient.shutdown"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdown"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown*"
  name: "isShutdown"
  nameWithType: "CloudMemcacheClient.isShutdown"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.isShutdown"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated*"
  name: "isTerminated"
  nameWithType: "CloudMemcacheClient.isTerminated"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.isTerminated"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow*"
  name: "shutdownNow"
  nameWithType: "CloudMemcacheClient.shutdownNow"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.shutdownNow"
  package: "com.google.cloud.memcache.v1"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.util.concurrent.TimeUnit"
  spec.java:
  - uid: "java.util.concurrent.TimeUnit"
    name: "TimeUnit"
    fullName: "java.util.concurrent.TimeUnit"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination*"
  name: "awaitTermination"
  nameWithType: "CloudMemcacheClient.awaitTermination"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.awaitTermination"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.api.gax.core.BackgroundResource"
  name: "BackgroundResource"
  nameWithType: "BackgroundResource"
  fullName: "com.google.api.gax.core.BackgroundResource"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesFixedSizeCollection"
  name: "CloudMemcacheClient.ListInstancesFixedSizeCollection"
  nameWithType: "CloudMemcacheClient.ListInstancesFixedSizeCollection"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesFixedSizeCollection"
- uid: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPage"
  name: "CloudMemcacheClient.ListInstancesPage"
  nameWithType: "CloudMemcacheClient.ListInstancesPage"
  fullName: "com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPage"
- uid: "com.google.api.gax.rpc.UnaryCallable"
  name: "UnaryCallable"
  nameWithType: "UnaryCallable"
  fullName: "com.google.api.gax.rpc.UnaryCallable"
- uid: "com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
  name: "ListInstancesRequest,CloudMemcacheClient.ListInstancesPagedResponse"
  nameWithType: "ListInstancesRequest,CloudMemcacheClient.ListInstancesPagedResponse"
  fullName: "com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.CloudMemcacheClient.ListInstancesPagedResponse"
- uid: "com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.ListInstancesResponse"
  name: "ListInstancesRequest,ListInstancesResponse"
  nameWithType: "ListInstancesRequest,ListInstancesResponse"
  fullName: "com.google.cloud.memcache.v1.ListInstancesRequest,com.google.cloud.memcache.v1.ListInstancesResponse"
- uid: "com.google.cloud.memcache.v1.GetInstanceRequest,com.google.cloud.memcache.v1.Instance"
  name: "GetInstanceRequest,Instance"
  nameWithType: "GetInstanceRequest,Instance"
  fullName: "com.google.cloud.memcache.v1.GetInstanceRequest,com.google.cloud.memcache.v1.Instance"
- uid: "com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
  name: "Instance,OperationMetadata"
  nameWithType: "Instance,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.api.gax.longrunning.OperationFuture"
  name: "OperationFuture"
  nameWithType: "OperationFuture"
  fullName: "com.google.api.gax.longrunning.OperationFuture"
- uid: "com.google.api.gax.rpc.OperationCallable"
  name: "OperationCallable"
  nameWithType: "OperationCallable"
  fullName: "com.google.api.gax.rpc.OperationCallable"
- uid: "com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
  name: "CreateInstanceRequest,Instance,OperationMetadata"
  nameWithType: "CreateInstanceRequest,Instance,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.longrunning.Operation"
  name: "CreateInstanceRequest,Operation"
  nameWithType: "CreateInstanceRequest,Operation"
  fullName: "com.google.cloud.memcache.v1.CreateInstanceRequest,com.google.longrunning.Operation"
- uid: "com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
  name: "UpdateInstanceRequest,Instance,OperationMetadata"
  nameWithType: "UpdateInstanceRequest,Instance,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.longrunning.Operation"
  name: "UpdateInstanceRequest,Operation"
  nameWithType: "UpdateInstanceRequest,Operation"
  fullName: "com.google.cloud.memcache.v1.UpdateInstanceRequest,com.google.longrunning.Operation"
- uid: "com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
  name: "UpdateParametersRequest,Instance,OperationMetadata"
  nameWithType: "UpdateParametersRequest,Instance,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.longrunning.Operation"
  name: "UpdateParametersRequest,Operation"
  nameWithType: "UpdateParametersRequest,Operation"
  fullName: "com.google.cloud.memcache.v1.UpdateParametersRequest,com.google.longrunning.Operation"
- uid: "com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata"
  name: "Empty,OperationMetadata"
  nameWithType: "Empty,OperationMetadata"
  fullName: "com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata"
  name: "DeleteInstanceRequest,Empty,OperationMetadata"
  nameWithType: "DeleteInstanceRequest,Empty,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.protobuf.Empty,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.longrunning.Operation"
  name: "DeleteInstanceRequest,Operation"
  nameWithType: "DeleteInstanceRequest,Operation"
  fullName: "com.google.cloud.memcache.v1.DeleteInstanceRequest,com.google.longrunning.Operation"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
  name: "ApplyParametersRequest,Instance,OperationMetadata"
  nameWithType: "ApplyParametersRequest,Instance,OperationMetadata"
  fullName: "com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.cloud.memcache.v1.Instance,com.google.cloud.memcache.v1.OperationMetadata"
- uid: "com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.longrunning.Operation"
  name: "ApplyParametersRequest,Operation"
  nameWithType: "ApplyParametersRequest,Operation"
  fullName: "com.google.cloud.memcache.v1.ApplyParametersRequest,com.google.longrunning.Operation"
