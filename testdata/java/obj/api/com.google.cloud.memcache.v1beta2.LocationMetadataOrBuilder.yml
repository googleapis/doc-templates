### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  id: "LocationMetadataOrBuilder"
  parent: "com.google.cloud.memcache.v1beta2"
  children:
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones(java.lang.String)"
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones()"
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount()"
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap()"
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault(java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata)"
  - "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow(java.lang.String)"
  langs:
  - "java"
  name: "LocationMetadataOrBuilder"
  nameWithType: "LocationMetadataOrBuilder"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  type: "Interface"
  package: "com.google.cloud.memcache.v1beta2"
  syntax:
    content: "public interface LocationMetadataOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones(java.lang.String)"
  id: "containsAvailableZones(java.lang.String)"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "containsAvailableZones(String key)"
  nameWithType: "LocationMetadataOrBuilder.containsAvailableZones(String key)"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones(String key)"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nOutput only. The set of available zones in the location. The map is keyed\n by the lowercase ID of each zone, as defined by GCE. These keys can be\n specified in the `zones` field when creating a Memcached instance.\n```\n\n`map<string, .google.cloud.memcache.v1beta2.ZoneMetadata> available_zones = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract boolean containsAvailableZones(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones()"
  id: "getAvailableZones()"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "getAvailableZones()"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZones()"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones()"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "Use <xref uid=\"com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap()\" data-throw-if-not-resolved=\"false\">#getAvailableZonesMap()</xref> instead."
  syntax:
    content: "public abstract Map<String,ZoneMetadata> getAvailableZones()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata>"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount()"
  id: "getAvailableZonesCount()"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "getAvailableZonesCount()"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesCount()"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount()"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nOutput only. The set of available zones in the location. The map is keyed\n by the lowercase ID of each zone, as defined by GCE. These keys can be\n specified in the `zones` field when creating a Memcached instance.\n```\n\n`map<string, .google.cloud.memcache.v1beta2.ZoneMetadata> available_zones = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract int getAvailableZonesCount()"
    return:
      type: "int"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap()"
  id: "getAvailableZonesMap()"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "getAvailableZonesMap()"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesMap()"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap()"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nOutput only. The set of available zones in the location. The map is keyed\n by the lowercase ID of each zone, as defined by GCE. These keys can be\n specified in the `zones` field when creating a Memcached instance.\n```\n\n`map<string, .google.cloud.memcache.v1beta2.ZoneMetadata> available_zones = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Map<String,ZoneMetadata> getAvailableZonesMap()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata>"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault(java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata)"
  id: "getAvailableZonesOrDefault(java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata)"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "getAvailableZonesOrDefault(String key, ZoneMetadata defaultValue)"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesOrDefault(String key, ZoneMetadata defaultValue)"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault(String key, ZoneMetadata defaultValue)"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nOutput only. The set of available zones in the location. The map is keyed\n by the lowercase ID of each zone, as defined by GCE. These keys can be\n specified in the `zones` field when creating a Memcached instance.\n```\n\n`map<string, .google.cloud.memcache.v1beta2.ZoneMetadata> available_zones = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ZoneMetadata getAvailableZonesOrDefault(String key, ZoneMetadata defaultValue)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    - id: "defaultValue"
      type: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
    return:
      type: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow(java.lang.String)"
  id: "getAvailableZonesOrThrow(java.lang.String)"
  parent: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder"
  langs:
  - "java"
  name: "getAvailableZonesOrThrow(String key)"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesOrThrow(String key)"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow(String key)"
  overload: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nOutput only. The set of available zones in the location. The map is keyed\n by the lowercase ID of each zone, as defined by GCE. These keys can be\n specified in the `zones` field when creating a Memcached instance.\n```\n\n`map<string, .google.cloud.memcache.v1beta2.ZoneMetadata> available_zones = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ZoneMetadata getAvailableZonesOrThrow(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount*"
  name: "getAvailableZonesCount"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesCount"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesCount"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones*"
  name: "containsAvailableZones"
  nameWithType: "LocationMetadataOrBuilder.containsAvailableZones"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.containsAvailableZones"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "java.util.Map<java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
    name: "ZoneMetadata"
    fullName: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones*"
  name: "getAvailableZones"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZones"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZones"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap*"
  name: "getAvailableZonesMap"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesMap"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesMap"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
  name: "ZoneMetadata"
  nameWithType: "ZoneMetadata"
  fullName: "com.google.cloud.memcache.v1beta2.ZoneMetadata"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault*"
  name: "getAvailableZonesOrDefault"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesOrDefault"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrDefault"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow*"
  name: "getAvailableZonesOrThrow"
  nameWithType: "LocationMetadataOrBuilder.getAvailableZonesOrThrow"
  fullName: "com.google.cloud.memcache.v1beta2.LocationMetadataOrBuilder.getAvailableZonesOrThrow"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.protobuf.MessageOrBuilder"
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata"
  name: "String,ZoneMetadata"
  nameWithType: "String,ZoneMetadata"
  fullName: "java.lang.String,com.google.cloud.memcache.v1beta2.ZoneMetadata"
