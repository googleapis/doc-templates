### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  id: "CloudMemcacheImplBase"
  parent: "com.google.cloud.memcache.v1beta2"
  children:
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase()"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService()"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  langs:
  - "java"
  name: "CloudMemcacheGrpc.CloudMemcacheImplBase"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  type: "Class"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nConfigures and manages Cloud Memorystore for Memcached instances.\n The `memcache.googleapis.com` service implements the Google Cloud Memorystore\n for Memcached API and defines the following resource model for managing\n Memorystore Memcached (also called Memcached below) instances:\n * The service works with a collection of cloud projects, named: `/projects/*`\n * Each project has a collection of available locations, named: `/locations/*`\n * Each location has a collection of Memcached instances, named:\n `/instances/*`\n * As such, Memcached instances are resources of the form:\n   `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n Note that location_id must be a GCP `region`; for example:\n * `projects/my-memcached-project/locations/us-central1/instances/my-memcached`\n```"
  syntax:
    content: "public abstract static class CloudMemcacheGrpc.CloudMemcacheImplBase implements BindableService"
  inheritance:
  - "java.lang.Object"
  implements:
  - "io.grpc.BindableService"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase()"
  id: "CloudMemcacheImplBase()"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "CloudMemcacheImplBase()"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase()"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase()"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase*"
  type: "Constructor"
  package: "com.google.cloud.memcache.v1beta2"
  syntax:
    content: "public CloudMemcacheImplBase()"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\n`ApplyParameters` restarts the set of specified nodes in order to update\n them to the current set of parameters for the Memcached Instance.\n```"
  syntax:
    content: "public void applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates software on the selected nodes of the Instance.\n```"
  syntax:
    content: "public void applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService()"
  id: "bindService()"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "bindService()"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.bindService()"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService()"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  syntax:
    content: "public final ServerServiceDefinition bindService()"
    return:
      type: "io.grpc.ServerServiceDefinition"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nCreates a new Instance in a given location.\n```"
  syntax:
    content: "public void createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nDeletes a single Instance.\n```"
  syntax:
    content: "public void deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  id: "getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nGets details of a single Instance.\n```"
  syntax:
    content: "public void getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  id: "listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nLists Instances in a given location.\n```"
  syntax:
    content: "public void listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates an existing Instance in a given project and location.\n```"
  syntax:
    content: "public void updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase"
  langs:
  - "java"
  name: "updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates the defined Memcached parameters for an existing instance.\n This method only stages the parameters, it must be followed by\n `ApplyParameters` to apply the parameters to nodes of the Memcached\n instance.\n```"
  syntax:
    content: "public void updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
references:
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase*"
  name: "CloudMemcacheImplBase"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.CloudMemcacheImplBase"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
  name: "ListInstancesRequest"
  nameWithType: "ListInstancesRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
    name: "ListInstancesResponse"
    fullName: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances*"
  name: "listInstances"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.listInstances"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
  name: "GetInstanceRequest"
  nameWithType: "GetInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1beta2.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1beta2.Instance"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance*"
  name: "getInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.getInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
  name: "CreateInstanceRequest"
  nameWithType: "CreateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance*"
  name: "createInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.createInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
  name: "UpdateInstanceRequest"
  nameWithType: "UpdateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance*"
  name: "updateInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
  name: "UpdateParametersRequest"
  nameWithType: "UpdateParametersRequest"
  fullName: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters*"
  name: "updateParameters"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.updateParameters"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
  name: "DeleteInstanceRequest"
  nameWithType: "DeleteInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance*"
  name: "deleteInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.deleteInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
  name: "ApplyParametersRequest"
  nameWithType: "ApplyParametersRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters*"
  name: "applyParameters"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applyParameters"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
  name: "ApplySoftwareUpdateRequest"
  nameWithType: "ApplySoftwareUpdateRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate*"
  name: "applySoftwareUpdate"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.applySoftwareUpdate"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "io.grpc.ServerServiceDefinition"
  spec.java:
  - uid: "io.grpc.ServerServiceDefinition"
    name: "ServerServiceDefinition"
    fullName: "io.grpc.ServerServiceDefinition"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService*"
  name: "bindService"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheImplBase.bindService"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheImplBase.bindService"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "io.grpc.BindableService"
  name: "BindableService"
  nameWithType: "BindableService"
  fullName: "io.grpc.BindableService"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.grpc.stub.StreamObserver"
  name: "StreamObserver"
  nameWithType: "StreamObserver"
  fullName: "io.grpc.stub.StreamObserver"
- uid: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
  name: "ListInstancesResponse"
  nameWithType: "ListInstancesResponse"
  fullName: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
- uid: "com.google.cloud.memcache.v1beta2.Instance"
  name: "Instance"
  nameWithType: "Instance"
  fullName: "com.google.cloud.memcache.v1beta2.Instance"
- uid: "com.google.longrunning.Operation"
  name: "Operation"
  nameWithType: "Operation"
  fullName: "com.google.longrunning.Operation"
