### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  id: "CloudMemcacheStub"
  parent: "com.google.cloud.memcache.v1beta2"
  children:
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  langs:
  - "java"
  name: "CloudMemcacheGrpc.CloudMemcacheStub"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  type: "Class"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nConfigures and manages Cloud Memorystore for Memcached instances.\n The `memcache.googleapis.com` service implements the Google Cloud Memorystore\n for Memcached API and defines the following resource model for managing\n Memorystore Memcached (also called Memcached below) instances:\n * The service works with a collection of cloud projects, named: `/projects/*`\n * Each project has a collection of available locations, named: `/locations/*`\n * Each location has a collection of Memcached instances, named:\n `/instances/*`\n * As such, Memcached instances are resources of the form:\n   `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n Note that location_id must be a GCP `region`; for example:\n * `projects/my-memcached-project/locations/us-central1/instances/my-memcached`\n```"
  syntax:
    content: "public static final class CloudMemcacheGrpc.CloudMemcacheStub extends AbstractAsyncStub<CloudMemcacheGrpc.CloudMemcacheStub>"
  inheritance:
  - "java.lang.Object"
  - "io.grpc.stub.AbstractStub"
  - "io.grpc.stub.AbstractAsyncStub"
  inheritedMembers:
  - "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
  - "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
  - "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
  - "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  - "io.grpc.stub.AbstractStub.getCallOptions()"
  - "io.grpc.stub.AbstractStub.getChannel()"
  - "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
  - "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
  - "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
  - "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
  - "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
  - "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
  - "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
  - "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
  - "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
  - "io.grpc.stub.AbstractStub.withWaitForReady()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub(io.grpc.Channel,io.grpc.CallOptions)"
  id: "CloudMemcacheStub(io.grpc.Channel,io.grpc.CallOptions)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "CloudMemcacheStub(Channel channel, CallOptions callOptions)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub(Channel channel, CallOptions callOptions)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub(Channel channel, CallOptions callOptions)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub*"
  type: "Constructor"
  package: "com.google.cloud.memcache.v1beta2"
  syntax:
    content: "private CloudMemcacheStub(Channel channel, CallOptions callOptions)"
    parameters:
    - id: "channel"
      type: "io.grpc.Channel"
    - id: "callOptions"
      type: "io.grpc.CallOptions"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "applyParameters(com.google.cloud.memcache.v1beta2.ApplyParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\n`ApplyParameters` restarts the set of specified nodes in order to update\n them to the current set of parameters for the Memcached Instance.\n```"
  syntax:
    content: "public void applyParameters(ApplyParametersRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "applySoftwareUpdate(com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates software on the selected nodes of the Instance.\n```"
  syntax:
    content: "public void applySoftwareUpdate(ApplySoftwareUpdateRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  id: "build(io.grpc.Channel,io.grpc.CallOptions)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "build(Channel channel, CallOptions callOptions)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.build(Channel channel, CallOptions callOptions)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build(Channel channel, CallOptions callOptions)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build*"
  overridden: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  syntax:
    content: "protected CloudMemcacheGrpc.CloudMemcacheStub build(Channel channel, CallOptions callOptions)"
    parameters:
    - id: "channel"
      type: "io.grpc.Channel"
    - id: "callOptions"
      type: "io.grpc.CallOptions"
    return:
      type: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "createInstance(com.google.cloud.memcache.v1beta2.CreateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nCreates a new Instance in a given location.\n```"
  syntax:
    content: "public void createInstance(CreateInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "deleteInstance(com.google.cloud.memcache.v1beta2.DeleteInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nDeletes a single Instance.\n```"
  syntax:
    content: "public void deleteInstance(DeleteInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  id: "getInstance(com.google.cloud.memcache.v1beta2.GetInstanceRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nGets details of a single Instance.\n```"
  syntax:
    content: "public void getInstance(GetInstanceRequest request, StreamObserver<Instance> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  id: "listInstances(com.google.cloud.memcache.v1beta2.ListInstancesRequest,io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nLists Instances in a given location.\n```"
  syntax:
    content: "public void listInstances(ListInstancesRequest request, StreamObserver<ListInstancesResponse> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "updateInstance(com.google.cloud.memcache.v1beta2.UpdateInstanceRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates an existing Instance in a given project and location.\n```"
  syntax:
    content: "public void updateInstance(UpdateInstanceRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "updateParameters(com.google.cloud.memcache.v1beta2.UpdateParametersRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub"
  langs:
  - "java"
  name: "updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1beta2"
  summary: "```\nUpdates the defined Memcached parameters for an existing instance.\n This method only stages the parameters, it must be followed by\n `ApplyParameters` to apply the parameters to nodes of the Memcached\n instance.\n```"
  syntax:
    content: "public void updateParameters(UpdateParametersRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
references:
- uid: "io.grpc.Channel"
  spec.java:
  - uid: "io.grpc.Channel"
    name: "Channel"
    fullName: "io.grpc.Channel"
- uid: "io.grpc.CallOptions"
  spec.java:
  - uid: "io.grpc.CallOptions"
    name: "CallOptions"
    fullName: "io.grpc.CallOptions"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub*"
  name: "CloudMemcacheStub"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.CloudMemcacheStub"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build*"
  name: "build"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.build"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.build"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
  name: "ListInstancesRequest"
  nameWithType: "ListInstancesRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ListInstancesRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.ListInstancesResponse>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
    name: "ListInstancesResponse"
    fullName: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances*"
  name: "listInstances"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.listInstances"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.listInstances"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
  name: "GetInstanceRequest"
  nameWithType: "GetInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.GetInstanceRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.cloud.memcache.v1beta2.Instance>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1beta2.Instance"
    name: "Instance"
    fullName: "com.google.cloud.memcache.v1beta2.Instance"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance*"
  name: "getInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.getInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.getInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
  name: "CreateInstanceRequest"
  nameWithType: "CreateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.CreateInstanceRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
  - name: "<"
    fullName: "<"
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance*"
  name: "createInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.createInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.createInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
  name: "UpdateInstanceRequest"
  nameWithType: "UpdateInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.UpdateInstanceRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance*"
  name: "updateInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.updateInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
  name: "UpdateParametersRequest"
  nameWithType: "UpdateParametersRequest"
  fullName: "com.google.cloud.memcache.v1beta2.UpdateParametersRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters*"
  name: "updateParameters"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.updateParameters"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.updateParameters"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
  name: "DeleteInstanceRequest"
  nameWithType: "DeleteInstanceRequest"
  fullName: "com.google.cloud.memcache.v1beta2.DeleteInstanceRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance*"
  name: "deleteInstance"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.deleteInstance"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
  name: "ApplyParametersRequest"
  nameWithType: "ApplyParametersRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ApplyParametersRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters*"
  name: "applyParameters"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.applyParameters"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applyParameters"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
  name: "ApplySoftwareUpdateRequest"
  nameWithType: "ApplySoftwareUpdateRequest"
  fullName: "com.google.cloud.memcache.v1beta2.ApplySoftwareUpdateRequest"
- uid: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate*"
  name: "applySoftwareUpdate"
  nameWithType: "CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate"
  fullName: "com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub.applySoftwareUpdate"
  package: "com.google.cloud.memcache.v1beta2"
- uid: "io.grpc.stub.AbstractAsyncStub<com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub>"
  name: "AbstractAsyncStub<CloudMemcacheGrpc.CloudMemcacheStub>"
  nameWithType: "AbstractAsyncStub<CloudMemcacheGrpc.CloudMemcacheStub>"
  fullName: "io.grpc.stub.AbstractAsyncStub<com.google.cloud.memcache.v1beta2.CloudMemcacheGrpc.CloudMemcacheStub>"
- uid: "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
  name: "AbstractAsyncStub.<T>newStub(AbstractStub.StubFactory<T>,Channel)"
  nameWithType: "AbstractAsyncStub.<T>newStub(AbstractStub.StubFactory<T>,Channel)"
  fullName: "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "io.grpc.stub.AbstractStub.getChannel()"
  name: "AbstractStub.getChannel()"
  nameWithType: "AbstractStub.getChannel()"
  fullName: "io.grpc.stub.AbstractStub.getChannel()"
- uid: "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
  name: "AbstractStub.withExecutor(Executor)"
  nameWithType: "AbstractStub.withExecutor(Executor)"
  fullName: "io.grpc.stub.AbstractStub.withExecutor(java.util.concurrent.Executor)"
- uid: "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
  name: "AbstractStub.<T>withOption(CallOptions.Key<T>,T)"
  nameWithType: "AbstractStub.<T>withOption(CallOptions.Key<T>,T)"
  fullName: "io.grpc.stub.AbstractStub.<T>withOption(io.grpc.CallOptions.Key<T>,T)"
- uid: "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
  name: "AbstractStub.withMaxOutboundMessageSize(int)"
  nameWithType: "AbstractStub.withMaxOutboundMessageSize(int)"
  fullName: "io.grpc.stub.AbstractStub.withMaxOutboundMessageSize(int)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
  name: "AbstractStub.build(Channel,CallOptions)"
  nameWithType: "AbstractStub.build(Channel,CallOptions)"
  fullName: "io.grpc.stub.AbstractStub.build(io.grpc.Channel,io.grpc.CallOptions)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.grpc.stub.AbstractStub.getCallOptions()"
  name: "AbstractStub.getCallOptions()"
  nameWithType: "AbstractStub.getCallOptions()"
  fullName: "io.grpc.stub.AbstractStub.getCallOptions()"
- uid: "io.grpc.stub.AbstractStub.withWaitForReady()"
  name: "AbstractStub.withWaitForReady()"
  nameWithType: "AbstractStub.withWaitForReady()"
  fullName: "io.grpc.stub.AbstractStub.withWaitForReady()"
- uid: "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
  name: "AbstractAsyncStub.<T>newStub(AbstractStub.StubFactory<T>,Channel,CallOptions)"
  nameWithType: "AbstractAsyncStub.<T>newStub(AbstractStub.StubFactory<T>,Channel,CallOptions)"
  fullName: "io.grpc.stub.AbstractAsyncStub.<T>newStub(io.grpc.stub.AbstractStub.StubFactory<T>,io.grpc.Channel,io.grpc.CallOptions)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
  name: "AbstractStub.withDeadline(Deadline)"
  nameWithType: "AbstractStub.withDeadline(Deadline)"
  fullName: "io.grpc.stub.AbstractStub.withDeadline(io.grpc.Deadline)"
- uid: "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
  name: "AbstractStub.withMaxInboundMessageSize(int)"
  nameWithType: "AbstractStub.withMaxInboundMessageSize(int)"
  fullName: "io.grpc.stub.AbstractStub.withMaxInboundMessageSize(int)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
  name: "AbstractStub.withInterceptors(ClientInterceptor)"
  nameWithType: "AbstractStub.withInterceptors(ClientInterceptor)"
  fullName: "io.grpc.stub.AbstractStub.withInterceptors(io.grpc.ClientInterceptor...)"
- uid: "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
  name: "AbstractStub.withCompression(String)"
  nameWithType: "AbstractStub.withCompression(String)"
  fullName: "io.grpc.stub.AbstractStub.withCompression(java.lang.String)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
  name: "AbstractStub.withDeadlineAfter(long,TimeUnit)"
  nameWithType: "AbstractStub.withDeadlineAfter(long,TimeUnit)"
  fullName: "io.grpc.stub.AbstractStub.withDeadlineAfter(long,java.util.concurrent.TimeUnit)"
- uid: "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
  name: "AbstractStub.withChannel(Channel)"
  nameWithType: "AbstractStub.withChannel(Channel)"
  fullName: "io.grpc.stub.AbstractStub.withChannel(io.grpc.Channel)"
- uid: "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
  name: "AbstractStub.withCallCredentials(CallCredentials)"
  nameWithType: "AbstractStub.withCallCredentials(CallCredentials)"
  fullName: "io.grpc.stub.AbstractStub.withCallCredentials(io.grpc.CallCredentials)"
- uid: "io.grpc.stub.StreamObserver"
  name: "StreamObserver"
  nameWithType: "StreamObserver"
  fullName: "io.grpc.stub.StreamObserver"
- uid: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
  name: "ListInstancesResponse"
  nameWithType: "ListInstancesResponse"
  fullName: "com.google.cloud.memcache.v1beta2.ListInstancesResponse"
- uid: "com.google.cloud.memcache.v1beta2.Instance"
  name: "Instance"
  nameWithType: "Instance"
  fullName: "com.google.cloud.memcache.v1beta2.Instance"
- uid: "com.google.longrunning.Operation"
  name: "Operation"
  nameWithType: "Operation"
  fullName: "com.google.longrunning.Operation"
- uid: "io.grpc.stub.AbstractAsyncStub"
  name: "AbstractAsyncStub"
  nameWithType: "AbstractAsyncStub"
  fullName: "io.grpc.stub.AbstractAsyncStub"
- uid: "T>,io.grpc.Channel)"
  name: "T>,Channel)"
  nameWithType: "T>,Channel)"
  fullName: "T>,io.grpc.Channel)"
- uid: "io.grpc.stub.AbstractAsyncStub."
  name: "AbstractAsyncStub."
  nameWithType: "AbstractAsyncStub."
  fullName: "io.grpc.stub.AbstractAsyncStub."
- uid: "T>newStub(io.grpc.stub.AbstractStub.StubFactory"
  name: "T>newStub(AbstractStub.StubFactory"
  nameWithType: "T>newStub(AbstractStub.StubFactory"
  fullName: "T>newStub(io.grpc.stub.AbstractStub.StubFactory"
- uid: "T>withOption(io.grpc.CallOptions.Key"
  name: "T>withOption(CallOptions.Key"
  nameWithType: "T>withOption(CallOptions.Key"
  fullName: "T>withOption(io.grpc.CallOptions.Key"
- uid: "T>,T)"
  name: "T>,T)"
  nameWithType: "T>,T)"
  fullName: "T>,T)"
- uid: "io.grpc.stub.AbstractStub."
  name: "AbstractStub."
  nameWithType: "AbstractStub."
  fullName: "io.grpc.stub.AbstractStub."
- uid: "T>,io.grpc.Channel,io.grpc.CallOptions)"
  name: "T>,Channel,CallOptions)"
  nameWithType: "T>,Channel,CallOptions)"
  fullName: "T>,io.grpc.Channel,io.grpc.CallOptions)"
