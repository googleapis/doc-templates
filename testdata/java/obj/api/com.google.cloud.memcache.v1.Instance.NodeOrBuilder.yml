### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  id: "NodeOrBuilder"
  parent: "com.google.cloud.memcache.v1"
  children:
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes()"
  - "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters()"
  langs:
  - "java"
  name: "Instance.NodeOrBuilder"
  nameWithType: "Instance.NodeOrBuilder"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  type: "Interface"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public static interface Instance.NodeOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost()"
  id: "getHost()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getHost()"
  nameWithType: "Instance.NodeOrBuilder.getHost()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Hostname or IP address of the Memcached node used by the\n clients to connect to the Memcached server on this node.\n```\n\n`string host = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getHost()"
    return:
      type: "java.lang.String"
      description: "The host."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes()"
  id: "getHostBytes()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getHostBytes()"
  nameWithType: "Instance.NodeOrBuilder.getHostBytes()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Hostname or IP address of the Memcached node used by the\n clients to connect to the Memcached server on this node.\n```\n\n`string host = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getHostBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for host."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId()"
  id: "getNodeId()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getNodeId()"
  nameWithType: "Instance.NodeOrBuilder.getNodeId()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Identifier of the Memcached node. The node id does not\n include project or location like the Memcached instance name.\n```\n\n`string node_id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getNodeId()"
    return:
      type: "java.lang.String"
      description: "The nodeId."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes()"
  id: "getNodeIdBytes()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getNodeIdBytes()"
  nameWithType: "Instance.NodeOrBuilder.getNodeIdBytes()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Identifier of the Memcached node. The node id does not\n include project or location like the Memcached instance name.\n```\n\n`string node_id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getNodeIdBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for nodeId."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters()"
  id: "getParameters()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getParameters()"
  nameWithType: "Instance.NodeOrBuilder.getParameters()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined parameters currently applied to the node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 6;`"
  syntax:
    content: "public abstract MemcacheParameters getParameters()"
    return:
      type: "com.google.cloud.memcache.v1.MemcacheParameters"
      description: "The parameters."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder()"
  id: "getParametersOrBuilder()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getParametersOrBuilder()"
  nameWithType: "Instance.NodeOrBuilder.getParametersOrBuilder()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined parameters currently applied to the node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 6;`"
  syntax:
    content: "public abstract MemcacheParametersOrBuilder getParametersOrBuilder()"
    return:
      type: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort()"
  id: "getPort()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getPort()"
  nameWithType: "Instance.NodeOrBuilder.getPort()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The port number of the Memcached server on this node.\n```\n\n`int32 port = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract int getPort()"
    return:
      type: "int"
      description: "The port."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState()"
  id: "getState()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getState()"
  nameWithType: "Instance.NodeOrBuilder.getState()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Current state of the Memcached node.\n```\n\n`.google.cloud.memcache.v1.Instance.Node.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Instance.Node.State getState()"
    return:
      type: "com.google.cloud.memcache.v1.Instance.Node.State"
      description: "The state."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue()"
  id: "getStateValue()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getStateValue()"
  nameWithType: "Instance.NodeOrBuilder.getStateValue()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Current state of the Memcached node.\n```\n\n`.google.cloud.memcache.v1.Instance.Node.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract int getStateValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for state."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone()"
  id: "getZone()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getZone()"
  nameWithType: "Instance.NodeOrBuilder.getZone()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Location (GCP Zone) for the Memcached node.\n```\n\n`string zone = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getZone()"
    return:
      type: "java.lang.String"
      description: "The zone."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes()"
  id: "getZoneBytes()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "getZoneBytes()"
  nameWithType: "Instance.NodeOrBuilder.getZoneBytes()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Location (GCP Zone) for the Memcached node.\n```\n\n`string zone = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getZoneBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for zone."
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters()"
  id: "hasParameters()"
  parent: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  langs:
  - "java"
  name: "hasParameters()"
  nameWithType: "Instance.NodeOrBuilder.hasParameters()"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters()"
  overload: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser defined parameters currently applied to the node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 6;`"
  syntax:
    content: "public abstract boolean hasParameters()"
    return:
      type: "boolean"
      description: "Whether the parameters field is set."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId*"
  name: "getNodeId"
  nameWithType: "Instance.NodeOrBuilder.getNodeId"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeId"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.ByteString"
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes*"
  name: "getNodeIdBytes"
  nameWithType: "Instance.NodeOrBuilder.getNodeIdBytes"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getNodeIdBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone*"
  name: "getZone"
  nameWithType: "Instance.NodeOrBuilder.getZone"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZone"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes*"
  name: "getZoneBytes"
  nameWithType: "Instance.NodeOrBuilder.getZoneBytes"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getZoneBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue*"
  name: "getStateValue"
  nameWithType: "Instance.NodeOrBuilder.getStateValue"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getStateValue"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.Node.State"
  name: "Instance.Node.State"
  nameWithType: "Instance.Node.State"
  fullName: "com.google.cloud.memcache.v1.Instance.Node.State"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState*"
  name: "getState"
  nameWithType: "Instance.NodeOrBuilder.getState"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getState"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost*"
  name: "getHost"
  nameWithType: "Instance.NodeOrBuilder.getHost"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHost"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes*"
  name: "getHostBytes"
  nameWithType: "Instance.NodeOrBuilder.getHostBytes"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getHostBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort*"
  name: "getPort"
  nameWithType: "Instance.NodeOrBuilder.getPort"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getPort"
  package: "com.google.cloud.memcache.v1"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters*"
  name: "hasParameters"
  nameWithType: "Instance.NodeOrBuilder.hasParameters"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.hasParameters"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParameters"
  name: "MemcacheParameters"
  nameWithType: "MemcacheParameters"
  fullName: "com.google.cloud.memcache.v1.MemcacheParameters"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters*"
  name: "getParameters"
  nameWithType: "Instance.NodeOrBuilder.getParameters"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParameters"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  name: "MemcacheParametersOrBuilder"
  nameWithType: "MemcacheParametersOrBuilder"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder*"
  name: "getParametersOrBuilder"
  nameWithType: "Instance.NodeOrBuilder.getParametersOrBuilder"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder.getParametersOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
