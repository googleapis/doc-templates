### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  id: "Builder"
  parent: "com.google.cloud.speech.v1"
  children:
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts(java.lang.Iterable<? extends com.google.cloud.speech.v1.SpeechContext>)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(com.google.cloud.speech.v1.SpeechContext)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(com.google.cloud.speech.v1.SpeechContext.Builder)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.build()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized()"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.cloud.speech.v1.RecognitionConfig)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.protobuf.Message)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation(boolean)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel(boolean)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets(boolean)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding(com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode(java.lang.String)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes(com.google.protobuf.ByteString)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(com.google.cloud.speech.v1.RecognitionMetadata.Builder)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel(java.lang.String)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes(com.google.protobuf.ByteString)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter(boolean)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz(int)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  - "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced(boolean)"
  langs:
  - "java"
  name: "RecognitionConfig.Builder"
  nameWithType: "RecognitionConfig.Builder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  type: "Class"
  package: "com.google.cloud.speech.v1"
  summary: "\n Provides information to the recognizer that specifies how to process the\n request.\n \n\n Protobuf type <code>google.cloud.speech.v1.RecognitionConfig</code>"
  syntax:
    content: "public static final class RecognitionConfig.Builder extends GeneratedMessageV3.Builder<RecognitionConfig.Builder> implements RecognitionConfigOrBuilder"
  inheritance:
  - "java.lang.Object"
  - "com.google.protobuf.AbstractMessageLite.Builder"
  - "com.google.protobuf.AbstractMessage.Builder"
  - "com.google.protobuf.GeneratedMessageV3.Builder"
  implements:
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  inheritedMembers:
  - "com.google.protobuf.AbstractMessage.Builder.findInitializationErrors()"
  - "com.google.protobuf.AbstractMessage.Builder.getInitializationErrorString()"
  - "com.google.protobuf.AbstractMessage.Builder.internalMergeFrom(com.google.protobuf.AbstractMessageLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[])"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.Message)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream)"
  - "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
  - "com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(com.google.protobuf.Message)"
  - "com.google.protobuf.AbstractMessage.Builder.toString()"
  - "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.Collection<? super T>)"
  - "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.List<? super T>)"
  - "com.google.protobuf.AbstractMessageLite.Builder.internalMergeFrom(MessageType)"
  - "com.google.protobuf.AbstractMessageLite.Builder.mergeFrom(com.google.protobuf.MessageLite)"
  - "com.google.protobuf.AbstractMessageLite.Builder.newUninitializedMessageException(com.google.protobuf.MessageLite)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.clear()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.clone()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getAllFields()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getDescriptorForType()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getField(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getOneofFieldDescriptor(com.google.protobuf.Descriptors.OneofDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getParentForChildren()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor,int)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldCount(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.getUnknownFields()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.hasField(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.hasOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMapField(int)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMutableMapField(int)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.isClean()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.isInitialized()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.markClean()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.newBuilderForField(com.google.protobuf.Descriptors.FieldDescriptor)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.onBuilt()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.onChanged()"
  - "com.google.protobuf.GeneratedMessageV3.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  - "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFieldsProto3(com.google.protobuf.UnknownFieldSet)"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "RecognitionConfig.Builder.Builder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent)"
  id: "Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "Builder(GeneratedMessageV3.BuilderParent parent)"
  nameWithType: "RecognitionConfig.Builder.Builder(GeneratedMessageV3.BuilderParent parent)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder(GeneratedMessageV3.BuilderParent parent)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "private Builder(GeneratedMessageV3.BuilderParent parent)"
    parameters:
    - id: "parent"
      type: "com.google.protobuf.GeneratedMessageV3.BuilderParent"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts(java.lang.Iterable<? extends com.google.cloud.speech.v1.SpeechContext>)"
  id: "addAllSpeechContexts(java.lang.Iterable<? extends com.google.cloud.speech.v1.SpeechContext>)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addAllSpeechContexts(Iterable<? extends SpeechContext> values)"
  nameWithType: "RecognitionConfig.Builder.addAllSpeechContexts(Iterable<? extends SpeechContext> values)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts(Iterable<? extends SpeechContext> values)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder addAllSpeechContexts(Iterable<? extends SpeechContext> values)"
    parameters:
    - id: "values"
      type: "java.lang.Iterable<? extends com.google.cloud.speech.v1.SpeechContext>"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  id: "addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addRepeatedField(Descriptors.FieldDescriptor field, Object value)"
  nameWithType: "RecognitionConfig.Builder.addRepeatedField(Descriptors.FieldDescriptor field, Object value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField(Descriptors.FieldDescriptor field, Object value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value)"
    parameters:
    - id: "field"
      type: "com.google.protobuf.Descriptors.FieldDescriptor"
    - id: "value"
      type: "java.lang.Object"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(com.google.cloud.speech.v1.SpeechContext)"
  id: "addSpeechContexts(com.google.cloud.speech.v1.SpeechContext)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContexts(SpeechContext value)"
  nameWithType: "RecognitionConfig.Builder.addSpeechContexts(SpeechContext value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(SpeechContext value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder addSpeechContexts(SpeechContext value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.SpeechContext"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(com.google.cloud.speech.v1.SpeechContext.Builder)"
  id: "addSpeechContexts(com.google.cloud.speech.v1.SpeechContext.Builder)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContexts(SpeechContext.Builder builderForValue)"
  nameWithType: "RecognitionConfig.Builder.addSpeechContexts(SpeechContext.Builder builderForValue)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(SpeechContext.Builder builderForValue)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder addSpeechContexts(SpeechContext.Builder builderForValue)"
    parameters:
    - id: "builderForValue"
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  id: "addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContexts(int index, SpeechContext value)"
  nameWithType: "RecognitionConfig.Builder.addSpeechContexts(int index, SpeechContext value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int index, SpeechContext value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder addSpeechContexts(int index, SpeechContext value)"
    parameters:
    - id: "index"
      type: "int"
    - id: "value"
      type: "com.google.cloud.speech.v1.SpeechContext"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  id: "addSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  nameWithType: "RecognitionConfig.Builder.addSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder addSpeechContexts(int index, SpeechContext.Builder builderForValue)"
    parameters:
    - id: "index"
      type: "int"
    - id: "builderForValue"
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder()"
  id: "addSpeechContextsBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContextsBuilder()"
  nameWithType: "RecognitionConfig.Builder.addSpeechContextsBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public SpeechContext.Builder addSpeechContextsBuilder()"
    return:
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder(int)"
  id: "addSpeechContextsBuilder(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "addSpeechContextsBuilder(int index)"
  nameWithType: "RecognitionConfig.Builder.addSpeechContextsBuilder(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public SpeechContext.Builder addSpeechContextsBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "RecognitionConfig.Builder.build()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.build()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.build*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig build()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial()"
  id: "buildPartial()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "buildPartial()"
  nameWithType: "RecognitionConfig.Builder.buildPartial()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig buildPartial()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear()"
  id: "clear()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clear()"
  nameWithType: "RecognitionConfig.Builder.clear()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.clear()"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder clear()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount()"
  id: "clearAudioChannelCount()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearAudioChannelCount()"
  nameWithType: "RecognitionConfig.Builder.clearAudioChannelCount()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n The number of channels in the input audio data.\n ONLY set this for MULTI-CHANNEL recognition.\n Valid values for LINEAR16 and FLAC are <code>1</code>-<code>8</code>.\n Valid values for OGG_OPUS are '1'-'254'.\n Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only <code>1</code>.\n If <code>0</code> or omitted, defaults to one channel (mono).\n Note: We only recognize the first channel by default.\n To perform independent recognition on each channel set\n <code>enable_separate_recognition_per_channel</code> to 'true'.\n \n\n <code>int32 audio_channel_count = 7;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearAudioChannelCount()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig()"
  id: "clearDiarizationConfig()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearDiarizationConfig()"
  nameWithType: "RecognitionConfig.Builder.clearDiarizationConfig()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearDiarizationConfig()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation()"
  id: "clearEnableAutomaticPunctuation()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearEnableAutomaticPunctuation()"
  nameWithType: "RecognitionConfig.Builder.clearEnableAutomaticPunctuation()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If 'true', adds punctuation to recognition result hypotheses.\n This feature is only available in select languages. Setting this for\n requests in other languages has no effect at all.\n The default 'false' value does not add punctuation to result hypotheses.\n \n\n <code>bool enable_automatic_punctuation = 11;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearEnableAutomaticPunctuation()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel()"
  id: "clearEnableSeparateRecognitionPerChannel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearEnableSeparateRecognitionPerChannel()"
  nameWithType: "RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n This needs to be set to <code>true</code> explicitly and <code>audio_channel_count</code> &gt; 1\n to get each channel recognized separately. The recognition result will\n contain a <code>channel_tag</code> field to state which channel that result belongs\n to. If this is not true, we will only recognize the first channel. The\n request is billed cumulatively for all channels recognized:\n <code>audio_channel_count</code> multiplied by the length of the audio.\n \n\n <code>bool enable_separate_recognition_per_channel = 12;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearEnableSeparateRecognitionPerChannel()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets()"
  id: "clearEnableWordTimeOffsets()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearEnableWordTimeOffsets()"
  nameWithType: "RecognitionConfig.Builder.clearEnableWordTimeOffsets()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If <code>true</code>, the top result includes a list of words and\n the start and end time offsets (timestamps) for those words. If\n <code>false</code>, no word-level time offset information is returned. The default is\n <code>false</code>.\n \n\n <code>bool enable_word_time_offsets = 8;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearEnableWordTimeOffsets()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding()"
  id: "clearEncoding()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearEncoding()"
  nameWithType: "RecognitionConfig.Builder.clearEncoding()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Encoding of audio data sent in all <code>RecognitionAudio</code> messages.\n This field is optional for <code>FLAC</code> and <code>WAV</code> audio files and required\n for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearEncoding()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  id: "clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearField(Descriptors.FieldDescriptor field)"
  nameWithType: "RecognitionConfig.Builder.clearField(Descriptors.FieldDescriptor field)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField(Descriptors.FieldDescriptor field)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder clearField(Descriptors.FieldDescriptor field)"
    parameters:
    - id: "field"
      type: "com.google.protobuf.Descriptors.FieldDescriptor"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode()"
  id: "clearLanguageCode()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearLanguageCode()"
  nameWithType: "RecognitionConfig.Builder.clearLanguageCode()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Required. The language of the supplied audio as a\n <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a> language tag.\n Example: \"en-US\".\n See <a href=\"https://cloud.google.com/speech-to-text/docs/languages\">Language\n Support</a> for a list\n of the currently supported language codes.\n \n\n <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearLanguageCode()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives()"
  id: "clearMaxAlternatives()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearMaxAlternatives()"
  nameWithType: "RecognitionConfig.Builder.clearMaxAlternatives()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Maximum number of recognition hypotheses to be returned.\n Specifically, the maximum number of <code>SpeechRecognitionAlternative</code> messages\n within each <code>SpeechRecognitionResult</code>.\n The server may return fewer than <code>max_alternatives</code>.\n Valid values are <code>0</code>-<code>30</code>. A value of <code>0</code> or <code>1</code> will return a maximum of\n one. If omitted, will return a maximum of one.\n \n\n <code>int32 max_alternatives = 4;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearMaxAlternatives()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata()"
  id: "clearMetadata()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearMetadata()"
  nameWithType: "RecognitionConfig.Builder.clearMetadata()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearMetadata()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel()"
  id: "clearModel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearModel()"
  nameWithType: "RecognitionConfig.Builder.clearModel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Which model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n &lt;table&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;b&gt;Model&lt;/b&gt;&lt;/td&gt;\n     &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;command_and_search&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for short queries such as voice commands or voice search.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;phone_call&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.&lt;/td&gt;\n   &lt;/tr&gt;\n &lt;/table&gt;\n \n\n <code>string model = 13;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearModel()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  id: "clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearOneof(Descriptors.OneofDescriptor oneof)"
  nameWithType: "RecognitionConfig.Builder.clearOneof(Descriptors.OneofDescriptor oneof)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof(Descriptors.OneofDescriptor oneof)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder clearOneof(Descriptors.OneofDescriptor oneof)"
    parameters:
    - id: "oneof"
      type: "com.google.protobuf.Descriptors.OneofDescriptor"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter()"
  id: "clearProfanityFilter()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearProfanityFilter()"
  nameWithType: "RecognitionConfig.Builder.clearProfanityFilter()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If set to <code>true</code>, the server will attempt to filter out\n profanities, replacing all but the initial character in each filtered word\n with asterisks, e.g. \"f***\". If set to <code>false</code> or omitted, profanities\n won't be filtered out.\n \n\n <code>bool profanity_filter = 5;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearProfanityFilter()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz()"
  id: "clearSampleRateHertz()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearSampleRateHertz()"
  nameWithType: "RecognitionConfig.Builder.clearSampleRateHertz()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Sample rate in Hertz of the audio data sent in all\n <code>RecognitionAudio</code> messages. Valid values are: 8000-48000.\n 16000 is optimal. For best results, set the sampling rate of the audio\n source to 16000 Hz. If that's not possible, use the native sample rate of\n the audio source (instead of re-sampling).\n This field is optional for FLAC and WAV audio files, but is\n required for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>int32 sample_rate_hertz = 2;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearSampleRateHertz()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts()"
  id: "clearSpeechContexts()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearSpeechContexts()"
  nameWithType: "RecognitionConfig.Builder.clearSpeechContexts()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearSpeechContexts()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced()"
  id: "clearUseEnhanced()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clearUseEnhanced()"
  nameWithType: "RecognitionConfig.Builder.clearUseEnhanced()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Set to true to use an enhanced model for speech recognition.\n If <code>use_enhanced</code> is set to true and the <code>model</code> field is not set, then\n an appropriate enhanced model is chosen if an enhanced model exists for\n the audio.\n If <code>use_enhanced</code> is true and an enhanced version of the specified model\n does not exist, then the speech is recognized using the standard version\n of the specified model.\n \n\n <code>bool use_enhanced = 14;</code>"
  syntax:
    content: "public RecognitionConfig.Builder clearUseEnhanced()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone()"
  id: "clone()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "clone()"
  nameWithType: "RecognitionConfig.Builder.clone()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.clone()"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder clone()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount()"
  id: "getAudioChannelCount()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getAudioChannelCount()"
  nameWithType: "RecognitionConfig.Builder.getAudioChannelCount()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n The number of channels in the input audio data.\n ONLY set this for MULTI-CHANNEL recognition.\n Valid values for LINEAR16 and FLAC are <code>1</code>-<code>8</code>.\n Valid values for OGG_OPUS are '1'-'254'.\n Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only <code>1</code>.\n If <code>0</code> or omitted, defaults to one channel (mono).\n Note: We only recognize the first channel by default.\n To perform independent recognition on each channel set\n <code>enable_separate_recognition_per_channel</code> to 'true'.\n \n\n <code>int32 audio_channel_count = 7;</code>"
  syntax:
    content: "public int getAudioChannelCount()"
    return:
      type: "int"
      description: "The audioChannelCount."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType()"
  id: "getDefaultInstanceForType()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDefaultInstanceForType()"
  nameWithType: "RecognitionConfig.Builder.getDefaultInstanceForType()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig getDefaultInstanceForType()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor()"
  id: "getDescriptor()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDescriptor()"
  nameWithType: "RecognitionConfig.Builder.getDescriptor()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public static final Descriptors.Descriptor getDescriptor()"
    return:
      type: "com.google.protobuf.Descriptors.Descriptor"
  javaType: "static method"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType()"
  id: "getDescriptorForType()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDescriptorForType()"
  nameWithType: "RecognitionConfig.Builder.getDescriptorForType()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.getDescriptorForType()"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public Descriptors.Descriptor getDescriptorForType()"
    return:
      type: "com.google.protobuf.Descriptors.Descriptor"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig()"
  id: "getDiarizationConfig()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDiarizationConfig()"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfig()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public SpeakerDiarizationConfig getDiarizationConfig()"
    return:
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
      description: "The diarizationConfig."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder()"
  id: "getDiarizationConfigBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDiarizationConfigBuilder()"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfigBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public SpeakerDiarizationConfig.Builder getDiarizationConfigBuilder()"
    return:
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder()"
  id: "getDiarizationConfigOrBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getDiarizationConfigOrBuilder()"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfigOrBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public SpeakerDiarizationConfigOrBuilder getDiarizationConfigOrBuilder()"
    return:
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation()"
  id: "getEnableAutomaticPunctuation()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getEnableAutomaticPunctuation()"
  nameWithType: "RecognitionConfig.Builder.getEnableAutomaticPunctuation()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If 'true', adds punctuation to recognition result hypotheses.\n This feature is only available in select languages. Setting this for\n requests in other languages has no effect at all.\n The default 'false' value does not add punctuation to result hypotheses.\n \n\n <code>bool enable_automatic_punctuation = 11;</code>"
  syntax:
    content: "public boolean getEnableAutomaticPunctuation()"
    return:
      type: "boolean"
      description: "The enableAutomaticPunctuation."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel()"
  id: "getEnableSeparateRecognitionPerChannel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getEnableSeparateRecognitionPerChannel()"
  nameWithType: "RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n This needs to be set to <code>true</code> explicitly and <code>audio_channel_count</code> &gt; 1\n to get each channel recognized separately. The recognition result will\n contain a <code>channel_tag</code> field to state which channel that result belongs\n to. If this is not true, we will only recognize the first channel. The\n request is billed cumulatively for all channels recognized:\n <code>audio_channel_count</code> multiplied by the length of the audio.\n \n\n <code>bool enable_separate_recognition_per_channel = 12;</code>"
  syntax:
    content: "public boolean getEnableSeparateRecognitionPerChannel()"
    return:
      type: "boolean"
      description: "The enableSeparateRecognitionPerChannel."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets()"
  id: "getEnableWordTimeOffsets()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getEnableWordTimeOffsets()"
  nameWithType: "RecognitionConfig.Builder.getEnableWordTimeOffsets()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If <code>true</code>, the top result includes a list of words and\n the start and end time offsets (timestamps) for those words. If\n <code>false</code>, no word-level time offset information is returned. The default is\n <code>false</code>.\n \n\n <code>bool enable_word_time_offsets = 8;</code>"
  syntax:
    content: "public boolean getEnableWordTimeOffsets()"
    return:
      type: "boolean"
      description: "The enableWordTimeOffsets."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding()"
  id: "getEncoding()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getEncoding()"
  nameWithType: "RecognitionConfig.Builder.getEncoding()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Encoding of audio data sent in all <code>RecognitionAudio</code> messages.\n This field is optional for <code>FLAC</code> and <code>WAV</code> audio files and required\n for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;</code>"
  syntax:
    content: "public RecognitionConfig.AudioEncoding getEncoding()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
      description: "The encoding."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue()"
  id: "getEncodingValue()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getEncodingValue()"
  nameWithType: "RecognitionConfig.Builder.getEncodingValue()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Encoding of audio data sent in all <code>RecognitionAudio</code> messages.\n This field is optional for <code>FLAC</code> and <code>WAV</code> audio files and required\n for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;</code>"
  syntax:
    content: "public int getEncodingValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for encoding."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode()"
  id: "getLanguageCode()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getLanguageCode()"
  nameWithType: "RecognitionConfig.Builder.getLanguageCode()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Required. The language of the supplied audio as a\n <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a> language tag.\n Example: \"en-US\".\n See <a href=\"https://cloud.google.com/speech-to-text/docs/languages\">Language\n Support</a> for a list\n of the currently supported language codes.\n \n\n <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public String getLanguageCode()"
    return:
      type: "java.lang.String"
      description: "The languageCode."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes()"
  id: "getLanguageCodeBytes()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getLanguageCodeBytes()"
  nameWithType: "RecognitionConfig.Builder.getLanguageCodeBytes()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Required. The language of the supplied audio as a\n <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a> language tag.\n Example: \"en-US\".\n See <a href=\"https://cloud.google.com/speech-to-text/docs/languages\">Language\n Support</a> for a list\n of the currently supported language codes.\n \n\n <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public ByteString getLanguageCodeBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for languageCode."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives()"
  id: "getMaxAlternatives()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getMaxAlternatives()"
  nameWithType: "RecognitionConfig.Builder.getMaxAlternatives()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Maximum number of recognition hypotheses to be returned.\n Specifically, the maximum number of <code>SpeechRecognitionAlternative</code> messages\n within each <code>SpeechRecognitionResult</code>.\n The server may return fewer than <code>max_alternatives</code>.\n Valid values are <code>0</code>-<code>30</code>. A value of <code>0</code> or <code>1</code> will return a maximum of\n one. If omitted, will return a maximum of one.\n \n\n <code>int32 max_alternatives = 4;</code>"
  syntax:
    content: "public int getMaxAlternatives()"
    return:
      type: "int"
      description: "The maxAlternatives."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata()"
  id: "getMetadata()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "RecognitionConfig.Builder.getMetadata()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionMetadata getMetadata()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionMetadata"
      description: "The metadata."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder()"
  id: "getMetadataBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getMetadataBuilder()"
  nameWithType: "RecognitionConfig.Builder.getMetadataBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionMetadata.Builder getMetadataBuilder()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionMetadata.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder()"
  id: "getMetadataOrBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getMetadataOrBuilder()"
  nameWithType: "RecognitionConfig.Builder.getMetadataOrBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionMetadataOrBuilder getMetadataOrBuilder()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel()"
  id: "getModel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getModel()"
  nameWithType: "RecognitionConfig.Builder.getModel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Which model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n &lt;table&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;b&gt;Model&lt;/b&gt;&lt;/td&gt;\n     &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;command_and_search&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for short queries such as voice commands or voice search.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;phone_call&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.&lt;/td&gt;\n   &lt;/tr&gt;\n &lt;/table&gt;\n \n\n <code>string model = 13;</code>"
  syntax:
    content: "public String getModel()"
    return:
      type: "java.lang.String"
      description: "The model."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes()"
  id: "getModelBytes()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getModelBytes()"
  nameWithType: "RecognitionConfig.Builder.getModelBytes()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Which model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n &lt;table&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;b&gt;Model&lt;/b&gt;&lt;/td&gt;\n     &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;command_and_search&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for short queries such as voice commands or voice search.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;phone_call&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.&lt;/td&gt;\n   &lt;/tr&gt;\n &lt;/table&gt;\n \n\n <code>string model = 13;</code>"
  syntax:
    content: "public ByteString getModelBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for model."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter()"
  id: "getProfanityFilter()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getProfanityFilter()"
  nameWithType: "RecognitionConfig.Builder.getProfanityFilter()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If set to <code>true</code>, the server will attempt to filter out\n profanities, replacing all but the initial character in each filtered word\n with asterisks, e.g. \"f***\". If set to <code>false</code> or omitted, profanities\n won't be filtered out.\n \n\n <code>bool profanity_filter = 5;</code>"
  syntax:
    content: "public boolean getProfanityFilter()"
    return:
      type: "boolean"
      description: "The profanityFilter."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz()"
  id: "getSampleRateHertz()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSampleRateHertz()"
  nameWithType: "RecognitionConfig.Builder.getSampleRateHertz()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Sample rate in Hertz of the audio data sent in all\n <code>RecognitionAudio</code> messages. Valid values are: 8000-48000.\n 16000 is optimal. For best results, set the sampling rate of the audio\n source to 16000 Hz. If that's not possible, use the native sample rate of\n the audio source (instead of re-sampling).\n This field is optional for FLAC and WAV audio files, but is\n required for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>int32 sample_rate_hertz = 2;</code>"
  syntax:
    content: "public int getSampleRateHertz()"
    return:
      type: "int"
      description: "The sampleRateHertz."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts(int)"
  id: "getSpeechContexts(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContexts(int index)"
  nameWithType: "RecognitionConfig.Builder.getSpeechContexts(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public SpeechContext getSpeechContexts(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContext"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder(int)"
  id: "getSpeechContextsBuilder(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsBuilder(int index)"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsBuilder(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public SpeechContext.Builder getSpeechContextsBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList()"
  id: "getSpeechContextsBuilderList()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsBuilderList()"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsBuilderList()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public List<SpeechContext.Builder> getSpeechContextsBuilderList()"
    return:
      type: "java.util.List<com.google.cloud.speech.v1.SpeechContext.Builder>"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount()"
  id: "getSpeechContextsCount()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsCount()"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsCount()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public int getSpeechContextsCount()"
    return:
      type: "int"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList()"
  id: "getSpeechContextsList()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsList()"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsList()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public List<SpeechContext> getSpeechContextsList()"
    return:
      type: "java.util.List<com.google.cloud.speech.v1.SpeechContext>"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder(int)"
  id: "getSpeechContextsOrBuilder(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsOrBuilder(int index)"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsOrBuilder(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public SpeechContextOrBuilder getSpeechContextsOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList()"
  id: "getSpeechContextsOrBuilderList()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getSpeechContextsOrBuilderList()"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsOrBuilderList()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public List<? extends SpeechContextOrBuilder> getSpeechContextsOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.cloud.speech.v1.SpeechContextOrBuilder>"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced()"
  id: "getUseEnhanced()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "getUseEnhanced()"
  nameWithType: "RecognitionConfig.Builder.getUseEnhanced()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Set to true to use an enhanced model for speech recognition.\n If <code>use_enhanced</code> is set to true and the <code>model</code> field is not set, then\n an appropriate enhanced model is chosen if an enhanced model exists for\n the audio.\n If <code>use_enhanced</code> is true and an enhanced version of the specified model\n does not exist, then the speech is recognized using the standard version\n of the specified model.\n \n\n <code>bool use_enhanced = 14;</code>"
  syntax:
    content: "public boolean getUseEnhanced()"
    return:
      type: "boolean"
      description: "The useEnhanced."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig()"
  id: "hasDiarizationConfig()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "hasDiarizationConfig()"
  nameWithType: "RecognitionConfig.Builder.hasDiarizationConfig()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public boolean hasDiarizationConfig()"
    return:
      type: "boolean"
      description: "Whether the diarizationConfig field is set."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata()"
  id: "hasMetadata()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "hasMetadata()"
  nameWithType: "RecognitionConfig.Builder.hasMetadata()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public boolean hasMetadata()"
    return:
      type: "boolean"
      description: "Whether the metadata field is set."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable()"
  id: "internalGetFieldAccessorTable()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "internalGetFieldAccessorTable()"
  nameWithType: "RecognitionConfig.Builder.internalGetFieldAccessorTable()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable()"
    return:
      type: "com.google.protobuf.GeneratedMessageV3.FieldAccessorTable"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized()"
  id: "isInitialized()"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "isInitialized()"
  nameWithType: "RecognitionConfig.Builder.isInitialized()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized()"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.isInitialized()"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public final boolean isInitialized()"
    return:
      type: "boolean"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  id: "mergeDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeDiarizationConfig(SpeakerDiarizationConfig value)"
  nameWithType: "RecognitionConfig.Builder.mergeDiarizationConfig(SpeakerDiarizationConfig value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig(SpeakerDiarizationConfig value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public RecognitionConfig.Builder mergeDiarizationConfig(SpeakerDiarizationConfig value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.cloud.speech.v1.RecognitionConfig)"
  id: "mergeFrom(com.google.cloud.speech.v1.RecognitionConfig)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeFrom(RecognitionConfig other)"
  nameWithType: "RecognitionConfig.Builder.mergeFrom(RecognitionConfig other)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(RecognitionConfig other)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder mergeFrom(RecognitionConfig other)"
    parameters:
    - id: "other"
      type: "com.google.cloud.speech.v1.RecognitionConfig"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  id: "mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)"
  nameWithType: "RecognitionConfig.Builder.mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom*"
  overridden: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)"
    parameters:
    - id: "input"
      type: "com.google.protobuf.CodedInputStream"
    - id: "extensionRegistry"
      type: "com.google.protobuf.ExtensionRegistryLite"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(com.google.protobuf.Message)"
  id: "mergeFrom(com.google.protobuf.Message)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeFrom(Message other)"
  nameWithType: "RecognitionConfig.Builder.mergeFrom(Message other)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom(Message other)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom*"
  overridden: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.Message)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder mergeFrom(Message other)"
    parameters:
    - id: "other"
      type: "com.google.protobuf.Message"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  id: "mergeMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeMetadata(RecognitionMetadata value)"
  nameWithType: "RecognitionConfig.Builder.mergeMetadata(RecognitionMetadata value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata(RecognitionMetadata value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionConfig.Builder mergeMetadata(RecognitionMetadata value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.RecognitionMetadata"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  id: "mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "mergeUnknownFields(UnknownFieldSet unknownFields)"
  nameWithType: "RecognitionConfig.Builder.mergeUnknownFields(UnknownFieldSet unknownFields)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields(UnknownFieldSet unknownFields)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public final RecognitionConfig.Builder mergeUnknownFields(UnknownFieldSet unknownFields)"
    parameters:
    - id: "unknownFields"
      type: "com.google.protobuf.UnknownFieldSet"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts(int)"
  id: "removeSpeechContexts(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "removeSpeechContexts(int index)"
  nameWithType: "RecognitionConfig.Builder.removeSpeechContexts(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder removeSpeechContexts(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount(int)"
  id: "setAudioChannelCount(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setAudioChannelCount(int value)"
  nameWithType: "RecognitionConfig.Builder.setAudioChannelCount(int value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount(int value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n The number of channels in the input audio data.\n ONLY set this for MULTI-CHANNEL recognition.\n Valid values for LINEAR16 and FLAC are <code>1</code>-<code>8</code>.\n Valid values for OGG_OPUS are '1'-'254'.\n Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only <code>1</code>.\n If <code>0</code> or omitted, defaults to one channel (mono).\n Note: We only recognize the first channel by default.\n To perform independent recognition on each channel set\n <code>enable_separate_recognition_per_channel</code> to 'true'.\n \n\n <code>int32 audio_channel_count = 7;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setAudioChannelCount(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The audioChannelCount to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  id: "setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setDiarizationConfig(SpeakerDiarizationConfig value)"
  nameWithType: "RecognitionConfig.Builder.setDiarizationConfig(SpeakerDiarizationConfig value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(SpeakerDiarizationConfig value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setDiarizationConfig(SpeakerDiarizationConfig value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder)"
  id: "setDiarizationConfig(com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setDiarizationConfig(SpeakerDiarizationConfig.Builder builderForValue)"
  nameWithType: "RecognitionConfig.Builder.setDiarizationConfig(SpeakerDiarizationConfig.Builder builderForValue)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig(SpeakerDiarizationConfig.Builder builderForValue)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Config to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n \n\n <code>.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setDiarizationConfig(SpeakerDiarizationConfig.Builder builderForValue)"
    parameters:
    - id: "builderForValue"
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation(boolean)"
  id: "setEnableAutomaticPunctuation(boolean)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setEnableAutomaticPunctuation(boolean value)"
  nameWithType: "RecognitionConfig.Builder.setEnableAutomaticPunctuation(boolean value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation(boolean value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If 'true', adds punctuation to recognition result hypotheses.\n This feature is only available in select languages. Setting this for\n requests in other languages has no effect at all.\n The default 'false' value does not add punctuation to result hypotheses.\n \n\n <code>bool enable_automatic_punctuation = 11;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setEnableAutomaticPunctuation(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The enableAutomaticPunctuation to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel(boolean)"
  id: "setEnableSeparateRecognitionPerChannel(boolean)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setEnableSeparateRecognitionPerChannel(boolean value)"
  nameWithType: "RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel(boolean value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel(boolean value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n This needs to be set to <code>true</code> explicitly and <code>audio_channel_count</code> &gt; 1\n to get each channel recognized separately. The recognition result will\n contain a <code>channel_tag</code> field to state which channel that result belongs\n to. If this is not true, we will only recognize the first channel. The\n request is billed cumulatively for all channels recognized:\n <code>audio_channel_count</code> multiplied by the length of the audio.\n \n\n <code>bool enable_separate_recognition_per_channel = 12;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setEnableSeparateRecognitionPerChannel(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The enableSeparateRecognitionPerChannel to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets(boolean)"
  id: "setEnableWordTimeOffsets(boolean)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setEnableWordTimeOffsets(boolean value)"
  nameWithType: "RecognitionConfig.Builder.setEnableWordTimeOffsets(boolean value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets(boolean value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If <code>true</code>, the top result includes a list of words and\n the start and end time offsets (timestamps) for those words. If\n <code>false</code>, no word-level time offset information is returned. The default is\n <code>false</code>.\n \n\n <code>bool enable_word_time_offsets = 8;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setEnableWordTimeOffsets(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The enableWordTimeOffsets to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding(com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding)"
  id: "setEncoding(com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setEncoding(RecognitionConfig.AudioEncoding value)"
  nameWithType: "RecognitionConfig.Builder.setEncoding(RecognitionConfig.AudioEncoding value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding(RecognitionConfig.AudioEncoding value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Encoding of audio data sent in all <code>RecognitionAudio</code> messages.\n This field is optional for <code>FLAC</code> and <code>WAV</code> audio files and required\n for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setEncoding(RecognitionConfig.AudioEncoding value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
      description: "The encoding to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue(int)"
  id: "setEncodingValue(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setEncodingValue(int value)"
  nameWithType: "RecognitionConfig.Builder.setEncodingValue(int value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue(int value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Encoding of audio data sent in all <code>RecognitionAudio</code> messages.\n This field is optional for <code>FLAC</code> and <code>WAV</code> audio files and required\n for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setEncodingValue(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The enum numeric value on the wire for encoding to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  id: "setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setField(Descriptors.FieldDescriptor field, Object value)"
  nameWithType: "RecognitionConfig.Builder.setField(Descriptors.FieldDescriptor field, Object value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField(Descriptors.FieldDescriptor field, Object value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder setField(Descriptors.FieldDescriptor field, Object value)"
    parameters:
    - id: "field"
      type: "com.google.protobuf.Descriptors.FieldDescriptor"
    - id: "value"
      type: "java.lang.Object"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode(java.lang.String)"
  id: "setLanguageCode(java.lang.String)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setLanguageCode(String value)"
  nameWithType: "RecognitionConfig.Builder.setLanguageCode(String value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode(String value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Required. The language of the supplied audio as a\n <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a> language tag.\n Example: \"en-US\".\n See <a href=\"https://cloud.google.com/speech-to-text/docs/languages\">Language\n Support</a> for a list\n of the currently supported language codes.\n \n\n <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public RecognitionConfig.Builder setLanguageCode(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The languageCode to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes(com.google.protobuf.ByteString)"
  id: "setLanguageCodeBytes(com.google.protobuf.ByteString)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setLanguageCodeBytes(ByteString value)"
  nameWithType: "RecognitionConfig.Builder.setLanguageCodeBytes(ByteString value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes(ByteString value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Required. The language of the supplied audio as a\n <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a> language tag.\n Example: \"en-US\".\n See <a href=\"https://cloud.google.com/speech-to-text/docs/languages\">Language\n Support</a> for a list\n of the currently supported language codes.\n \n\n <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public RecognitionConfig.Builder setLanguageCodeBytes(ByteString value)"
    parameters:
    - id: "value"
      type: "com.google.protobuf.ByteString"
      description: "The bytes for languageCode to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives(int)"
  id: "setMaxAlternatives(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setMaxAlternatives(int value)"
  nameWithType: "RecognitionConfig.Builder.setMaxAlternatives(int value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives(int value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Maximum number of recognition hypotheses to be returned.\n Specifically, the maximum number of <code>SpeechRecognitionAlternative</code> messages\n within each <code>SpeechRecognitionResult</code>.\n The server may return fewer than <code>max_alternatives</code>.\n Valid values are <code>0</code>-<code>30</code>. A value of <code>0</code> or <code>1</code> will return a maximum of\n one. If omitted, will return a maximum of one.\n \n\n <code>int32 max_alternatives = 4;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setMaxAlternatives(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The maxAlternatives to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  id: "setMetadata(com.google.cloud.speech.v1.RecognitionMetadata)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setMetadata(RecognitionMetadata value)"
  nameWithType: "RecognitionConfig.Builder.setMetadata(RecognitionMetadata value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(RecognitionMetadata value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setMetadata(RecognitionMetadata value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.speech.v1.RecognitionMetadata"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(com.google.cloud.speech.v1.RecognitionMetadata.Builder)"
  id: "setMetadata(com.google.cloud.speech.v1.RecognitionMetadata.Builder)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setMetadata(RecognitionMetadata.Builder builderForValue)"
  nameWithType: "RecognitionConfig.Builder.setMetadata(RecognitionMetadata.Builder builderForValue)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata(RecognitionMetadata.Builder builderForValue)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Metadata regarding this request.\n \n\n <code>.google.cloud.speech.v1.RecognitionMetadata metadata = 9;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setMetadata(RecognitionMetadata.Builder builderForValue)"
    parameters:
    - id: "builderForValue"
      type: "com.google.cloud.speech.v1.RecognitionMetadata.Builder"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel(java.lang.String)"
  id: "setModel(java.lang.String)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setModel(String value)"
  nameWithType: "RecognitionConfig.Builder.setModel(String value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel(String value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Which model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n &lt;table&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;b&gt;Model&lt;/b&gt;&lt;/td&gt;\n     &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;command_and_search&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for short queries such as voice commands or voice search.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;phone_call&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.&lt;/td&gt;\n   &lt;/tr&gt;\n &lt;/table&gt;\n \n\n <code>string model = 13;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setModel(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The model to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes(com.google.protobuf.ByteString)"
  id: "setModelBytes(com.google.protobuf.ByteString)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setModelBytes(ByteString value)"
  nameWithType: "RecognitionConfig.Builder.setModelBytes(ByteString value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes(ByteString value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Which model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n &lt;table&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;b&gt;Model&lt;/b&gt;&lt;/td&gt;\n     &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;command_and_search&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for short queries such as voice commands or voice search.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;phone_call&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n     &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;\n     &lt;td&gt;Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.&lt;/td&gt;\n   &lt;/tr&gt;\n &lt;/table&gt;\n \n\n <code>string model = 13;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setModelBytes(ByteString value)"
    parameters:
    - id: "value"
      type: "com.google.protobuf.ByteString"
      description: "The bytes for model to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter(boolean)"
  id: "setProfanityFilter(boolean)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setProfanityFilter(boolean value)"
  nameWithType: "RecognitionConfig.Builder.setProfanityFilter(boolean value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter(boolean value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n If set to <code>true</code>, the server will attempt to filter out\n profanities, replacing all but the initial character in each filtered word\n with asterisks, e.g. \"f***\". If set to <code>false</code> or omitted, profanities\n won't be filtered out.\n \n\n <code>bool profanity_filter = 5;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setProfanityFilter(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The profanityFilter to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  id: "setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value)"
  nameWithType: "RecognitionConfig.Builder.setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public RecognitionConfig.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value)"
    parameters:
    - id: "field"
      type: "com.google.protobuf.Descriptors.FieldDescriptor"
    - id: "index"
      type: "int"
    - id: "value"
      type: "java.lang.Object"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz(int)"
  id: "setSampleRateHertz(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setSampleRateHertz(int value)"
  nameWithType: "RecognitionConfig.Builder.setSampleRateHertz(int value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz(int value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Sample rate in Hertz of the audio data sent in all\n <code>RecognitionAudio</code> messages. Valid values are: 8000-48000.\n 16000 is optimal. For best results, set the sampling rate of the audio\n source to 16000 Hz. If that's not possible, use the native sample rate of\n the audio source (instead of re-sampling).\n This field is optional for FLAC and WAV audio files, but is\n required for all other audio formats. For details, see <xref uid=\"\" data-throw-if-not-resolved=\"false\">AudioEncoding</xref>.\n \n\n <code>int32 sample_rate_hertz = 2;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setSampleRateHertz(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The sampleRateHertz to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  id: "setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setSpeechContexts(int index, SpeechContext value)"
  nameWithType: "RecognitionConfig.Builder.setSpeechContexts(int index, SpeechContext value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int index, SpeechContext value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setSpeechContexts(int index, SpeechContext value)"
    parameters:
    - id: "index"
      type: "int"
    - id: "value"
      type: "com.google.cloud.speech.v1.SpeechContext"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  id: "setSpeechContexts(int,com.google.cloud.speech.v1.SpeechContext.Builder)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  nameWithType: "RecognitionConfig.Builder.setSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts(int index, SpeechContext.Builder builderForValue)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Array of <xref uid=\"\" data-throw-if-not-resolved=\"false\">SpeechContext</xref>.\n A means to provide context to assist the speech recognition. For more\n information, see\n <a href=\"https://cloud.google.com/speech-to-text/docs/adaptation\">speech\n adaptation</a>.\n \n\n <code>repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setSpeechContexts(int index, SpeechContext.Builder builderForValue)"
    parameters:
    - id: "index"
      type: "int"
    - id: "builderForValue"
      type: "com.google.cloud.speech.v1.SpeechContext.Builder"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  id: "setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setUnknownFields(UnknownFieldSet unknownFields)"
  nameWithType: "RecognitionConfig.Builder.setUnknownFields(UnknownFieldSet unknownFields)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields(UnknownFieldSet unknownFields)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields*"
  overridden: "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public final RecognitionConfig.Builder setUnknownFields(UnknownFieldSet unknownFields)"
    parameters:
    - id: "unknownFields"
      type: "com.google.protobuf.UnknownFieldSet"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced(boolean)"
  id: "setUseEnhanced(boolean)"
  parent: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
  langs:
  - "java"
  name: "setUseEnhanced(boolean value)"
  nameWithType: "RecognitionConfig.Builder.setUseEnhanced(boolean value)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced(boolean value)"
  overload: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "\n Set to true to use an enhanced model for speech recognition.\n If <code>use_enhanced</code> is set to true and the <code>model</code> field is not set, then\n an appropriate enhanced model is chosen if an enhanced model exists for\n the audio.\n If <code>use_enhanced</code> is true and an enhanced version of the specified model\n does not exist, then the speech is recognized using the standard version\n of the specified model.\n \n\n <code>bool use_enhanced = 14;</code>"
  syntax:
    content: "public RecognitionConfig.Builder setUseEnhanced(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The useEnhanced to set."
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.Builder"
      description: "This builder for chaining."
references:
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder*"
  name: "Builder"
  nameWithType: "RecognitionConfig.Builder.Builder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.Builder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.GeneratedMessageV3.BuilderParent"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.GeneratedMessageV3.BuilderParent"
    name: "BuilderParent"
    fullName: "com.google.protobuf.GeneratedMessageV3.BuilderParent"
    isExternal: true
- uid: "com.google.protobuf.Descriptors.Descriptor"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Descriptors.Descriptor"
    name: "Descriptor"
    fullName: "com.google.protobuf.Descriptors.Descriptor"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor*"
  name: "getDescriptor"
  nameWithType: "RecognitionConfig.Builder.getDescriptor"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptor"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.GeneratedMessageV3.FieldAccessorTable"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.GeneratedMessageV3.FieldAccessorTable"
    name: "FieldAccessorTable"
    fullName: "com.google.protobuf.GeneratedMessageV3.FieldAccessorTable"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable*"
  name: "internalGetFieldAccessorTable"
  nameWithType: "RecognitionConfig.Builder.internalGetFieldAccessorTable"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.internalGetFieldAccessorTable"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear*"
  name: "clear"
  nameWithType: "RecognitionConfig.Builder.clear"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clear"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType*"
  name: "getDescriptorForType"
  nameWithType: "RecognitionConfig.Builder.getDescriptorForType"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDescriptorForType"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig"
  name: "RecognitionConfig"
  nameWithType: "RecognitionConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType*"
  name: "getDefaultInstanceForType"
  nameWithType: "RecognitionConfig.Builder.getDefaultInstanceForType"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDefaultInstanceForType"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.build*"
  name: "build"
  nameWithType: "RecognitionConfig.Builder.build"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.build"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial*"
  name: "buildPartial"
  nameWithType: "RecognitionConfig.Builder.buildPartial"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.buildPartial"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone*"
  name: "clone"
  nameWithType: "RecognitionConfig.Builder.clone"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clone"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.Descriptors.FieldDescriptor"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Descriptors.FieldDescriptor"
    name: "FieldDescriptor"
    fullName: "com.google.protobuf.Descriptors.FieldDescriptor"
    isExternal: true
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField*"
  name: "setField"
  nameWithType: "RecognitionConfig.Builder.setField"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setField"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField*"
  name: "clearField"
  nameWithType: "RecognitionConfig.Builder.clearField"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearField"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.Descriptors.OneofDescriptor"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Descriptors.OneofDescriptor"
    name: "OneofDescriptor"
    fullName: "com.google.protobuf.Descriptors.OneofDescriptor"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof*"
  name: "clearOneof"
  nameWithType: "RecognitionConfig.Builder.clearOneof"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearOneof"
  package: "com.google.cloud.speech.v1"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField*"
  name: "setRepeatedField"
  nameWithType: "RecognitionConfig.Builder.setRepeatedField"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setRepeatedField"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField*"
  name: "addRepeatedField"
  nameWithType: "RecognitionConfig.Builder.addRepeatedField"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addRepeatedField"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.Message"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Message"
    name: "Message"
    fullName: "com.google.protobuf.Message"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom*"
  name: "mergeFrom"
  nameWithType: "RecognitionConfig.Builder.mergeFrom"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeFrom"
  package: "com.google.cloud.speech.v1"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized*"
  name: "isInitialized"
  nameWithType: "RecognitionConfig.Builder.isInitialized"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.isInitialized"
  package: "com.google.cloud.speech.v1"
- uid: "java.io.IOException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
- uid: "com.google.protobuf.CodedInputStream"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.CodedInputStream"
    name: "CodedInputStream"
    fullName: "com.google.protobuf.CodedInputStream"
    isExternal: true
- uid: "com.google.protobuf.ExtensionRegistryLite"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ExtensionRegistryLite"
    name: "ExtensionRegistryLite"
    fullName: "com.google.protobuf.ExtensionRegistryLite"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue*"
  name: "getEncodingValue"
  nameWithType: "RecognitionConfig.Builder.getEncodingValue"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncodingValue"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue*"
  name: "setEncodingValue"
  nameWithType: "RecognitionConfig.Builder.setEncodingValue"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncodingValue"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
  name: "RecognitionConfig.AudioEncoding"
  nameWithType: "RecognitionConfig.AudioEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding*"
  name: "getEncoding"
  nameWithType: "RecognitionConfig.Builder.getEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEncoding"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding*"
  name: "setEncoding"
  nameWithType: "RecognitionConfig.Builder.setEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEncoding"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding*"
  name: "clearEncoding"
  nameWithType: "RecognitionConfig.Builder.clearEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEncoding"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz*"
  name: "getSampleRateHertz"
  nameWithType: "RecognitionConfig.Builder.getSampleRateHertz"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSampleRateHertz"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz*"
  name: "setSampleRateHertz"
  nameWithType: "RecognitionConfig.Builder.setSampleRateHertz"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSampleRateHertz"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz*"
  name: "clearSampleRateHertz"
  nameWithType: "RecognitionConfig.Builder.clearSampleRateHertz"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSampleRateHertz"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount*"
  name: "getAudioChannelCount"
  nameWithType: "RecognitionConfig.Builder.getAudioChannelCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getAudioChannelCount"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount*"
  name: "setAudioChannelCount"
  nameWithType: "RecognitionConfig.Builder.setAudioChannelCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setAudioChannelCount"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount*"
  name: "clearAudioChannelCount"
  nameWithType: "RecognitionConfig.Builder.clearAudioChannelCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearAudioChannelCount"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel*"
  name: "getEnableSeparateRecognitionPerChannel"
  nameWithType: "RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableSeparateRecognitionPerChannel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel*"
  name: "setEnableSeparateRecognitionPerChannel"
  nameWithType: "RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableSeparateRecognitionPerChannel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel*"
  name: "clearEnableSeparateRecognitionPerChannel"
  nameWithType: "RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableSeparateRecognitionPerChannel"
  package: "com.google.cloud.speech.v1"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode*"
  name: "getLanguageCode"
  nameWithType: "RecognitionConfig.Builder.getLanguageCode"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCode"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes*"
  name: "getLanguageCodeBytes"
  nameWithType: "RecognitionConfig.Builder.getLanguageCodeBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getLanguageCodeBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode*"
  name: "setLanguageCode"
  nameWithType: "RecognitionConfig.Builder.setLanguageCode"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCode"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode*"
  name: "clearLanguageCode"
  nameWithType: "RecognitionConfig.Builder.clearLanguageCode"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearLanguageCode"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes*"
  name: "setLanguageCodeBytes"
  nameWithType: "RecognitionConfig.Builder.setLanguageCodeBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setLanguageCodeBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives*"
  name: "getMaxAlternatives"
  nameWithType: "RecognitionConfig.Builder.getMaxAlternatives"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMaxAlternatives"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives*"
  name: "setMaxAlternatives"
  nameWithType: "RecognitionConfig.Builder.setMaxAlternatives"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMaxAlternatives"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives*"
  name: "clearMaxAlternatives"
  nameWithType: "RecognitionConfig.Builder.clearMaxAlternatives"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMaxAlternatives"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter*"
  name: "getProfanityFilter"
  nameWithType: "RecognitionConfig.Builder.getProfanityFilter"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getProfanityFilter"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter*"
  name: "setProfanityFilter"
  nameWithType: "RecognitionConfig.Builder.setProfanityFilter"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setProfanityFilter"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter*"
  name: "clearProfanityFilter"
  nameWithType: "RecognitionConfig.Builder.clearProfanityFilter"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearProfanityFilter"
  package: "com.google.cloud.speech.v1"
- uid: "java.util.List<com.google.cloud.speech.v1.SpeechContext>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/speech/v1/SpeechContext>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.SpeechContext"
    name: "SpeechContext"
    fullName: "com.google.cloud.speech.v1.SpeechContext"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList*"
  name: "getSpeechContextsList"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsList"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsList"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount*"
  name: "getSpeechContextsCount"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsCount"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechContext"
  name: "SpeechContext"
  nameWithType: "SpeechContext"
  fullName: "com.google.cloud.speech.v1.SpeechContext"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts*"
  name: "getSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.getSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts*"
  name: "setSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.setSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechContext.Builder"
  name: "SpeechContext.Builder"
  nameWithType: "SpeechContext.Builder"
  fullName: "com.google.cloud.speech.v1.SpeechContext.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts*"
  name: "addSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.addSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "java.lang.Iterable<? extends com.google.cloud.speech.v1.SpeechContext>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable<? extends com/google/cloud/speech/v1/SpeechContext>.html"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.cloud.speech.v1.SpeechContext"
    name: "SpeechContext"
    fullName: "? extends com.google.cloud.speech.v1.SpeechContext"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts*"
  name: "addAllSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.addAllSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addAllSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts*"
  name: "clearSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.clearSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts*"
  name: "removeSpeechContexts"
  nameWithType: "RecognitionConfig.Builder.removeSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.removeSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder*"
  name: "getSpeechContextsBuilder"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
  name: "SpeechContextOrBuilder"
  nameWithType: "SpeechContextOrBuilder"
  fullName: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder*"
  name: "getSpeechContextsOrBuilder"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "java.util.List<? extends com.google.cloud.speech.v1.SpeechContextOrBuilder>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/cloud/speech/v1/SpeechContextOrBuilder>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
    name: "SpeechContextOrBuilder"
    fullName: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList*"
  name: "getSpeechContextsOrBuilderList"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsOrBuilderList"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsOrBuilderList"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder*"
  name: "addSpeechContextsBuilder"
  nameWithType: "RecognitionConfig.Builder.addSpeechContextsBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.addSpeechContextsBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "java.util.List<com.google.cloud.speech.v1.SpeechContext.Builder>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/speech/v1/SpeechContext/Builder>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.SpeechContext.Builder"
    name: "Builder"
    fullName: "com.google.cloud.speech.v1.SpeechContext.Builder"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList*"
  name: "getSpeechContextsBuilderList"
  nameWithType: "RecognitionConfig.Builder.getSpeechContextsBuilderList"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getSpeechContextsBuilderList"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets*"
  name: "getEnableWordTimeOffsets"
  nameWithType: "RecognitionConfig.Builder.getEnableWordTimeOffsets"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableWordTimeOffsets"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets*"
  name: "setEnableWordTimeOffsets"
  nameWithType: "RecognitionConfig.Builder.setEnableWordTimeOffsets"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableWordTimeOffsets"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets*"
  name: "clearEnableWordTimeOffsets"
  nameWithType: "RecognitionConfig.Builder.clearEnableWordTimeOffsets"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableWordTimeOffsets"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation*"
  name: "getEnableAutomaticPunctuation"
  nameWithType: "RecognitionConfig.Builder.getEnableAutomaticPunctuation"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getEnableAutomaticPunctuation"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation*"
  name: "setEnableAutomaticPunctuation"
  nameWithType: "RecognitionConfig.Builder.setEnableAutomaticPunctuation"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setEnableAutomaticPunctuation"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation*"
  name: "clearEnableAutomaticPunctuation"
  nameWithType: "RecognitionConfig.Builder.clearEnableAutomaticPunctuation"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearEnableAutomaticPunctuation"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig*"
  name: "hasDiarizationConfig"
  nameWithType: "RecognitionConfig.Builder.hasDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
  name: "SpeakerDiarizationConfig"
  nameWithType: "SpeakerDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig*"
  name: "getDiarizationConfig"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig*"
  name: "setDiarizationConfig"
  nameWithType: "RecognitionConfig.Builder.setDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder"
  name: "SpeakerDiarizationConfig.Builder"
  nameWithType: "SpeakerDiarizationConfig.Builder"
  fullName: "com.google.cloud.speech.v1.SpeakerDiarizationConfig.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig*"
  name: "mergeDiarizationConfig"
  nameWithType: "RecognitionConfig.Builder.mergeDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig*"
  name: "clearDiarizationConfig"
  nameWithType: "RecognitionConfig.Builder.clearDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder*"
  name: "getDiarizationConfigBuilder"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfigBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
  name: "SpeakerDiarizationConfigOrBuilder"
  nameWithType: "SpeakerDiarizationConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder*"
  name: "getDiarizationConfigOrBuilder"
  nameWithType: "RecognitionConfig.Builder.getDiarizationConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getDiarizationConfigOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata*"
  name: "hasMetadata"
  nameWithType: "RecognitionConfig.Builder.hasMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.hasMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionMetadata"
  name: "RecognitionMetadata"
  nameWithType: "RecognitionMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionMetadata"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata*"
  name: "getMetadata"
  nameWithType: "RecognitionConfig.Builder.getMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata*"
  name: "setMetadata"
  nameWithType: "RecognitionConfig.Builder.setMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionMetadata.Builder"
  name: "RecognitionMetadata.Builder"
  nameWithType: "RecognitionMetadata.Builder"
  fullName: "com.google.cloud.speech.v1.RecognitionMetadata.Builder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata*"
  name: "mergeMetadata"
  nameWithType: "RecognitionConfig.Builder.mergeMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata*"
  name: "clearMetadata"
  nameWithType: "RecognitionConfig.Builder.clearMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder*"
  name: "getMetadataBuilder"
  nameWithType: "RecognitionConfig.Builder.getMetadataBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
  name: "RecognitionMetadataOrBuilder"
  nameWithType: "RecognitionMetadataOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder*"
  name: "getMetadataOrBuilder"
  nameWithType: "RecognitionConfig.Builder.getMetadataOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getMetadataOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel*"
  name: "getModel"
  nameWithType: "RecognitionConfig.Builder.getModel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes*"
  name: "getModelBytes"
  nameWithType: "RecognitionConfig.Builder.getModelBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getModelBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel*"
  name: "setModel"
  nameWithType: "RecognitionConfig.Builder.setModel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel*"
  name: "clearModel"
  nameWithType: "RecognitionConfig.Builder.clearModel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearModel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes*"
  name: "setModelBytes"
  nameWithType: "RecognitionConfig.Builder.setModelBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setModelBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced*"
  name: "getUseEnhanced"
  nameWithType: "RecognitionConfig.Builder.getUseEnhanced"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.getUseEnhanced"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced*"
  name: "setUseEnhanced"
  nameWithType: "RecognitionConfig.Builder.setUseEnhanced"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUseEnhanced"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced*"
  name: "clearUseEnhanced"
  nameWithType: "RecognitionConfig.Builder.clearUseEnhanced"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.clearUseEnhanced"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.UnknownFieldSet"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.UnknownFieldSet"
    name: "UnknownFieldSet"
    fullName: "com.google.protobuf.UnknownFieldSet"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields*"
  name: "setUnknownFields"
  nameWithType: "RecognitionConfig.Builder.setUnknownFields"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.setUnknownFields"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields*"
  name: "mergeUnknownFields"
  nameWithType: "RecognitionConfig.Builder.mergeUnknownFields"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.Builder.mergeUnknownFields"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder<com.google.cloud.speech.v1.RecognitionConfig.Builder>"
  isExternal: true
  name: "GeneratedMessageV3.Builder<RecognitionConfig.Builder>"
  nameWithType: "GeneratedMessageV3.Builder<RecognitionConfig.Builder>"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder<com.google.cloud.speech.v1.RecognitionConfig.Builder>"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  name: "RecognitionConfigOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getRepeatedField(Descriptors.FieldDescriptor,int)"
  nameWithType: "GeneratedMessageV3.Builder.getRepeatedField(Descriptors.FieldDescriptor,int)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int)"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.onBuilt()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.onBuilt()"
  nameWithType: "GeneratedMessageV3.Builder.onBuilt()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.onBuilt()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFieldsProto3(com.google.protobuf.UnknownFieldSet)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.setUnknownFieldsProto3(UnknownFieldSet)"
  nameWithType: "GeneratedMessageV3.Builder.setUnknownFieldsProto3(UnknownFieldSet)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFieldsProto3(com.google.protobuf.UnknownFieldSet)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.markClean()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.markClean()"
  nameWithType: "GeneratedMessageV3.Builder.markClean()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.markClean()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getDescriptorForType()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getDescriptorForType()"
  nameWithType: "GeneratedMessageV3.Builder.getDescriptorForType()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getDescriptorForType()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(CodedInputStream)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(CodedInputStream)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.hasOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.hasOneof(Descriptors.OneofDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.hasOneof(Descriptors.OneofDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.hasOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getField(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getField(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.getField(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getField(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "com.google.protobuf.AbstractMessage.Builder.getInitializationErrorString()"
  isExternal: true
  name: "AbstractMessage.Builder.getInitializationErrorString()"
  nameWithType: "AbstractMessage.Builder.getInitializationErrorString()"
  fullName: "com.google.protobuf.AbstractMessage.Builder.getInitializationErrorString()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.setUnknownFields(UnknownFieldSet)"
  nameWithType: "GeneratedMessageV3.Builder.setUnknownFields(UnknownFieldSet)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.setUnknownFields(com.google.protobuf.UnknownFieldSet)"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMutableMapField(int)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.internalGetMutableMapField(int)"
  nameWithType: "GeneratedMessageV3.Builder.internalGetMutableMapField(int)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMutableMapField(int)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getParentForChildren()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getParentForChildren()"
  nameWithType: "GeneratedMessageV3.Builder.getParentForChildren()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getParentForChildren()"
- uid: "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.Collection<? super T>)"
  isExternal: true
  name: "AbstractMessageLite.Builder.<T>addAll(Iterable<T>,Collection<? super T>)"
  nameWithType: "AbstractMessageLite.Builder.<T>addAll(Iterable<T>,Collection<? super T>)"
  fullName: "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.Collection<? super T>)"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.newBuilderForField(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.newBuilderForField(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.newBuilderForField(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.newBuilderForField(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getAllFields()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getAllFields()"
  nameWithType: "GeneratedMessageV3.Builder.getAllFields()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getAllFields()"
- uid: "com.google.protobuf.AbstractMessageLite.Builder.newUninitializedMessageException(com.google.protobuf.MessageLite)"
  isExternal: true
  name: "AbstractMessageLite.Builder.newUninitializedMessageException(MessageLite)"
  nameWithType: "AbstractMessageLite.Builder.newUninitializedMessageException(MessageLite)"
  fullName: "com.google.protobuf.AbstractMessageLite.Builder.newUninitializedMessageException(com.google.protobuf.MessageLite)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getUnknownFields()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getUnknownFields()"
  nameWithType: "GeneratedMessageV3.Builder.getUnknownFields()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getUnknownFields()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.setField(Descriptors.FieldDescriptor,Object)"
  nameWithType: "GeneratedMessageV3.Builder.setField(Descriptors.FieldDescriptor,Object)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeDelimitedFrom(InputStream)"
  nameWithType: "AbstractMessage.Builder.mergeDelimitedFrom(InputStream)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor,int)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getRepeatedFieldBuilder(Descriptors.FieldDescriptor,int)"
  nameWithType: "GeneratedMessageV3.Builder.getRepeatedFieldBuilder(Descriptors.FieldDescriptor,int)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor,int)"
- uid: "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.List<? super T>)"
  isExternal: true
  name: "AbstractMessageLite.Builder.<T>addAll(Iterable<T>,List<? super T>)"
  nameWithType: "AbstractMessageLite.Builder.<T>addAll(Iterable<T>,List<? super T>)"
  fullName: "com.google.protobuf.AbstractMessageLite.Builder.<T>addAll(java.lang.Iterable<T>,java.util.List<? super T>)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeDelimitedFrom(InputStream,ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeDelimitedFrom(InputStream,ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(ByteString,ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(ByteString,ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)"
- uid: "com.google.protobuf.AbstractMessageLite.Builder.internalMergeFrom(MessageType)"
  isExternal: true
  name: "AbstractMessageLite.Builder.internalMergeFrom(MessageType)"
  nameWithType: "AbstractMessageLite.Builder.internalMergeFrom(MessageType)"
  fullName: "com.google.protobuf.AbstractMessageLite.Builder.internalMergeFrom(MessageType)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMapField(int)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.internalGetMapField(int)"
  nameWithType: "GeneratedMessageV3.Builder.internalGetMapField(int)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetMapField(int)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(CodedInputStream,ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(CodedInputStream,ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(byte[],int,int)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(byte[],int,int)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(byte[],int,int,ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(byte[],int,int,ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)"
- uid: "com.google.protobuf.AbstractMessage.Builder.toString()"
  isExternal: true
  name: "AbstractMessage.Builder.toString()"
  nameWithType: "AbstractMessage.Builder.toString()"
  fullName: "com.google.protobuf.AbstractMessage.Builder.toString()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
  nameWithType: "GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.internalGetFieldAccessorTable()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getOneofFieldDescriptor(com.google.protobuf.Descriptors.OneofDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getOneofFieldDescriptor(Descriptors.OneofDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.getOneofFieldDescriptor(Descriptors.OneofDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getOneofFieldDescriptor(com.google.protobuf.Descriptors.OneofDescriptor)"
- uid: "com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(com.google.protobuf.Message)"
  isExternal: true
  name: "AbstractMessage.Builder.newUninitializedMessageException(Message)"
  nameWithType: "AbstractMessage.Builder.newUninitializedMessageException(Message)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(com.google.protobuf.Message)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.clone()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.clone()"
  nameWithType: "GeneratedMessageV3.Builder.clone()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.clone()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.onChanged()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.onChanged()"
  nameWithType: "GeneratedMessageV3.Builder.onChanged()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.onChanged()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getFieldBuilder(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.getFieldBuilder(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getFieldBuilder(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.isClean()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.isClean()"
  nameWithType: "GeneratedMessageV3.Builder.isClean()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.isClean()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.clear()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.clear()"
  nameWithType: "GeneratedMessageV3.Builder.clear()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.clear()"
- uid: "com.google.protobuf.AbstractMessage.Builder.findInitializationErrors()"
  isExternal: true
  name: "AbstractMessage.Builder.findInitializationErrors()"
  nameWithType: "AbstractMessage.Builder.findInitializationErrors()"
  fullName: "com.google.protobuf.AbstractMessage.Builder.findInitializationErrors()"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.isInitialized()"
  isExternal: true
  name: "GeneratedMessageV3.Builder.isInitialized()"
  nameWithType: "GeneratedMessageV3.Builder.isInitialized()"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.isInitialized()"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[])"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(byte[])"
  nameWithType: "AbstractMessage.Builder.mergeFrom(byte[])"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[])"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.addRepeatedField(Descriptors.FieldDescriptor,Object)"
  nameWithType: "GeneratedMessageV3.Builder.addRepeatedField(Descriptors.FieldDescriptor,Object)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,java.lang.Object)"
- uid: "com.google.protobuf.AbstractMessageLite.Builder.mergeFrom(com.google.protobuf.MessageLite)"
  isExternal: true
  name: "AbstractMessageLite.Builder.mergeFrom(MessageLite)"
  nameWithType: "AbstractMessageLite.Builder.mergeFrom(MessageLite)"
  fullName: "com.google.protobuf.AbstractMessageLite.Builder.mergeFrom(com.google.protobuf.MessageLite)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.clearOneof(Descriptors.OneofDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.clearOneof(Descriptors.OneofDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.clearOneof(com.google.protobuf.Descriptors.OneofDescriptor)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(InputStream)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(InputStream)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.Message)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(Message)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(Message)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.Message)"
- uid: "com.google.protobuf.AbstractMessage.Builder.internalMergeFrom(com.google.protobuf.AbstractMessageLite)"
  isExternal: true
  name: "AbstractMessage.Builder.internalMergeFrom(AbstractMessageLite)"
  nameWithType: "AbstractMessage.Builder.internalMergeFrom(AbstractMessageLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.internalMergeFrom(com.google.protobuf.AbstractMessageLite)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(ByteString)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(ByteString)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(com.google.protobuf.ByteString)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.clearField(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.clearField(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.clearField(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.setRepeatedField(Descriptors.FieldDescriptor,int,Object)"
  nameWithType: "GeneratedMessageV3.Builder.setRepeatedField(Descriptors.FieldDescriptor,int,Object)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor,int,java.lang.Object)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldCount(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.getRepeatedFieldCount(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.getRepeatedFieldCount(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.getRepeatedFieldCount(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.mergeUnknownFields(UnknownFieldSet)"
  nameWithType: "GeneratedMessageV3.Builder.mergeUnknownFields(UnknownFieldSet)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.mergeUnknownFields(com.google.protobuf.UnknownFieldSet)"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder.hasField(com.google.protobuf.Descriptors.FieldDescriptor)"
  isExternal: true
  name: "GeneratedMessageV3.Builder.hasField(Descriptors.FieldDescriptor)"
  nameWithType: "GeneratedMessageV3.Builder.hasField(Descriptors.FieldDescriptor)"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder.hasField(com.google.protobuf.Descriptors.FieldDescriptor)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(byte[],ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(byte[],ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite)"
- uid: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
  isExternal: true
  name: "AbstractMessage.Builder.mergeFrom(InputStream,ExtensionRegistryLite)"
  nameWithType: "AbstractMessage.Builder.mergeFrom(InputStream,ExtensionRegistryLite)"
  fullName: "com.google.protobuf.AbstractMessage.Builder.mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.cloud.speech.v1.SpeechContext"
  name: "? extends SpeechContext"
  nameWithType: "? extends SpeechContext"
  fullName: "? extends com.google.cloud.speech.v1.SpeechContext"
- uid: "java.lang.Iterable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
  name: "? extends SpeechContextOrBuilder"
  nameWithType: "? extends SpeechContextOrBuilder"
  fullName: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
- uid: "com.google.protobuf.GeneratedMessageV3.Builder"
  isExternal: true
  name: "GeneratedMessageV3.Builder"
  nameWithType: "GeneratedMessageV3.Builder"
  fullName: "com.google.protobuf.GeneratedMessageV3.Builder"
- uid: "T>addAll(java.lang.Iterable"
  name: "T>addAll(Iterable"
  nameWithType: "T>addAll(Iterable"
  fullName: "T>addAll(java.lang.Iterable"
- uid: "com.google.protobuf.AbstractMessageLite.Builder."
  isExternal: true
  name: "AbstractMessageLite.Builder."
  nameWithType: "AbstractMessageLite.Builder."
  fullName: "com.google.protobuf.AbstractMessageLite.Builder."
- uid: "T>,java.util.Collection"
  name: "T>,Collection"
  nameWithType: "T>,Collection"
  fullName: "T>,java.util.Collection"
- uid: "? super T>)"
  name: "? super T>)"
  nameWithType: "? super T>)"
  fullName: "? super T>)"
- uid: "T>,java.util.List"
  name: "T>,List"
  nameWithType: "T>,List"
  fullName: "T>,java.util.List"
