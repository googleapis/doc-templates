### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  id: "RecognitionConfigOrBuilder"
  parent: "com.google.cloud.speech.v1beta1"
  children:
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder()"
  - "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext()"
  langs:
  - "java"
  name: "RecognitionConfigOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  type: "Interface"
  package: "com.google.cloud.speech.v1beta1"
  syntax:
    content: "public interface RecognitionConfigOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding()"
  id: "getEncoding()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEncoding()"
  nameWithType: "RecognitionConfigOrBuilder.getEncoding()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Required* Encoding of audio data sent in all `RecognitionAudio` messages.\n```\n\n`.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding encoding = 1;`"
  syntax:
    content: "public abstract RecognitionConfig.AudioEncoding getEncoding()"
    return:
      type: "com.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue()"
  id: "getEncodingValue()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEncodingValue()"
  nameWithType: "RecognitionConfigOrBuilder.getEncodingValue()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Required* Encoding of audio data sent in all `RecognitionAudio` messages.\n```\n\n`.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding encoding = 1;`"
  syntax:
    content: "public abstract int getEncodingValue()"
    return:
      type: "int"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode()"
  id: "getLanguageCode()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getLanguageCode()"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCode()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* The language of the supplied audio as a BCP-47 language tag.\n Example: \"en-GB\"  https://www.rfc-editor.org/rfc/bcp/bcp47.txt\n If omitted, defaults to \"en-US\". See\n [Language Support](https://cloud.google.com/speech/docs/languages)\n for a list of the currently supported language codes.\n```\n\n`string language_code = 3;`"
  syntax:
    content: "public abstract String getLanguageCode()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  id: "getLanguageCodeBytes()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getLanguageCodeBytes()"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* The language of the supplied audio as a BCP-47 language tag.\n Example: \"en-GB\"  https://www.rfc-editor.org/rfc/bcp/bcp47.txt\n If omitted, defaults to \"en-US\". See\n [Language Support](https://cloud.google.com/speech/docs/languages)\n for a list of the currently supported language codes.\n```\n\n`string language_code = 3;`"
  syntax:
    content: "public abstract ByteString getLanguageCodeBytes()"
    return:
      type: "com.google.protobuf.ByteString"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  id: "getMaxAlternatives()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getMaxAlternatives()"
  nameWithType: "RecognitionConfigOrBuilder.getMaxAlternatives()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* Maximum number of recognition hypotheses to be returned.\n Specifically, the maximum number of `SpeechRecognitionAlternative` messages\n within each `SpeechRecognitionResult`.\n The server may return fewer than `max_alternatives`.\n Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of\n one. If omitted, will return a maximum of one.\n```\n\n`int32 max_alternatives = 4;`"
  syntax:
    content: "public abstract int getMaxAlternatives()"
    return:
      type: "int"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter()"
  id: "getProfanityFilter()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getProfanityFilter()"
  nameWithType: "RecognitionConfigOrBuilder.getProfanityFilter()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* If set to `true`, the server will attempt to filter out\n profanities, replacing all but the initial character in each filtered word\n with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities\n won't be filtered out.\n```\n\n`bool profanity_filter = 5;`"
  syntax:
    content: "public abstract boolean getProfanityFilter()"
    return:
      type: "boolean"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate()"
  id: "getSampleRate()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSampleRate()"
  nameWithType: "RecognitionConfigOrBuilder.getSampleRate()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Required* Sample rate in Hertz of the audio data sent in all\n `RecognitionAudio` messages. Valid values are: 8000-48000.\n 16000 is optimal. For best results, set the sampling rate of the audio\n source to 16000 Hz. If that's not possible, use the native sample rate of\n the audio source (instead of re-sampling).\n```\n\n`int32 sample_rate = 2;`"
  syntax:
    content: "public abstract int getSampleRate()"
    return:
      type: "int"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext()"
  id: "getSpeechContext()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContext()"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContext()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* A means to provide context to assist the speech recognition.\n```\n\n`.google.cloud.speech.v1beta1.SpeechContext speech_context = 6;`"
  syntax:
    content: "public abstract SpeechContext getSpeechContext()"
    return:
      type: "com.google.cloud.speech.v1beta1.SpeechContext"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder()"
  id: "getSpeechContextOrBuilder()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContextOrBuilder()"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextOrBuilder()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* A means to provide context to assist the speech recognition.\n```\n\n`.google.cloud.speech.v1beta1.SpeechContext speech_context = 6;`"
  syntax:
    content: "public abstract SpeechContextOrBuilder getSpeechContextOrBuilder()"
    return:
      type: "com.google.cloud.speech.v1beta1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext()"
  id: "hasSpeechContext()"
  parent: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "hasSpeechContext()"
  nameWithType: "RecognitionConfigOrBuilder.hasSpeechContext()"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext()"
  overload: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext*"
  type: "Method"
  package: "com.google.cloud.speech.v1beta1"
  summary: "```\n*Optional* A means to provide context to assist the speech recognition.\n```\n\n`.google.cloud.speech.v1beta1.SpeechContext speech_context = 6;`"
  syntax:
    content: "public abstract boolean hasSpeechContext()"
    return:
      type: "boolean"
references:
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue*"
  name: "getEncodingValue"
  nameWithType: "RecognitionConfigOrBuilder.getEncodingValue"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncodingValue"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding"
  name: "RecognitionConfig.AudioEncoding"
  nameWithType: "RecognitionConfig.AudioEncoding"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding*"
  name: "getEncoding"
  nameWithType: "RecognitionConfigOrBuilder.getEncoding"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getEncoding"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate*"
  name: "getSampleRate"
  nameWithType: "RecognitionConfigOrBuilder.getSampleRate"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSampleRate"
  package: "com.google.cloud.speech.v1beta1"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode*"
  name: "getLanguageCode"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCode"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCode"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes*"
  name: "getLanguageCodeBytes"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCodeBytes"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getLanguageCodeBytes"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives*"
  name: "getMaxAlternatives"
  nameWithType: "RecognitionConfigOrBuilder.getMaxAlternatives"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getMaxAlternatives"
  package: "com.google.cloud.speech.v1beta1"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter*"
  name: "getProfanityFilter"
  nameWithType: "RecognitionConfigOrBuilder.getProfanityFilter"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getProfanityFilter"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext*"
  name: "hasSpeechContext"
  nameWithType: "RecognitionConfigOrBuilder.hasSpeechContext"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.hasSpeechContext"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.SpeechContext"
  name: "SpeechContext"
  nameWithType: "SpeechContext"
  fullName: "com.google.cloud.speech.v1beta1.SpeechContext"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext*"
  name: "getSpeechContext"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContext"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContext"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.cloud.speech.v1beta1.SpeechContextOrBuilder"
  name: "SpeechContextOrBuilder"
  nameWithType: "SpeechContextOrBuilder"
  fullName: "com.google.cloud.speech.v1beta1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder*"
  name: "getSpeechContextOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextOrBuilder"
  fullName: "com.google.cloud.speech.v1beta1.RecognitionConfigOrBuilder.getSpeechContextOrBuilder"
  package: "com.google.cloud.speech.v1beta1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
