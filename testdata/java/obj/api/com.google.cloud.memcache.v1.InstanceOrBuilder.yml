### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  id: "InstanceOrBuilder"
  parent: "com.google.cloud.memcache.v1"
  children:
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels(java.lang.String)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault(java.lang.String,java.lang.String)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow(java.lang.String)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getName()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getState()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes(int)"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters()"
  - "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime()"
  langs:
  - "java"
  name: "InstanceOrBuilder"
  nameWithType: "InstanceOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  type: "Interface"
  package: "com.google.cloud.memcache.v1"
  syntax:
    content: "public interface InstanceOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels(java.lang.String)"
  id: "containsLabels(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "containsLabels(String key)"
  nameWithType: "InstanceOrBuilder.containsLabels(String key)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels(String key)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nResource labels to represent user-provided metadata.\n Refer to cloud documentation on labels for more details.\n https://cloud.google.com/compute/docs/labeling-resources\n```\n\n`map<string, string> labels = 3;`"
  syntax:
    content: "public abstract boolean containsLabels(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork()"
  id: "getAuthorizedNetwork()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getAuthorizedNetwork()"
  nameWithType: "InstanceOrBuilder.getAuthorizedNetwork()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nThe full name of the Google Compute Engine\n [network](/compute/docs/networks-and-firewalls#networks) to which the\n instance is connected. If left unspecified, the `default` network\n will be used.\n```\n\n`string authorized_network = 4;`"
  syntax:
    content: "public abstract String getAuthorizedNetwork()"
    return:
      type: "java.lang.String"
      description: "The authorizedNetwork."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes()"
  id: "getAuthorizedNetworkBytes()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getAuthorizedNetworkBytes()"
  nameWithType: "InstanceOrBuilder.getAuthorizedNetworkBytes()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nThe full name of the Google Compute Engine\n [network](/compute/docs/networks-and-firewalls#networks) to which the\n instance is connected. If left unspecified, the `default` network\n will be used.\n```\n\n`string authorized_network = 4;`"
  syntax:
    content: "public abstract ByteString getAuthorizedNetworkBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for authorizedNetwork."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime()"
  id: "getCreateTime()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getCreateTime()"
  nameWithType: "InstanceOrBuilder.getCreateTime()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was created.\n```\n\n`.google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Timestamp getCreateTime()"
    return:
      type: "com.google.protobuf.Timestamp"
      description: "The createTime."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder()"
  id: "getCreateTimeOrBuilder()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getCreateTimeOrBuilder()"
  nameWithType: "InstanceOrBuilder.getCreateTimeOrBuilder()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was created.\n```\n\n`.google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract TimestampOrBuilder getCreateTimeOrBuilder()"
    return:
      type: "com.google.protobuf.TimestampOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint()"
  id: "getDiscoveryEndpoint()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getDiscoveryEndpoint()"
  nameWithType: "InstanceOrBuilder.getDiscoveryEndpoint()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Endpoint for Discovery API\n```\n\n`string discovery_endpoint = 20 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getDiscoveryEndpoint()"
    return:
      type: "java.lang.String"
      description: "The discoveryEndpoint."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes()"
  id: "getDiscoveryEndpointBytes()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getDiscoveryEndpointBytes()"
  nameWithType: "InstanceOrBuilder.getDiscoveryEndpointBytes()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. Endpoint for Discovery API\n```\n\n`string discovery_endpoint = 20 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getDiscoveryEndpointBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for discoveryEndpoint."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName()"
  id: "getDisplayName()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getDisplayName()"
  nameWithType: "InstanceOrBuilder.getDisplayName()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser provided name for the instance only used for display\n purposes. Cannot be more than 80 characters.\n```\n\n`string display_name = 2;`"
  syntax:
    content: "public abstract String getDisplayName()"
    return:
      type: "java.lang.String"
      description: "The displayName."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes()"
  id: "getDisplayNameBytes()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getDisplayNameBytes()"
  nameWithType: "InstanceOrBuilder.getDisplayNameBytes()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nUser provided name for the instance only used for display\n purposes. Cannot be more than 80 characters.\n```\n\n`string display_name = 2;`"
  syntax:
    content: "public abstract ByteString getDisplayNameBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for displayName."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages(int)"
  id: "getInstanceMessages(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getInstanceMessages(int index)"
  nameWithType: "InstanceOrBuilder.getInstanceMessages(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nList of messages that describe current statuses of memcached instance.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.InstanceMessage instance_messages = 19;`"
  syntax:
    content: "public abstract Instance.InstanceMessage getInstanceMessages(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.memcache.v1.Instance.InstanceMessage"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount()"
  id: "getInstanceMessagesCount()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getInstanceMessagesCount()"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesCount()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nList of messages that describe current statuses of memcached instance.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.InstanceMessage instance_messages = 19;`"
  syntax:
    content: "public abstract int getInstanceMessagesCount()"
    return:
      type: "int"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList()"
  id: "getInstanceMessagesList()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getInstanceMessagesList()"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesList()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nList of messages that describe current statuses of memcached instance.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.InstanceMessage instance_messages = 19;`"
  syntax:
    content: "public abstract List<Instance.InstanceMessage> getInstanceMessagesList()"
    return:
      type: "java.util.List<com.google.cloud.memcache.v1.Instance.InstanceMessage>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder(int)"
  id: "getInstanceMessagesOrBuilder(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getInstanceMessagesOrBuilder(int index)"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesOrBuilder(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nList of messages that describe current statuses of memcached instance.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.InstanceMessage instance_messages = 19;`"
  syntax:
    content: "public abstract Instance.InstanceMessageOrBuilder getInstanceMessagesOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList()"
  id: "getInstanceMessagesOrBuilderList()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getInstanceMessagesOrBuilderList()"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesOrBuilderList()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nList of messages that describe current statuses of memcached instance.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.InstanceMessage instance_messages = 19;`"
  syntax:
    content: "public abstract List<? extends Instance.InstanceMessageOrBuilder> getInstanceMessagesOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels()"
  id: "getLabels()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getLabels()"
  nameWithType: "InstanceOrBuilder.getLabels()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "Use <xref uid=\"com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap()\" data-throw-if-not-resolved=\"false\">#getLabelsMap()</xref> instead."
  syntax:
    content: "public abstract Map<String,String> getLabels()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount()"
  id: "getLabelsCount()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getLabelsCount()"
  nameWithType: "InstanceOrBuilder.getLabelsCount()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nResource labels to represent user-provided metadata.\n Refer to cloud documentation on labels for more details.\n https://cloud.google.com/compute/docs/labeling-resources\n```\n\n`map<string, string> labels = 3;`"
  syntax:
    content: "public abstract int getLabelsCount()"
    return:
      type: "int"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap()"
  id: "getLabelsMap()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getLabelsMap()"
  nameWithType: "InstanceOrBuilder.getLabelsMap()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nResource labels to represent user-provided metadata.\n Refer to cloud documentation on labels for more details.\n https://cloud.google.com/compute/docs/labeling-resources\n```\n\n`map<string, string> labels = 3;`"
  syntax:
    content: "public abstract Map<String,String> getLabelsMap()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault(java.lang.String,java.lang.String)"
  id: "getLabelsOrDefault(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getLabelsOrDefault(String key, String defaultValue)"
  nameWithType: "InstanceOrBuilder.getLabelsOrDefault(String key, String defaultValue)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault(String key, String defaultValue)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nResource labels to represent user-provided metadata.\n Refer to cloud documentation on labels for more details.\n https://cloud.google.com/compute/docs/labeling-resources\n```\n\n`map<string, string> labels = 3;`"
  syntax:
    content: "public abstract String getLabelsOrDefault(String key, String defaultValue)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    - id: "defaultValue"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow(java.lang.String)"
  id: "getLabelsOrThrow(java.lang.String)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getLabelsOrThrow(String key)"
  nameWithType: "InstanceOrBuilder.getLabelsOrThrow(String key)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow(String key)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nResource labels to represent user-provided metadata.\n Refer to cloud documentation on labels for more details.\n https://cloud.google.com/compute/docs/labeling-resources\n```\n\n`map<string, string> labels = 3;`"
  syntax:
    content: "public abstract String getLabelsOrThrow(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion()"
  id: "getMemcacheFullVersion()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheFullVersion()"
  nameWithType: "InstanceOrBuilder.getMemcacheFullVersion()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The full version of memcached server running on this instance.\n System automatically determines the full memcached version for an instance\n based on the input MemcacheVersion.\n The full version format will be \"memcached-1.5.16\".\n```\n\n`string memcache_full_version = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract String getMemcacheFullVersion()"
    return:
      type: "java.lang.String"
      description: "The memcacheFullVersion."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes()"
  id: "getMemcacheFullVersionBytes()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheFullVersionBytes()"
  nameWithType: "InstanceOrBuilder.getMemcacheFullVersionBytes()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The full version of memcached server running on this instance.\n System automatically determines the full memcached version for an instance\n based on the input MemcacheVersion.\n The full version format will be \"memcached-1.5.16\".\n```\n\n`string memcache_full_version = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract ByteString getMemcacheFullVersionBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for memcacheFullVersion."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes(int)"
  id: "getMemcacheNodes(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheNodes(int index)"
  nameWithType: "InstanceOrBuilder.getMemcacheNodes(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. List of Memcached nodes.\n Refer to [Node] message for more details.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.Node memcache_nodes = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Instance.Node getMemcacheNodes(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.memcache.v1.Instance.Node"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount()"
  id: "getMemcacheNodesCount()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheNodesCount()"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesCount()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. List of Memcached nodes.\n Refer to [Node] message for more details.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.Node memcache_nodes = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract int getMemcacheNodesCount()"
    return:
      type: "int"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList()"
  id: "getMemcacheNodesList()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheNodesList()"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesList()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. List of Memcached nodes.\n Refer to [Node] message for more details.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.Node memcache_nodes = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract List<Instance.Node> getMemcacheNodesList()"
    return:
      type: "java.util.List<com.google.cloud.memcache.v1.Instance.Node>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder(int)"
  id: "getMemcacheNodesOrBuilder(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheNodesOrBuilder(int index)"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesOrBuilder(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. List of Memcached nodes.\n Refer to [Node] message for more details.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.Node memcache_nodes = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Instance.NodeOrBuilder getMemcacheNodesOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList()"
  id: "getMemcacheNodesOrBuilderList()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheNodesOrBuilderList()"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesOrBuilderList()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. List of Memcached nodes.\n Refer to [Node] message for more details.\n```\n\n`repeated .google.cloud.memcache.v1.Instance.Node memcache_nodes = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract List<? extends Instance.NodeOrBuilder> getMemcacheNodesOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder>"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion()"
  id: "getMemcacheVersion()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheVersion()"
  nameWithType: "InstanceOrBuilder.getMemcacheVersion()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nThe major version of Memcached software.\n If not provided, latest supported version will be used. Currently the\n latest supported major version is MEMCACHE_1_5.\n The minor version will be automatically determined by our system based on\n the latest supported minor version.\n```\n\n`.google.cloud.memcache.v1.MemcacheVersion memcache_version = 9;`"
  syntax:
    content: "public abstract MemcacheVersion getMemcacheVersion()"
    return:
      type: "com.google.cloud.memcache.v1.MemcacheVersion"
      description: "The memcacheVersion."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue()"
  id: "getMemcacheVersionValue()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getMemcacheVersionValue()"
  nameWithType: "InstanceOrBuilder.getMemcacheVersionValue()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nThe major version of Memcached software.\n If not provided, latest supported version will be used. Currently the\n latest supported major version is MEMCACHE_1_5.\n The minor version will be automatically determined by our system based on\n the latest supported minor version.\n```\n\n`.google.cloud.memcache.v1.MemcacheVersion memcache_version = 9;`"
  syntax:
    content: "public abstract int getMemcacheVersionValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for memcacheVersion."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getName()"
  id: "getName()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "InstanceOrBuilder.getName()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getName()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getName*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Unique name of the resource in this scope including project and\n location using the form:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n Note: Memcached instances are managed and addressed at regional level so\n location_id here refers to a GCP region; however, users may choose which\n zones Memcached nodes within an instances should be provisioned in.\n Refer to [zones] field for more details.\n```\n\n`string name = 1 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract String getName()"
    return:
      type: "java.lang.String"
      description: "The name."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes()"
  id: "getNameBytes()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getNameBytes()"
  nameWithType: "InstanceOrBuilder.getNameBytes()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Unique name of the resource in this scope including project and\n location using the form:\n     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n Note: Memcached instances are managed and addressed at regional level so\n location_id here refers to a GCP region; however, users may choose which\n zones Memcached nodes within an instances should be provisioned in.\n Refer to [zones] field for more details.\n```\n\n`string name = 1 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract ByteString getNameBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for name."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig()"
  id: "getNodeConfig()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getNodeConfig()"
  nameWithType: "InstanceOrBuilder.getNodeConfig()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Configuration for Memcached nodes.\n```\n\n`.google.cloud.memcache.v1.Instance.NodeConfig node_config = 7 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract Instance.NodeConfig getNodeConfig()"
    return:
      type: "com.google.cloud.memcache.v1.Instance.NodeConfig"
      description: "The nodeConfig."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder()"
  id: "getNodeConfigOrBuilder()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getNodeConfigOrBuilder()"
  nameWithType: "InstanceOrBuilder.getNodeConfigOrBuilder()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Configuration for Memcached nodes.\n```\n\n`.google.cloud.memcache.v1.Instance.NodeConfig node_config = 7 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract Instance.NodeConfigOrBuilder getNodeConfigOrBuilder()"
    return:
      type: "com.google.cloud.memcache.v1.Instance.NodeConfigOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount()"
  id: "getNodeCount()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getNodeCount()"
  nameWithType: "InstanceOrBuilder.getNodeCount()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Number of nodes in the Memcached instance.\n```\n\n`int32 node_count = 6 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract int getNodeCount()"
    return:
      type: "int"
      description: "The nodeCount."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters()"
  id: "getParameters()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getParameters()"
  nameWithType: "InstanceOrBuilder.getParameters()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOptional: User defined parameters to apply to the memcached process\n on each node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 11;`"
  syntax:
    content: "public abstract MemcacheParameters getParameters()"
    return:
      type: "com.google.cloud.memcache.v1.MemcacheParameters"
      description: "The parameters."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder()"
  id: "getParametersOrBuilder()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getParametersOrBuilder()"
  nameWithType: "InstanceOrBuilder.getParametersOrBuilder()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOptional: User defined parameters to apply to the memcached process\n on each node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 11;`"
  syntax:
    content: "public abstract MemcacheParametersOrBuilder getParametersOrBuilder()"
    return:
      type: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getState()"
  id: "getState()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getState()"
  nameWithType: "InstanceOrBuilder.getState()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getState()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getState*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The state of this Memcached instance.\n```\n\n`.google.cloud.memcache.v1.Instance.State state = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Instance.State getState()"
    return:
      type: "com.google.cloud.memcache.v1.Instance.State"
      description: "The state."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue()"
  id: "getStateValue()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getStateValue()"
  nameWithType: "InstanceOrBuilder.getStateValue()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The state of this Memcached instance.\n```\n\n`.google.cloud.memcache.v1.Instance.State state = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract int getStateValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for state."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime()"
  id: "getUpdateTime()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getUpdateTime()"
  nameWithType: "InstanceOrBuilder.getUpdateTime()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was updated.\n```\n\n`.google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract Timestamp getUpdateTime()"
    return:
      type: "com.google.protobuf.Timestamp"
      description: "The updateTime."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder()"
  id: "getUpdateTimeOrBuilder()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getUpdateTimeOrBuilder()"
  nameWithType: "InstanceOrBuilder.getUpdateTimeOrBuilder()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was updated.\n```\n\n`.google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract TimestampOrBuilder getUpdateTimeOrBuilder()"
    return:
      type: "com.google.protobuf.TimestampOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones(int)"
  id: "getZones(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getZones(int index)"
  nameWithType: "InstanceOrBuilder.getZones(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nZones where Memcached nodes should be provisioned in.\n Memcached nodes will be equally distributed across these zones. If not\n provided, the service will by default create nodes in all zones in the\n region for the instance.\n```\n\n`repeated string zones = 5;`"
  syntax:
    content: "public abstract String getZones(int index)"
    parameters:
    - id: "index"
      type: "int"
      description: "The index of the element to return."
    return:
      type: "java.lang.String"
      description: "The zones at the given index."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes(int)"
  id: "getZonesBytes(int)"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getZonesBytes(int index)"
  nameWithType: "InstanceOrBuilder.getZonesBytes(int index)"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes(int index)"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nZones where Memcached nodes should be provisioned in.\n Memcached nodes will be equally distributed across these zones. If not\n provided, the service will by default create nodes in all zones in the\n region for the instance.\n```\n\n`repeated string zones = 5;`"
  syntax:
    content: "public abstract ByteString getZonesBytes(int index)"
    parameters:
    - id: "index"
      type: "int"
      description: "The index of the value to return."
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes of the zones at the given index."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount()"
  id: "getZonesCount()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getZonesCount()"
  nameWithType: "InstanceOrBuilder.getZonesCount()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nZones where Memcached nodes should be provisioned in.\n Memcached nodes will be equally distributed across these zones. If not\n provided, the service will by default create nodes in all zones in the\n region for the instance.\n```\n\n`repeated string zones = 5;`"
  syntax:
    content: "public abstract int getZonesCount()"
    return:
      type: "int"
      description: "The count of zones."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList()"
  id: "getZonesList()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "getZonesList()"
  nameWithType: "InstanceOrBuilder.getZonesList()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nZones where Memcached nodes should be provisioned in.\n Memcached nodes will be equally distributed across these zones. If not\n provided, the service will by default create nodes in all zones in the\n region for the instance.\n```\n\n`repeated string zones = 5;`"
  syntax:
    content: "public abstract List<String> getZonesList()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "A list containing the zones."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime()"
  id: "hasCreateTime()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "hasCreateTime()"
  nameWithType: "InstanceOrBuilder.hasCreateTime()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was created.\n```\n\n`.google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract boolean hasCreateTime()"
    return:
      type: "boolean"
      description: "Whether the createTime field is set."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig()"
  id: "hasNodeConfig()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "hasNodeConfig()"
  nameWithType: "InstanceOrBuilder.hasNodeConfig()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nRequired. Configuration for Memcached nodes.\n```\n\n`.google.cloud.memcache.v1.Instance.NodeConfig node_config = 7 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract boolean hasNodeConfig()"
    return:
      type: "boolean"
      description: "Whether the nodeConfig field is set."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters()"
  id: "hasParameters()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "hasParameters()"
  nameWithType: "InstanceOrBuilder.hasParameters()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOptional: User defined parameters to apply to the memcached process\n on each node.\n```\n\n`.google.cloud.memcache.v1.MemcacheParameters parameters = 11;`"
  syntax:
    content: "public abstract boolean hasParameters()"
    return:
      type: "boolean"
      description: "Whether the parameters field is set."
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime()"
  id: "hasUpdateTime()"
  parent: "com.google.cloud.memcache.v1.InstanceOrBuilder"
  langs:
  - "java"
  name: "hasUpdateTime()"
  nameWithType: "InstanceOrBuilder.hasUpdateTime()"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime()"
  overload: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime*"
  type: "Method"
  package: "com.google.cloud.memcache.v1"
  summary: "```\nOutput only. The time the instance was updated.\n```\n\n`.google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];`"
  syntax:
    content: "public abstract boolean hasUpdateTime()"
    return:
      type: "boolean"
      description: "Whether the updateTime field is set."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getName*"
  name: "getName"
  nameWithType: "InstanceOrBuilder.getName"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getName"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.ByteString"
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes*"
  name: "getNameBytes"
  nameWithType: "InstanceOrBuilder.getNameBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNameBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName*"
  name: "getDisplayName"
  nameWithType: "InstanceOrBuilder.getDisplayName"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayName"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes*"
  name: "getDisplayNameBytes"
  nameWithType: "InstanceOrBuilder.getDisplayNameBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDisplayNameBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount*"
  name: "getLabelsCount"
  nameWithType: "InstanceOrBuilder.getLabelsCount"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsCount"
  package: "com.google.cloud.memcache.v1"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels*"
  name: "containsLabels"
  nameWithType: "InstanceOrBuilder.containsLabels"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.containsLabels"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels*"
  name: "getLabels"
  nameWithType: "InstanceOrBuilder.getLabels"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabels"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap*"
  name: "getLabelsMap"
  nameWithType: "InstanceOrBuilder.getLabelsMap"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsMap"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault*"
  name: "getLabelsOrDefault"
  nameWithType: "InstanceOrBuilder.getLabelsOrDefault"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrDefault"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow*"
  name: "getLabelsOrThrow"
  nameWithType: "InstanceOrBuilder.getLabelsOrThrow"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getLabelsOrThrow"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork*"
  name: "getAuthorizedNetwork"
  nameWithType: "InstanceOrBuilder.getAuthorizedNetwork"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetwork"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes*"
  name: "getAuthorizedNetworkBytes"
  nameWithType: "InstanceOrBuilder.getAuthorizedNetworkBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getAuthorizedNetworkBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList*"
  name: "getZonesList"
  nameWithType: "InstanceOrBuilder.getZonesList"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesList"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount*"
  name: "getZonesCount"
  nameWithType: "InstanceOrBuilder.getZonesCount"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesCount"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones*"
  name: "getZones"
  nameWithType: "InstanceOrBuilder.getZones"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZones"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes*"
  name: "getZonesBytes"
  nameWithType: "InstanceOrBuilder.getZonesBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getZonesBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount*"
  name: "getNodeCount"
  nameWithType: "InstanceOrBuilder.getNodeCount"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeCount"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig*"
  name: "hasNodeConfig"
  nameWithType: "InstanceOrBuilder.hasNodeConfig"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasNodeConfig"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeConfig"
  name: "Instance.NodeConfig"
  nameWithType: "Instance.NodeConfig"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeConfig"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig*"
  name: "getNodeConfig"
  nameWithType: "InstanceOrBuilder.getNodeConfig"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfig"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeConfigOrBuilder"
  name: "Instance.NodeConfigOrBuilder"
  nameWithType: "Instance.NodeConfigOrBuilder"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeConfigOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder*"
  name: "getNodeConfigOrBuilder"
  nameWithType: "InstanceOrBuilder.getNodeConfigOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getNodeConfigOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue*"
  name: "getMemcacheVersionValue"
  nameWithType: "InstanceOrBuilder.getMemcacheVersionValue"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersionValue"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheVersion"
  name: "MemcacheVersion"
  nameWithType: "MemcacheVersion"
  fullName: "com.google.cloud.memcache.v1.MemcacheVersion"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion*"
  name: "getMemcacheVersion"
  nameWithType: "InstanceOrBuilder.getMemcacheVersion"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheVersion"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters*"
  name: "hasParameters"
  nameWithType: "InstanceOrBuilder.hasParameters"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasParameters"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParameters"
  name: "MemcacheParameters"
  nameWithType: "MemcacheParameters"
  fullName: "com.google.cloud.memcache.v1.MemcacheParameters"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters*"
  name: "getParameters"
  nameWithType: "InstanceOrBuilder.getParameters"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParameters"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
  name: "MemcacheParametersOrBuilder"
  nameWithType: "MemcacheParametersOrBuilder"
  fullName: "com.google.cloud.memcache.v1.MemcacheParametersOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder*"
  name: "getParametersOrBuilder"
  nameWithType: "InstanceOrBuilder.getParametersOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getParametersOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<com.google.cloud.memcache.v1.Instance.Node>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.Instance.Node"
    name: "Node"
    fullName: "com.google.cloud.memcache.v1.Instance.Node"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList*"
  name: "getMemcacheNodesList"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesList"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesList"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.Node"
  name: "Instance.Node"
  nameWithType: "Instance.Node"
  fullName: "com.google.cloud.memcache.v1.Instance.Node"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes*"
  name: "getMemcacheNodes"
  nameWithType: "InstanceOrBuilder.getMemcacheNodes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount*"
  name: "getMemcacheNodesCount"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesCount"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesCount"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
    name: "NodeOrBuilder"
    fullName: "? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList*"
  name: "getMemcacheNodesOrBuilderList"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesOrBuilderList"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilderList"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  name: "Instance.NodeOrBuilder"
  nameWithType: "Instance.NodeOrBuilder"
  fullName: "com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder*"
  name: "getMemcacheNodesOrBuilder"
  nameWithType: "InstanceOrBuilder.getMemcacheNodesOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheNodesOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime*"
  name: "hasCreateTime"
  nameWithType: "InstanceOrBuilder.hasCreateTime"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasCreateTime"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.Timestamp"
  spec.java:
  - uid: "com.google.protobuf.Timestamp"
    name: "Timestamp"
    fullName: "com.google.protobuf.Timestamp"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime*"
  name: "getCreateTime"
  nameWithType: "InstanceOrBuilder.getCreateTime"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTime"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.TimestampOrBuilder"
  spec.java:
  - uid: "com.google.protobuf.TimestampOrBuilder"
    name: "TimestampOrBuilder"
    fullName: "com.google.protobuf.TimestampOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder*"
  name: "getCreateTimeOrBuilder"
  nameWithType: "InstanceOrBuilder.getCreateTimeOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getCreateTimeOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime*"
  name: "hasUpdateTime"
  nameWithType: "InstanceOrBuilder.hasUpdateTime"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.hasUpdateTime"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime*"
  name: "getUpdateTime"
  nameWithType: "InstanceOrBuilder.getUpdateTime"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTime"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder*"
  name: "getUpdateTimeOrBuilder"
  nameWithType: "InstanceOrBuilder.getUpdateTimeOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getUpdateTimeOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue*"
  name: "getStateValue"
  nameWithType: "InstanceOrBuilder.getStateValue"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getStateValue"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.State"
  name: "Instance.State"
  nameWithType: "Instance.State"
  fullName: "com.google.cloud.memcache.v1.Instance.State"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getState*"
  name: "getState"
  nameWithType: "InstanceOrBuilder.getState"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getState"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion*"
  name: "getMemcacheFullVersion"
  nameWithType: "InstanceOrBuilder.getMemcacheFullVersion"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersion"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes*"
  name: "getMemcacheFullVersionBytes"
  nameWithType: "InstanceOrBuilder.getMemcacheFullVersionBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getMemcacheFullVersionBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<com.google.cloud.memcache.v1.Instance.InstanceMessage>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.memcache.v1.Instance.InstanceMessage"
    name: "InstanceMessage"
    fullName: "com.google.cloud.memcache.v1.Instance.InstanceMessage"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList*"
  name: "getInstanceMessagesList"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesList"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesList"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.InstanceMessage"
  name: "Instance.InstanceMessage"
  nameWithType: "Instance.InstanceMessage"
  fullName: "com.google.cloud.memcache.v1.Instance.InstanceMessage"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages*"
  name: "getInstanceMessages"
  nameWithType: "InstanceOrBuilder.getInstanceMessages"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessages"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount*"
  name: "getInstanceMessagesCount"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesCount"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesCount"
  package: "com.google.cloud.memcache.v1"
- uid: "java.util.List<? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
    name: "InstanceMessageOrBuilder"
    fullName: "? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList*"
  name: "getInstanceMessagesOrBuilderList"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesOrBuilderList"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilderList"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
  name: "Instance.InstanceMessageOrBuilder"
  nameWithType: "Instance.InstanceMessageOrBuilder"
  fullName: "com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder*"
  name: "getInstanceMessagesOrBuilder"
  nameWithType: "InstanceOrBuilder.getInstanceMessagesOrBuilder"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getInstanceMessagesOrBuilder"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint*"
  name: "getDiscoveryEndpoint"
  nameWithType: "InstanceOrBuilder.getDiscoveryEndpoint"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpoint"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes*"
  name: "getDiscoveryEndpointBytes"
  nameWithType: "InstanceOrBuilder.getDiscoveryEndpointBytes"
  fullName: "com.google.cloud.memcache.v1.InstanceOrBuilder.getDiscoveryEndpointBytes"
  package: "com.google.cloud.memcache.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
  name: "? extends Instance.NodeOrBuilder"
  nameWithType: "? extends Instance.NodeOrBuilder"
  fullName: "? extends com.google.cloud.memcache.v1.Instance.NodeOrBuilder"
- uid: "? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
  name: "? extends Instance.InstanceMessageOrBuilder"
  nameWithType: "? extends Instance.InstanceMessageOrBuilder"
  fullName: "? extends com.google.cloud.memcache.v1.Instance.InstanceMessageOrBuilder"
