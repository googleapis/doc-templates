### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.speech.v1.SpeechClient"
  id: "SpeechClient"
  parent: "com.google.cloud.speech.v1"
  children:
  - "com.google.cloud.speech.v1.SpeechClient.SpeechClient(com.google.cloud.speech.v1.SpeechSettings)"
  - "com.google.cloud.speech.v1.SpeechClient.SpeechClient(com.google.cloud.speech.v1.stub.SpeechStub)"
  - "com.google.cloud.speech.v1.SpeechClient.awaitTermination(long,java.util.concurrent.TimeUnit)"
  - "com.google.cloud.speech.v1.SpeechClient.close()"
  - "com.google.cloud.speech.v1.SpeechClient.create()"
  - "com.google.cloud.speech.v1.SpeechClient.create(com.google.cloud.speech.v1.SpeechSettings)"
  - "com.google.cloud.speech.v1.SpeechClient.create(com.google.cloud.speech.v1.stub.SpeechStub)"
  - "com.google.cloud.speech.v1.SpeechClient.getOperationsClient()"
  - "com.google.cloud.speech.v1.SpeechClient.getSettings()"
  - "com.google.cloud.speech.v1.SpeechClient.getStub()"
  - "com.google.cloud.speech.v1.SpeechClient.isShutdown()"
  - "com.google.cloud.speech.v1.SpeechClient.isTerminated()"
  - "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(com.google.cloud.speech.v1.LongRunningRecognizeRequest)"
  - "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  - "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable()"
  - "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable()"
  - "com.google.cloud.speech.v1.SpeechClient.recognize(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  - "com.google.cloud.speech.v1.SpeechClient.recognize(com.google.cloud.speech.v1.RecognizeRequest)"
  - "com.google.cloud.speech.v1.SpeechClient.recognizeCallable()"
  - "com.google.cloud.speech.v1.SpeechClient.shutdown()"
  - "com.google.cloud.speech.v1.SpeechClient.shutdownNow()"
  - "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable()"
  langs:
  - "java"
  name: "SpeechClient"
  nameWithType: "SpeechClient"
  fullName: "com.google.cloud.speech.v1.SpeechClient"
  type: "Class"
  package: "com.google.cloud.speech.v1"
  summary: "Service Description: Service that implements Google Cloud Speech API.\n\n <p>This class provides the ability to make remote calls to the backing service through method\n calls that map to API methods. Sample code to get started:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   RecognitionConfig config = RecognitionConfig.newBuilder().build();\n   RecognitionAudio audio = RecognitionAudio.newBuilder().build();\n   RecognizeResponse response = speechClient.recognize(config, audio);\n }\n </code></pre>\n\n <p>Note: close() needs to be called on the SpeechClient object to clean up resources such as\n threads. In the example above, try-with-resources is used, which automatically calls close().\n\n <p>The surface of this class includes several types of Java methods for each of the API's\n methods:\n\n <ol>\n   <li>A \"flattened\" method. With this type of method, the fields of the request type have been\n       converted into function parameters. It may be the case that not all fields are available as\n       parameters, and not every API method will have a flattened method entry point.\n   <li>A \"request object\" method. This type of method only takes one parameter, a request object,\n       which must be constructed before the call. Not every API method will have a request object\n       method.\n   <li>A \"callable\" method. This type of method takes no parameters and returns an immutable API\n       callable object, which can be used to initiate calls to the service.\n </ol>\n\n <p>See the individual methods for example code.\n\n <p>Many parameters require resource names to be formatted in a particular way. To assist with\n these names, this class includes a format method for each type of name, and additionally a parse\n method to extract the individual identifiers contained within names that are returned.\n\n <p>This class can be customized by passing in a custom instance of SpeechSettings to create().\n For example:\n\n <p>To customize credentials:\n\n <pre class=\"prettyprint lang-java\"><code>\n SpeechSettings speechSettings =\n     SpeechSettings.newBuilder()\n         .setCredentialsProvider(FixedCredentialsProvider.create(myCredentials))\n         .build();\n SpeechClient speechClient = SpeechClient.create(speechSettings);\n </code></pre>\n\n <p>To customize the endpoint:\n\n <pre class=\"prettyprint lang-java\"><code>\n SpeechSettings speechSettings = SpeechSettings.newBuilder().setEndpoint(myEndpoint).build();\n SpeechClient speechClient = SpeechClient.create(speechSettings);\n </code></pre>\n\n <p>Please refer to the GitHub repository's samples for more quickstart code snippets."
  syntax:
    content: "public class SpeechClient implements BackgroundResource"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.google.api.gax.core.BackgroundResource"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  javaType: "class"
- uid: "com.google.cloud.speech.v1.SpeechClient.SpeechClient(com.google.cloud.speech.v1.SpeechSettings)"
  id: "SpeechClient(com.google.cloud.speech.v1.SpeechSettings)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "SpeechClient(SpeechSettings settings)"
  nameWithType: "SpeechClient.SpeechClient(SpeechSettings settings)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.SpeechClient(SpeechSettings settings)"
  overload: "com.google.cloud.speech.v1.SpeechClient.SpeechClient*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1"
  summary: "Constructs an instance of SpeechClient, using the given settings. This is protected so that it\n is easy to make a subclass, but otherwise, the static factory methods should be preferred."
  syntax:
    content: "protected SpeechClient(SpeechSettings settings)"
    parameters:
    - id: "settings"
      type: "com.google.cloud.speech.v1.SpeechSettings"
  javaType: "constructor"
- uid: "com.google.cloud.speech.v1.SpeechClient.SpeechClient(com.google.cloud.speech.v1.stub.SpeechStub)"
  id: "SpeechClient(com.google.cloud.speech.v1.stub.SpeechStub)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "SpeechClient(SpeechStub stub)"
  nameWithType: "SpeechClient.SpeechClient(SpeechStub stub)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.SpeechClient(SpeechStub stub)"
  overload: "com.google.cloud.speech.v1.SpeechClient.SpeechClient*"
  type: "Constructor"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "protected SpeechClient(SpeechStub stub)"
    parameters:
    - id: "stub"
      type: "com.google.cloud.speech.v1.stub.SpeechStub"
  javaType: "constructor"
- uid: "com.google.cloud.speech.v1.SpeechClient.awaitTermination(long,java.util.concurrent.TimeUnit)"
  id: "awaitTermination(long,java.util.concurrent.TimeUnit)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "awaitTermination(long duration, TimeUnit unit)"
  nameWithType: "SpeechClient.awaitTermination(long duration, TimeUnit unit)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.awaitTermination(long duration, TimeUnit unit)"
  overload: "com.google.cloud.speech.v1.SpeechClient.awaitTermination*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public boolean awaitTermination(long duration, TimeUnit unit)"
    parameters:
    - id: "duration"
      type: "long"
    - id: "unit"
      type: "java.util.concurrent.TimeUnit"
    return:
      type: "boolean"
  exceptions:
  - type: "java.lang.InterruptedException"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.close()"
  id: "close()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "close()"
  nameWithType: "SpeechClient.close()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.close()"
  overload: "com.google.cloud.speech.v1.SpeechClient.close*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public final void close()"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.create()"
  id: "create()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "create()"
  nameWithType: "SpeechClient.create()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.create()"
  overload: "com.google.cloud.speech.v1.SpeechClient.create*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Constructs an instance of SpeechClient with default settings."
  syntax:
    content: "public static final SpeechClient create()"
    return:
      type: "com.google.cloud.speech.v1.SpeechClient"
  exceptions:
  - type: "java.io.IOException"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.create(com.google.cloud.speech.v1.SpeechSettings)"
  id: "create(com.google.cloud.speech.v1.SpeechSettings)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "create(SpeechSettings settings)"
  nameWithType: "SpeechClient.create(SpeechSettings settings)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.create(SpeechSettings settings)"
  overload: "com.google.cloud.speech.v1.SpeechClient.create*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Constructs an instance of SpeechClient, using the given settings. The channels are created\n based on the settings passed in, or defaults for any settings that are not set."
  syntax:
    content: "public static final SpeechClient create(SpeechSettings settings)"
    parameters:
    - id: "settings"
      type: "com.google.cloud.speech.v1.SpeechSettings"
    return:
      type: "com.google.cloud.speech.v1.SpeechClient"
  exceptions:
  - type: "java.io.IOException"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.create(com.google.cloud.speech.v1.stub.SpeechStub)"
  id: "create(com.google.cloud.speech.v1.stub.SpeechStub)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "create(SpeechStub stub)"
  nameWithType: "SpeechClient.create(SpeechStub stub)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.create(SpeechStub stub)"
  overload: "com.google.cloud.speech.v1.SpeechClient.create*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Constructs an instance of SpeechClient, using the given stub for making calls. This is for\n advanced usage - prefer using create(SpeechSettings)."
  syntax:
    content: "public static final SpeechClient create(SpeechStub stub)"
    parameters:
    - id: "stub"
      type: "com.google.cloud.speech.v1.stub.SpeechStub"
    return:
      type: "com.google.cloud.speech.v1.SpeechClient"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.getOperationsClient()"
  id: "getOperationsClient()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "getOperationsClient()"
  nameWithType: "SpeechClient.getOperationsClient()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getOperationsClient()"
  overload: "com.google.cloud.speech.v1.SpeechClient.getOperationsClient*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Returns the OperationsClient that can be used to query the status of a long-running operation\n returned by another API method call."
  syntax:
    content: "public final OperationsClient getOperationsClient()"
    return:
      type: "com.google.longrunning.OperationsClient"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.getSettings()"
  id: "getSettings()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "getSettings()"
  nameWithType: "SpeechClient.getSettings()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getSettings()"
  overload: "com.google.cloud.speech.v1.SpeechClient.getSettings*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public final SpeechSettings getSettings()"
    return:
      type: "com.google.cloud.speech.v1.SpeechSettings"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.getStub()"
  id: "getStub()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "getStub()"
  nameWithType: "SpeechClient.getStub()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getStub()"
  overload: "com.google.cloud.speech.v1.SpeechClient.getStub*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public SpeechStub getStub()"
    return:
      type: "com.google.cloud.speech.v1.stub.SpeechStub"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.isShutdown()"
  id: "isShutdown()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "isShutdown()"
  nameWithType: "SpeechClient.isShutdown()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.isShutdown()"
  overload: "com.google.cloud.speech.v1.SpeechClient.isShutdown*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public boolean isShutdown()"
    return:
      type: "boolean"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.isTerminated()"
  id: "isTerminated()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "isTerminated()"
  nameWithType: "SpeechClient.isTerminated()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.isTerminated()"
  overload: "com.google.cloud.speech.v1.SpeechClient.isTerminated*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public boolean isTerminated()"
    return:
      type: "boolean"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(com.google.cloud.speech.v1.LongRunningRecognizeRequest)"
  id: "longRunningRecognizeAsync(com.google.cloud.speech.v1.LongRunningRecognizeRequest)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "longRunningRecognizeAsync(LongRunningRecognizeRequest request)"
  nameWithType: "SpeechClient.longRunningRecognizeAsync(LongRunningRecognizeRequest request)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(LongRunningRecognizeRequest request)"
  overload: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs asynchronous speech recognition: receive results via the google.longrunning.Operations\n interface. Returns either an <code>Operation.error</code> or an <code>Operation.response</code> which contains a\n <code>LongRunningRecognizeResponse</code> message. For more information on asynchronous speech\n recognition, see the <a href=\"https://cloud.google.com/speech-to-text/docs/async-recognize\">how-to</a>.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   LongRunningRecognizeRequest request =\n       LongRunningRecognizeRequest.newBuilder()\n           .setConfig(RecognitionConfig.newBuilder().build())\n           .setAudio(RecognitionAudio.newBuilder().build())\n           .build();\n   LongRunningRecognizeResponse response = speechClient.longRunningRecognizeAsync(request).get();\n }\n </code></pre>"
  syntax:
    content: "public final OperationFuture<LongRunningRecognizeResponse,LongRunningRecognizeMetadata> longRunningRecognizeAsync(LongRunningRecognizeRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata>"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  id: "longRunningRecognizeAsync(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "longRunningRecognizeAsync(RecognitionConfig config, RecognitionAudio audio)"
  nameWithType: "SpeechClient.longRunningRecognizeAsync(RecognitionConfig config, RecognitionAudio audio)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync(RecognitionConfig config, RecognitionAudio audio)"
  overload: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs asynchronous speech recognition: receive results via the google.longrunning.Operations\n interface. Returns either an <code>Operation.error</code> or an <code>Operation.response</code> which contains a\n <code>LongRunningRecognizeResponse</code> message. For more information on asynchronous speech\n recognition, see the <a href=\"https://cloud.google.com/speech-to-text/docs/async-recognize\">how-to</a>.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   RecognitionConfig config = RecognitionConfig.newBuilder().build();\n   RecognitionAudio audio = RecognitionAudio.newBuilder().build();\n   LongRunningRecognizeResponse response =\n       speechClient.longRunningRecognizeAsync(config, audio).get();\n }\n </code></pre>"
  syntax:
    content: "public final OperationFuture<LongRunningRecognizeResponse,LongRunningRecognizeMetadata> longRunningRecognizeAsync(RecognitionConfig config, RecognitionAudio audio)"
    parameters:
    - id: "config"
      type: "com.google.cloud.speech.v1.RecognitionConfig"
      description: "Required. Provides information to the recognizer that specifies how to process\n     the request."
    - id: "audio"
      type: "com.google.cloud.speech.v1.RecognitionAudio"
      description: "Required. The audio data to be recognized."
    return:
      type: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata>"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable()"
  id: "longRunningRecognizeCallable()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "longRunningRecognizeCallable()"
  nameWithType: "SpeechClient.longRunningRecognizeCallable()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable()"
  overload: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs asynchronous speech recognition: receive results via the google.longrunning.Operations\n interface. Returns either an <code>Operation.error</code> or an <code>Operation.response</code> which contains a\n <code>LongRunningRecognizeResponse</code> message. For more information on asynchronous speech\n recognition, see the <a href=\"https://cloud.google.com/speech-to-text/docs/async-recognize\">how-to</a>.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   LongRunningRecognizeRequest request =\n       LongRunningRecognizeRequest.newBuilder()\n           .setConfig(RecognitionConfig.newBuilder().build())\n           .setAudio(RecognitionAudio.newBuilder().build())\n           .build();\n   ApiFuture<Operation> future = speechClient.longRunningRecognizeCallable().futureCall(request);\n   // Do something.\n   Operation response = future.get();\n }\n </code></pre>"
  syntax:
    content: "public final UnaryCallable<LongRunningRecognizeRequest,Operation> longRunningRecognizeCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.longrunning.Operation>"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable()"
  id: "longRunningRecognizeOperationCallable()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "longRunningRecognizeOperationCallable()"
  nameWithType: "SpeechClient.longRunningRecognizeOperationCallable()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable()"
  overload: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs asynchronous speech recognition: receive results via the google.longrunning.Operations\n interface. Returns either an <code>Operation.error</code> or an <code>Operation.response</code> which contains a\n <code>LongRunningRecognizeResponse</code> message. For more information on asynchronous speech\n recognition, see the <a href=\"https://cloud.google.com/speech-to-text/docs/async-recognize\">how-to</a>.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   LongRunningRecognizeRequest request =\n       LongRunningRecognizeRequest.newBuilder()\n           .setConfig(RecognitionConfig.newBuilder().build())\n           .setAudio(RecognitionAudio.newBuilder().build())\n           .build();\n   OperationFuture<LongRunningRecognizeResponse, LongRunningRecognizeMetadata> future =\n       speechClient.longRunningRecognizeOperationCallable().futureCall(request);\n   // Do something.\n   LongRunningRecognizeResponse response = future.get();\n }\n </code></pre>"
  syntax:
    content: "public final OperationCallable<LongRunningRecognizeRequest,LongRunningRecognizeResponse,LongRunningRecognizeMetadata> longRunningRecognizeOperationCallable()"
    return:
      type: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata>"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.recognize(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  id: "recognize(com.google.cloud.speech.v1.RecognitionConfig,com.google.cloud.speech.v1.RecognitionAudio)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "recognize(RecognitionConfig config, RecognitionAudio audio)"
  nameWithType: "SpeechClient.recognize(RecognitionConfig config, RecognitionAudio audio)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.recognize(RecognitionConfig config, RecognitionAudio audio)"
  overload: "com.google.cloud.speech.v1.SpeechClient.recognize*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs synchronous speech recognition: receive results after all audio has been sent and\n processed.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   RecognitionConfig config = RecognitionConfig.newBuilder().build();\n   RecognitionAudio audio = RecognitionAudio.newBuilder().build();\n   RecognizeResponse response = speechClient.recognize(config, audio);\n }\n </code></pre>"
  syntax:
    content: "public final RecognizeResponse recognize(RecognitionConfig config, RecognitionAudio audio)"
    parameters:
    - id: "config"
      type: "com.google.cloud.speech.v1.RecognitionConfig"
      description: "Required. Provides information to the recognizer that specifies how to process\n     the request."
    - id: "audio"
      type: "com.google.cloud.speech.v1.RecognitionAudio"
      description: "Required. The audio data to be recognized."
    return:
      type: "com.google.cloud.speech.v1.RecognizeResponse"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.recognize(com.google.cloud.speech.v1.RecognizeRequest)"
  id: "recognize(com.google.cloud.speech.v1.RecognizeRequest)"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "recognize(RecognizeRequest request)"
  nameWithType: "SpeechClient.recognize(RecognizeRequest request)"
  fullName: "com.google.cloud.speech.v1.SpeechClient.recognize(RecognizeRequest request)"
  overload: "com.google.cloud.speech.v1.SpeechClient.recognize*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs synchronous speech recognition: receive results after all audio has been sent and\n processed.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   RecognizeRequest request =\n       RecognizeRequest.newBuilder()\n           .setConfig(RecognitionConfig.newBuilder().build())\n           .setAudio(RecognitionAudio.newBuilder().build())\n           .build();\n   RecognizeResponse response = speechClient.recognize(request);\n }\n </code></pre>"
  syntax:
    content: "public final RecognizeResponse recognize(RecognizeRequest request)"
    parameters:
    - id: "request"
      type: "com.google.cloud.speech.v1.RecognizeRequest"
      description: "The request object containing all of the parameters for the API call."
    return:
      type: "com.google.cloud.speech.v1.RecognizeResponse"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.recognizeCallable()"
  id: "recognizeCallable()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "recognizeCallable()"
  nameWithType: "SpeechClient.recognizeCallable()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.recognizeCallable()"
  overload: "com.google.cloud.speech.v1.SpeechClient.recognizeCallable*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs synchronous speech recognition: receive results after all audio has been sent and\n processed.\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   RecognizeRequest request =\n       RecognizeRequest.newBuilder()\n           .setConfig(RecognitionConfig.newBuilder().build())\n           .setAudio(RecognitionAudio.newBuilder().build())\n           .build();\n   ApiFuture<RecognizeResponse> future = speechClient.recognizeCallable().futureCall(request);\n   // Do something.\n   RecognizeResponse response = future.get();\n }\n </code></pre>"
  syntax:
    content: "public final UnaryCallable<RecognizeRequest,RecognizeResponse> recognizeCallable()"
    return:
      type: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.speech.v1.RecognizeRequest,com.google.cloud.speech.v1.RecognizeResponse>"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.shutdown()"
  id: "shutdown()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "shutdown()"
  nameWithType: "SpeechClient.shutdown()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.shutdown()"
  overload: "com.google.cloud.speech.v1.SpeechClient.shutdown*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public void shutdown()"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.shutdownNow()"
  id: "shutdownNow()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "shutdownNow()"
  nameWithType: "SpeechClient.shutdownNow()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.shutdownNow()"
  overload: "com.google.cloud.speech.v1.SpeechClient.shutdownNow*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public void shutdownNow()"
  javaType: "method"
- uid: "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable()"
  id: "streamingRecognizeCallable()"
  parent: "com.google.cloud.speech.v1.SpeechClient"
  langs:
  - "java"
  name: "streamingRecognizeCallable()"
  nameWithType: "SpeechClient.streamingRecognizeCallable()"
  fullName: "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable()"
  overload: "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "Performs bidirectional streaming speech recognition: receive results while sending audio. This\n method is only available via the gRPC API (not REST).\n\n <p>Sample code:\n\n <pre class=\"prettyprint lang-java\"><code>\n try (SpeechClient speechClient = SpeechClient.create()) {\n   BidiStream<StreamingRecognizeRequest, StreamingRecognizeResponse> bidiStream =\n       speechClient.streamingRecognizeCallable().call();\n   StreamingRecognizeRequest request = StreamingRecognizeRequest.newBuilder().build();\n   bidiStream.send(request);\n   for (StreamingRecognizeResponse response : bidiStream) {\n     // Do something when a response is received.\n   }\n }\n </code></pre>"
  syntax:
    content: "public final BidiStreamingCallable<StreamingRecognizeRequest,StreamingRecognizeResponse> streamingRecognizeCallable()"
    return:
      type: "com.google.api.gax.rpc.BidiStreamingCallable<com.google.cloud.speech.v1.StreamingRecognizeRequest,com.google.cloud.speech.v1.StreamingRecognizeResponse>"
  javaType: "method"
references:
- uid: "com.google.cloud.speech.v1.SpeechSettings"
  name: "SpeechSettings"
  nameWithType: "SpeechSettings"
  fullName: "com.google.cloud.speech.v1.SpeechSettings"
- uid: "com.google.cloud.speech.v1.SpeechClient.SpeechClient*"
  name: "SpeechClient"
  nameWithType: "SpeechClient.SpeechClient"
  fullName: "com.google.cloud.speech.v1.SpeechClient.SpeechClient"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.stub.SpeechStub"
  name: "SpeechStub"
  nameWithType: "SpeechStub"
  fullName: "com.google.cloud.speech.v1.stub.SpeechStub"
- uid: "java.io.IOException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
- uid: "com.google.cloud.speech.v1.SpeechClient.create*"
  name: "create"
  nameWithType: "SpeechClient.create"
  fullName: "com.google.cloud.speech.v1.SpeechClient.create"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.getSettings*"
  name: "getSettings"
  nameWithType: "SpeechClient.getSettings"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getSettings"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.getStub*"
  name: "getStub"
  nameWithType: "SpeechClient.getStub"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getStub"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.longrunning.OperationsClient"
  isExternal: true
  spec.java:
  - uid: "com.google.longrunning.OperationsClient"
    name: "OperationsClient"
    fullName: "com.google.longrunning.OperationsClient"
    isExternal: true
- uid: "com.google.cloud.speech.v1.SpeechClient.getOperationsClient*"
  name: "getOperationsClient"
  nameWithType: "SpeechClient.getOperationsClient"
  fullName: "com.google.cloud.speech.v1.SpeechClient.getOperationsClient"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig"
  name: "RecognitionConfig"
  nameWithType: "RecognitionConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig"
- uid: "com.google.cloud.speech.v1.RecognitionAudio"
  name: "RecognitionAudio"
  nameWithType: "RecognitionAudio"
  fullName: "com.google.cloud.speech.v1.RecognitionAudio"
- uid: "com.google.cloud.speech.v1.RecognizeResponse"
  name: "RecognizeResponse"
  nameWithType: "RecognizeResponse"
  fullName: "com.google.cloud.speech.v1.RecognizeResponse"
- uid: "com.google.cloud.speech.v1.SpeechClient.recognize*"
  name: "recognize"
  nameWithType: "SpeechClient.recognize"
  fullName: "com.google.cloud.speech.v1.SpeechClient.recognize"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognizeRequest"
  name: "RecognizeRequest"
  nameWithType: "RecognizeRequest"
  fullName: "com.google.cloud.speech.v1.RecognizeRequest"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.speech.v1.RecognizeRequest,com.google.cloud.speech.v1.RecognizeResponse>"
  isExternal: true
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
    isExternal: true
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.RecognizeRequest"
    name: "RecognizeRequest"
    fullName: "com.google.cloud.speech.v1.RecognizeRequest"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.speech.v1.RecognizeResponse"
    name: "RecognizeResponse"
    fullName: "com.google.cloud.speech.v1.RecognizeResponse"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.recognizeCallable*"
  name: "recognizeCallable"
  nameWithType: "SpeechClient.recognizeCallable"
  fullName: "com.google.cloud.speech.v1.SpeechClient.recognizeCallable"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.api.gax.longrunning.OperationFuture<com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata>"
  isExternal: true
  spec.java:
  - uid: "com.google.api.gax.longrunning.OperationFuture"
    name: "OperationFuture"
    fullName: "com.google.api.gax.longrunning.OperationFuture"
    isExternal: true
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeResponse"
    name: "LongRunningRecognizeResponse"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeResponse"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
    name: "LongRunningRecognizeMetadata"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync*"
  name: "longRunningRecognizeAsync"
  nameWithType: "SpeechClient.longRunningRecognizeAsync"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeAsync"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
  name: "LongRunningRecognizeRequest"
  nameWithType: "LongRunningRecognizeRequest"
  fullName: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
- uid: "com.google.api.gax.rpc.OperationCallable<com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata>"
  isExternal: true
  spec.java:
  - uid: "com.google.api.gax.rpc.OperationCallable"
    name: "OperationCallable"
    fullName: "com.google.api.gax.rpc.OperationCallable"
    isExternal: true
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
    name: "LongRunningRecognizeRequest"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeResponse"
    name: "LongRunningRecognizeResponse"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeResponse"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
    name: "LongRunningRecognizeMetadata"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable*"
  name: "longRunningRecognizeOperationCallable"
  nameWithType: "SpeechClient.longRunningRecognizeOperationCallable"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeOperationCallable"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.api.gax.rpc.UnaryCallable<com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.longrunning.Operation>"
  isExternal: true
  spec.java:
  - uid: "com.google.api.gax.rpc.UnaryCallable"
    name: "UnaryCallable"
    fullName: "com.google.api.gax.rpc.UnaryCallable"
    isExternal: true
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
    name: "LongRunningRecognizeRequest"
    fullName: "com.google.cloud.speech.v1.LongRunningRecognizeRequest"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
    isExternal: true
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable*"
  name: "longRunningRecognizeCallable"
  nameWithType: "SpeechClient.longRunningRecognizeCallable"
  fullName: "com.google.cloud.speech.v1.SpeechClient.longRunningRecognizeCallable"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.api.gax.rpc.BidiStreamingCallable<com.google.cloud.speech.v1.StreamingRecognizeRequest,com.google.cloud.speech.v1.StreamingRecognizeResponse>"
  isExternal: true
  spec.java:
  - uid: "com.google.api.gax.rpc.BidiStreamingCallable"
    name: "BidiStreamingCallable"
    fullName: "com.google.api.gax.rpc.BidiStreamingCallable"
    isExternal: true
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.StreamingRecognizeRequest"
    name: "StreamingRecognizeRequest"
    fullName: "com.google.cloud.speech.v1.StreamingRecognizeRequest"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.speech.v1.StreamingRecognizeResponse"
    name: "StreamingRecognizeResponse"
    fullName: "com.google.cloud.speech.v1.StreamingRecognizeResponse"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable*"
  name: "streamingRecognizeCallable"
  nameWithType: "SpeechClient.streamingRecognizeCallable"
  fullName: "com.google.cloud.speech.v1.SpeechClient.streamingRecognizeCallable"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.close*"
  name: "close"
  nameWithType: "SpeechClient.close"
  fullName: "com.google.cloud.speech.v1.SpeechClient.close"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.shutdown*"
  name: "shutdown"
  nameWithType: "SpeechClient.shutdown"
  fullName: "com.google.cloud.speech.v1.SpeechClient.shutdown"
  package: "com.google.cloud.speech.v1"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.speech.v1.SpeechClient.isShutdown*"
  name: "isShutdown"
  nameWithType: "SpeechClient.isShutdown"
  fullName: "com.google.cloud.speech.v1.SpeechClient.isShutdown"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.isTerminated*"
  name: "isTerminated"
  nameWithType: "SpeechClient.isTerminated"
  fullName: "com.google.cloud.speech.v1.SpeechClient.isTerminated"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechClient.shutdownNow*"
  name: "shutdownNow"
  nameWithType: "SpeechClient.shutdownNow"
  fullName: "com.google.cloud.speech.v1.SpeechClient.shutdownNow"
  package: "com.google.cloud.speech.v1"
- uid: "java.lang.InterruptedException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "java.util.concurrent.TimeUnit"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"
  spec.java:
  - uid: "java.util.concurrent.TimeUnit"
    name: "TimeUnit"
    fullName: "java.util.concurrent.TimeUnit"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"
- uid: "com.google.cloud.speech.v1.SpeechClient.awaitTermination*"
  name: "awaitTermination"
  nameWithType: "SpeechClient.awaitTermination"
  fullName: "com.google.cloud.speech.v1.SpeechClient.awaitTermination"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.api.gax.core.BackgroundResource"
  isExternal: true
  name: "BackgroundResource"
  nameWithType: "BackgroundResource"
  fullName: "com.google.api.gax.core.BackgroundResource"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.api.gax.rpc.UnaryCallable"
  isExternal: true
  name: "UnaryCallable"
  nameWithType: "UnaryCallable"
  fullName: "com.google.api.gax.rpc.UnaryCallable"
- uid: "com.google.cloud.speech.v1.RecognizeRequest,com.google.cloud.speech.v1.RecognizeResponse"
  name: "RecognizeRequest,RecognizeResponse"
  nameWithType: "RecognizeRequest,RecognizeResponse"
  fullName: "com.google.cloud.speech.v1.RecognizeRequest,com.google.cloud.speech.v1.RecognizeResponse"
- uid: "com.google.api.gax.longrunning.OperationFuture"
  isExternal: true
  name: "OperationFuture"
  nameWithType: "OperationFuture"
  fullName: "com.google.api.gax.longrunning.OperationFuture"
- uid: "com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
  name: "LongRunningRecognizeResponse,LongRunningRecognizeMetadata"
  nameWithType: "LongRunningRecognizeResponse,LongRunningRecognizeMetadata"
  fullName: "com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
- uid: "com.google.api.gax.rpc.OperationCallable"
  isExternal: true
  name: "OperationCallable"
  nameWithType: "OperationCallable"
  fullName: "com.google.api.gax.rpc.OperationCallable"
- uid: "com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
  name: "LongRunningRecognizeRequest,LongRunningRecognizeResponse,LongRunningRecognizeMetadata"
  nameWithType: "LongRunningRecognizeRequest,LongRunningRecognizeResponse,LongRunningRecognizeMetadata"
  fullName: "com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.cloud.speech.v1.LongRunningRecognizeResponse,com.google.cloud.speech.v1.LongRunningRecognizeMetadata"
- uid: "com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.longrunning.Operation"
  name: "LongRunningRecognizeRequest,Operation"
  nameWithType: "LongRunningRecognizeRequest,Operation"
  fullName: "com.google.cloud.speech.v1.LongRunningRecognizeRequest,com.google.longrunning.Operation"
- uid: "com.google.cloud.speech.v1.StreamingRecognizeRequest,com.google.cloud.speech.v1.StreamingRecognizeResponse"
  name: "StreamingRecognizeRequest,StreamingRecognizeResponse"
  nameWithType: "StreamingRecognizeRequest,StreamingRecognizeResponse"
  fullName: "com.google.cloud.speech.v1.StreamingRecognizeRequest,com.google.cloud.speech.v1.StreamingRecognizeResponse"
- uid: "com.google.api.gax.rpc.BidiStreamingCallable"
  isExternal: true
  name: "BidiStreamingCallable"
  nameWithType: "BidiStreamingCallable"
  fullName: "com.google.api.gax.rpc.BidiStreamingCallable"
