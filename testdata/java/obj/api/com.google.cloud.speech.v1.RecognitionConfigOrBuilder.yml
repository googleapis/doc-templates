### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  id: "RecognitionConfigOrBuilder"
  parent: "com.google.cloud.speech.v1"
  children:
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts(int)"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder(int)"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig()"
  - "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata()"
  langs:
  - "java"
  name: "RecognitionConfigOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  type: "Interface"
  package: "com.google.cloud.speech.v1"
  syntax:
    content: "public interface RecognitionConfigOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount()"
  id: "getAudioChannelCount()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getAudioChannelCount()"
  nameWithType: "RecognitionConfigOrBuilder.getAudioChannelCount()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nThe number of channels in the input audio data.\n ONLY set this for MULTI-CHANNEL recognition.\n Valid values for LINEAR16 and FLAC are `1`-`8`.\n Valid values for OGG_OPUS are '1'-'254'.\n Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only `1`.\n If `0` or omitted, defaults to one channel (mono).\n Note: We only recognize the first channel by default.\n To perform independent recognition on each channel set\n `enable_separate_recognition_per_channel` to 'true'.\n```\n\n`int32 audio_channel_count = 7;`"
  syntax:
    content: "public abstract int getAudioChannelCount()"
    return:
      type: "int"
      description: "The audioChannelCount."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig()"
  id: "getDiarizationConfig()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getDiarizationConfig()"
  nameWithType: "RecognitionConfigOrBuilder.getDiarizationConfig()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nConfig to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n```\n\n`.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;`"
  syntax:
    content: "public abstract SpeakerDiarizationConfig getDiarizationConfig()"
    return:
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
      description: "The diarizationConfig."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder()"
  id: "getDiarizationConfigOrBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getDiarizationConfigOrBuilder()"
  nameWithType: "RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nConfig to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n```\n\n`.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;`"
  syntax:
    content: "public abstract SpeakerDiarizationConfigOrBuilder getDiarizationConfigOrBuilder()"
    return:
      type: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation()"
  id: "getEnableAutomaticPunctuation()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEnableAutomaticPunctuation()"
  nameWithType: "RecognitionConfigOrBuilder.getEnableAutomaticPunctuation()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nIf 'true', adds punctuation to recognition result hypotheses.\n This feature is only available in select languages. Setting this for\n requests in other languages has no effect at all.\n The default 'false' value does not add punctuation to result hypotheses.\n```\n\n`bool enable_automatic_punctuation = 11;`"
  syntax:
    content: "public abstract boolean getEnableAutomaticPunctuation()"
    return:
      type: "boolean"
      description: "The enableAutomaticPunctuation."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel()"
  id: "getEnableSeparateRecognitionPerChannel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEnableSeparateRecognitionPerChannel()"
  nameWithType: "RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nThis needs to be set to `true` explicitly and `audio_channel_count` > 1\n to get each channel recognized separately. The recognition result will\n contain a `channel_tag` field to state which channel that result belongs\n to. If this is not true, we will only recognize the first channel. The\n request is billed cumulatively for all channels recognized:\n `audio_channel_count` multiplied by the length of the audio.\n```\n\n`bool enable_separate_recognition_per_channel = 12;`"
  syntax:
    content: "public abstract boolean getEnableSeparateRecognitionPerChannel()"
    return:
      type: "boolean"
      description: "The enableSeparateRecognitionPerChannel."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets()"
  id: "getEnableWordTimeOffsets()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEnableWordTimeOffsets()"
  nameWithType: "RecognitionConfigOrBuilder.getEnableWordTimeOffsets()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nIf `true`, the top result includes a list of words and\n the start and end time offsets (timestamps) for those words. If\n `false`, no word-level time offset information is returned. The default is\n `false`.\n```\n\n`bool enable_word_time_offsets = 8;`"
  syntax:
    content: "public abstract boolean getEnableWordTimeOffsets()"
    return:
      type: "boolean"
      description: "The enableWordTimeOffsets."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding()"
  id: "getEncoding()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEncoding()"
  nameWithType: "RecognitionConfigOrBuilder.getEncoding()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nEncoding of audio data sent in all `RecognitionAudio` messages.\n This field is optional for `FLAC` and `WAV` audio files and required\n for all other audio formats. For details, see [AudioEncoding][google.cloud.speech.v1.RecognitionConfig.AudioEncoding].\n```\n\n`.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;`"
  syntax:
    content: "public abstract RecognitionConfig.AudioEncoding getEncoding()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
      description: "The encoding."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue()"
  id: "getEncodingValue()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getEncodingValue()"
  nameWithType: "RecognitionConfigOrBuilder.getEncodingValue()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nEncoding of audio data sent in all `RecognitionAudio` messages.\n This field is optional for `FLAC` and `WAV` audio files and required\n for all other audio formats. For details, see [AudioEncoding][google.cloud.speech.v1.RecognitionConfig.AudioEncoding].\n```\n\n`.google.cloud.speech.v1.RecognitionConfig.AudioEncoding encoding = 1;`"
  syntax:
    content: "public abstract int getEncodingValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for encoding."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode()"
  id: "getLanguageCode()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getLanguageCode()"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCode()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nRequired. The language of the supplied audio as a\n [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.\n Example: \"en-US\".\n See [Language\n Support](https://cloud.google.com/speech-to-text/docs/languages) for a list\n of the currently supported language codes.\n```\n\n`string language_code = 3 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract String getLanguageCode()"
    return:
      type: "java.lang.String"
      description: "The languageCode."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  id: "getLanguageCodeBytes()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getLanguageCodeBytes()"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nRequired. The language of the supplied audio as a\n [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.\n Example: \"en-US\".\n See [Language\n Support](https://cloud.google.com/speech-to-text/docs/languages) for a list\n of the currently supported language codes.\n```\n\n`string language_code = 3 [(.google.api.field_behavior) = REQUIRED];`"
  syntax:
    content: "public abstract ByteString getLanguageCodeBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for languageCode."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  id: "getMaxAlternatives()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getMaxAlternatives()"
  nameWithType: "RecognitionConfigOrBuilder.getMaxAlternatives()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nMaximum number of recognition hypotheses to be returned.\n Specifically, the maximum number of `SpeechRecognitionAlternative` messages\n within each `SpeechRecognitionResult`.\n The server may return fewer than `max_alternatives`.\n Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of\n one. If omitted, will return a maximum of one.\n```\n\n`int32 max_alternatives = 4;`"
  syntax:
    content: "public abstract int getMaxAlternatives()"
    return:
      type: "int"
      description: "The maxAlternatives."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata()"
  id: "getMetadata()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "RecognitionConfigOrBuilder.getMetadata()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nMetadata regarding this request.\n```\n\n`.google.cloud.speech.v1.RecognitionMetadata metadata = 9;`"
  syntax:
    content: "public abstract RecognitionMetadata getMetadata()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionMetadata"
      description: "The metadata."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder()"
  id: "getMetadataOrBuilder()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getMetadataOrBuilder()"
  nameWithType: "RecognitionConfigOrBuilder.getMetadataOrBuilder()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nMetadata regarding this request.\n```\n\n`.google.cloud.speech.v1.RecognitionMetadata metadata = 9;`"
  syntax:
    content: "public abstract RecognitionMetadataOrBuilder getMetadataOrBuilder()"
    return:
      type: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel()"
  id: "getModel()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getModel()"
  nameWithType: "RecognitionConfigOrBuilder.getModel()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nWhich model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n <table>\n   <tr>\n     <td><b>Model</b></td>\n     <td><b>Description</b></td>\n   </tr>\n   <tr>\n     <td><code>command_and_search</code></td>\n     <td>Best for short queries such as voice commands or voice search.</td>\n   </tr>\n   <tr>\n     <td><code>phone_call</code></td>\n     <td>Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).</td>\n   </tr>\n   <tr>\n     <td><code>video</code></td>\n     <td>Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.</td>\n   </tr>\n   <tr>\n     <td><code>default</code></td>\n     <td>Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.</td>\n   </tr>\n </table>\n```\n\n`string model = 13;`"
  syntax:
    content: "public abstract String getModel()"
    return:
      type: "java.lang.String"
      description: "The model."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes()"
  id: "getModelBytes()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getModelBytes()"
  nameWithType: "RecognitionConfigOrBuilder.getModelBytes()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nWhich model to select for the given request. Select the model\n best suited to your domain to get best results. If a model is not\n explicitly specified, then we auto-select a model based on the parameters\n in the RecognitionConfig.\n <table>\n   <tr>\n     <td><b>Model</b></td>\n     <td><b>Description</b></td>\n   </tr>\n   <tr>\n     <td><code>command_and_search</code></td>\n     <td>Best for short queries such as voice commands or voice search.</td>\n   </tr>\n   <tr>\n     <td><code>phone_call</code></td>\n     <td>Best for audio that originated from a phone call (typically\n     recorded at an 8khz sampling rate).</td>\n   </tr>\n   <tr>\n     <td><code>video</code></td>\n     <td>Best for audio that originated from video or includes multiple\n         speakers. Ideally the audio is recorded at a 16khz or greater\n         sampling rate. This is a premium model that costs more than the\n         standard rate.</td>\n   </tr>\n   <tr>\n     <td><code>default</code></td>\n     <td>Best for audio that is not one of the specific audio models.\n         For example, long-form audio. Ideally the audio is high-fidelity,\n         recorded at a 16khz or greater sampling rate.</td>\n   </tr>\n </table>\n```\n\n`string model = 13;`"
  syntax:
    content: "public abstract ByteString getModelBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for model."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter()"
  id: "getProfanityFilter()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getProfanityFilter()"
  nameWithType: "RecognitionConfigOrBuilder.getProfanityFilter()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nIf set to `true`, the server will attempt to filter out\n profanities, replacing all but the initial character in each filtered word\n with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities\n won't be filtered out.\n```\n\n`bool profanity_filter = 5;`"
  syntax:
    content: "public abstract boolean getProfanityFilter()"
    return:
      type: "boolean"
      description: "The profanityFilter."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz()"
  id: "getSampleRateHertz()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSampleRateHertz()"
  nameWithType: "RecognitionConfigOrBuilder.getSampleRateHertz()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nSample rate in Hertz of the audio data sent in all\n `RecognitionAudio` messages. Valid values are: 8000-48000.\n 16000 is optimal. For best results, set the sampling rate of the audio\n source to 16000 Hz. If that's not possible, use the native sample rate of\n the audio source (instead of re-sampling).\n This field is optional for FLAC and WAV audio files, but is\n required for all other audio formats. For details, see [AudioEncoding][google.cloud.speech.v1.RecognitionConfig.AudioEncoding].\n```\n\n`int32 sample_rate_hertz = 2;`"
  syntax:
    content: "public abstract int getSampleRateHertz()"
    return:
      type: "int"
      description: "The sampleRateHertz."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts(int)"
  id: "getSpeechContexts(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContexts(int index)"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContexts(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nArray of [SpeechContext][google.cloud.speech.v1.SpeechContext].\n A means to provide context to assist the speech recognition. For more\n information, see\n [speech\n adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).\n```\n\n`repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;`"
  syntax:
    content: "public abstract SpeechContext getSpeechContexts(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContext"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount()"
  id: "getSpeechContextsCount()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContextsCount()"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsCount()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nArray of [SpeechContext][google.cloud.speech.v1.SpeechContext].\n A means to provide context to assist the speech recognition. For more\n information, see\n [speech\n adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).\n```\n\n`repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;`"
  syntax:
    content: "public abstract int getSpeechContextsCount()"
    return:
      type: "int"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList()"
  id: "getSpeechContextsList()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContextsList()"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsList()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nArray of [SpeechContext][google.cloud.speech.v1.SpeechContext].\n A means to provide context to assist the speech recognition. For more\n information, see\n [speech\n adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).\n```\n\n`repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;`"
  syntax:
    content: "public abstract List<SpeechContext> getSpeechContextsList()"
    return:
      type: "java.util.List<com.google.cloud.speech.v1.SpeechContext>"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder(int)"
  id: "getSpeechContextsOrBuilder(int)"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContextsOrBuilder(int index)"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsOrBuilder(int index)"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder(int index)"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nArray of [SpeechContext][google.cloud.speech.v1.SpeechContext].\n A means to provide context to assist the speech recognition. For more\n information, see\n [speech\n adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).\n```\n\n`repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;`"
  syntax:
    content: "public abstract SpeechContextOrBuilder getSpeechContextsOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList()"
  id: "getSpeechContextsOrBuilderList()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getSpeechContextsOrBuilderList()"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nArray of [SpeechContext][google.cloud.speech.v1.SpeechContext].\n A means to provide context to assist the speech recognition. For more\n information, see\n [speech\n adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).\n```\n\n`repeated .google.cloud.speech.v1.SpeechContext speech_contexts = 6;`"
  syntax:
    content: "public abstract List<? extends SpeechContextOrBuilder> getSpeechContextsOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.cloud.speech.v1.SpeechContextOrBuilder>"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced()"
  id: "getUseEnhanced()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "getUseEnhanced()"
  nameWithType: "RecognitionConfigOrBuilder.getUseEnhanced()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nSet to true to use an enhanced model for speech recognition.\n If `use_enhanced` is set to true and the `model` field is not set, then\n an appropriate enhanced model is chosen if an enhanced model exists for\n the audio.\n If `use_enhanced` is true and an enhanced version of the specified model\n does not exist, then the speech is recognized using the standard version\n of the specified model.\n```\n\n`bool use_enhanced = 14;`"
  syntax:
    content: "public abstract boolean getUseEnhanced()"
    return:
      type: "boolean"
      description: "The useEnhanced."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig()"
  id: "hasDiarizationConfig()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "hasDiarizationConfig()"
  nameWithType: "RecognitionConfigOrBuilder.hasDiarizationConfig()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nConfig to enable speaker diarization and set additional\n parameters to make diarization better suited for your application.\n Note: When this is enabled, we send all the words from the beginning of the\n audio for the top alternative in every consecutive STREAMING responses.\n This is done in order to improve our speaker tags as our models learn to\n identify the speakers in the conversation over time.\n For non-streaming requests, the diarization results will be provided only\n in the top alternative of the FINAL SpeechRecognitionResult.\n```\n\n`.google.cloud.speech.v1.SpeakerDiarizationConfig diarization_config = 19;`"
  syntax:
    content: "public abstract boolean hasDiarizationConfig()"
    return:
      type: "boolean"
      description: "Whether the diarizationConfig field is set."
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata()"
  id: "hasMetadata()"
  parent: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder"
  langs:
  - "java"
  name: "hasMetadata()"
  nameWithType: "RecognitionConfigOrBuilder.hasMetadata()"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata()"
  overload: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata*"
  type: "Method"
  package: "com.google.cloud.speech.v1"
  summary: "```\nMetadata regarding this request.\n```\n\n`.google.cloud.speech.v1.RecognitionMetadata metadata = 9;`"
  syntax:
    content: "public abstract boolean hasMetadata()"
    return:
      type: "boolean"
      description: "Whether the metadata field is set."
references:
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue*"
  name: "getEncodingValue"
  nameWithType: "RecognitionConfigOrBuilder.getEncodingValue"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncodingValue"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
  name: "RecognitionConfig.AudioEncoding"
  nameWithType: "RecognitionConfig.AudioEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfig.AudioEncoding"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding*"
  name: "getEncoding"
  nameWithType: "RecognitionConfigOrBuilder.getEncoding"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEncoding"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz*"
  name: "getSampleRateHertz"
  nameWithType: "RecognitionConfigOrBuilder.getSampleRateHertz"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSampleRateHertz"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount*"
  name: "getAudioChannelCount"
  nameWithType: "RecognitionConfigOrBuilder.getAudioChannelCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getAudioChannelCount"
  package: "com.google.cloud.speech.v1"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel*"
  name: "getEnableSeparateRecognitionPerChannel"
  nameWithType: "RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableSeparateRecognitionPerChannel"
  package: "com.google.cloud.speech.v1"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode*"
  name: "getLanguageCode"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCode"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCode"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes*"
  name: "getLanguageCodeBytes"
  nameWithType: "RecognitionConfigOrBuilder.getLanguageCodeBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getLanguageCodeBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives*"
  name: "getMaxAlternatives"
  nameWithType: "RecognitionConfigOrBuilder.getMaxAlternatives"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMaxAlternatives"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter*"
  name: "getProfanityFilter"
  nameWithType: "RecognitionConfigOrBuilder.getProfanityFilter"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getProfanityFilter"
  package: "com.google.cloud.speech.v1"
- uid: "java.util.List<com.google.cloud.speech.v1.SpeechContext>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/speech/v1/SpeechContext>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.speech.v1.SpeechContext"
    name: "SpeechContext"
    fullName: "com.google.cloud.speech.v1.SpeechContext"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList*"
  name: "getSpeechContextsList"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsList"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsList"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechContext"
  name: "SpeechContext"
  nameWithType: "SpeechContext"
  fullName: "com.google.cloud.speech.v1.SpeechContext"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts*"
  name: "getSpeechContexts"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContexts"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContexts"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount*"
  name: "getSpeechContextsCount"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsCount"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsCount"
  package: "com.google.cloud.speech.v1"
- uid: "java.util.List<? extends com.google.cloud.speech.v1.SpeechContextOrBuilder>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/cloud/speech/v1/SpeechContextOrBuilder>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
    name: "SpeechContextOrBuilder"
    fullName: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList*"
  name: "getSpeechContextsOrBuilderList"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilderList"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
  name: "SpeechContextOrBuilder"
  nameWithType: "SpeechContextOrBuilder"
  fullName: "com.google.cloud.speech.v1.SpeechContextOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder*"
  name: "getSpeechContextsOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder.getSpeechContextsOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getSpeechContextsOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets*"
  name: "getEnableWordTimeOffsets"
  nameWithType: "RecognitionConfigOrBuilder.getEnableWordTimeOffsets"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableWordTimeOffsets"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation*"
  name: "getEnableAutomaticPunctuation"
  nameWithType: "RecognitionConfigOrBuilder.getEnableAutomaticPunctuation"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getEnableAutomaticPunctuation"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig*"
  name: "hasDiarizationConfig"
  nameWithType: "RecognitionConfigOrBuilder.hasDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
  name: "SpeakerDiarizationConfig"
  nameWithType: "SpeakerDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.SpeakerDiarizationConfig"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig*"
  name: "getDiarizationConfig"
  nameWithType: "RecognitionConfigOrBuilder.getDiarizationConfig"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfig"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
  name: "SpeakerDiarizationConfigOrBuilder"
  nameWithType: "SpeakerDiarizationConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.SpeakerDiarizationConfigOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder*"
  name: "getDiarizationConfigOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getDiarizationConfigOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata*"
  name: "hasMetadata"
  nameWithType: "RecognitionConfigOrBuilder.hasMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.hasMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionMetadata"
  name: "RecognitionMetadata"
  nameWithType: "RecognitionMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionMetadata"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata*"
  name: "getMetadata"
  nameWithType: "RecognitionConfigOrBuilder.getMetadata"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadata"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
  name: "RecognitionMetadataOrBuilder"
  nameWithType: "RecognitionMetadataOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionMetadataOrBuilder"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder*"
  name: "getMetadataOrBuilder"
  nameWithType: "RecognitionConfigOrBuilder.getMetadataOrBuilder"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getMetadataOrBuilder"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel*"
  name: "getModel"
  nameWithType: "RecognitionConfigOrBuilder.getModel"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModel"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes*"
  name: "getModelBytes"
  nameWithType: "RecognitionConfigOrBuilder.getModelBytes"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getModelBytes"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced*"
  name: "getUseEnhanced"
  nameWithType: "RecognitionConfigOrBuilder.getUseEnhanced"
  fullName: "com.google.cloud.speech.v1.RecognitionConfigOrBuilder.getUseEnhanced"
  package: "com.google.cloud.speech.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
  name: "? extends SpeechContextOrBuilder"
  nameWithType: "? extends SpeechContextOrBuilder"
  fullName: "? extends com.google.cloud.speech.v1.SpeechContextOrBuilder"
