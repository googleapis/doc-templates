### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::Product
  children: 
  - Google::Cloud::Vision::V1::Product#description(instance)
  - Google::Cloud::Vision::V1::Product#description=(instance)
  - Google::Cloud::Vision::V1::Product#display_name(instance)
  - Google::Cloud::Vision::V1::Product#display_name=(instance)
  - Google::Cloud::Vision::V1::Product#name(instance)
  - Google::Cloud::Vision::V1::Product#name=(instance)
  - Google::Cloud::Vision::V1::Product#product_category(instance)
  - Google::Cloud::Vision::V1::Product#product_category=(instance)
  - Google::Cloud::Vision::V1::Product#product_labels(instance)
  - Google::Cloud::Vision::V1::Product#product_labels=(instance)
  - Google::Cloud::Vision::V1::Product::KeyValue
  fullName: Google::Cloud::Vision::V1::Product
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: Product
  summary: "A Product contains ReferenceImages."
  type: "class"
  name: Google::Cloud::Vision::V1::Product
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::Product#description(instance)
  fullName: Google::Cloud::Vision::V1::Product#description
  name: "#description"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#description"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def description() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#description=(instance)
  fullName: Google::Cloud::Vision::V1::Product#description=
  name: "#description="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#description="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def description=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#display_name(instance)
  fullName: Google::Cloud::Vision::V1::Product#display_name
  name: "#display_name"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#display_name"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def display_name() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#display_name=(instance)
  fullName: Google::Cloud::Vision::V1::Product#display_name=
  name: "#display_name="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#display_name="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def display_name=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#name(instance)
  fullName: Google::Cloud::Vision::V1::Product#name
  name: "#name"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#name"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def name() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The resource name of the product.</p>\n\n<p>Format is:\n<code>projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID</code>.</p>\n\n<p>This field is ignored when creating a product."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#name=(instance)
  fullName: Google::Cloud::Vision::V1::Product#name=
  name: "#name="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#name="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def name=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — The resource name of the product.</p>\n\n<p>Format is:\n<code>projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID</code>.</p>\n\n<p>This field is ignored when creating a product."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The resource name of the product.</p>\n\n<p>Format is:\n<code>projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID</code>.</p>\n\n<p>This field is ignored when creating a product."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#product_category(instance)
  fullName: Google::Cloud::Vision::V1::Product#product_category
  name: "#product_category"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#product_category"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_category() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Immutable. The category for the product identified by the reference image. This should\nbe one of &quot;homegoods-v2&quot;, &quot;apparel-v2&quot;, &quot;toys-v2&quot;, &quot;packagedgoods-v1&quot; or\n&quot;general-v1&quot;. The legacy categories &quot;homegoods&quot;, &quot;apparel&quot;, and &quot;toys&quot; are\nstill supported, but these should not be used for new products."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#product_category=(instance)
  fullName: Google::Cloud::Vision::V1::Product#product_category=
  name: "#product_category="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#product_category="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_category=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — Immutable. The category for the product identified by the reference image. This should\nbe one of &quot;homegoods-v2&quot;, &quot;apparel-v2&quot;, &quot;toys-v2&quot;, &quot;packagedgoods-v1&quot; or\n&quot;general-v1&quot;. The legacy categories &quot;homegoods&quot;, &quot;apparel&quot;, and &quot;toys&quot; are\nstill supported, but these should not be used for new products."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Immutable. The category for the product identified by the reference image. This should\nbe one of &quot;homegoods-v2&quot;, &quot;apparel-v2&quot;, &quot;toys-v2&quot;, &quot;packagedgoods-v1&quot; or\n&quot;general-v1&quot;. The legacy categories &quot;homegoods&quot;, &quot;apparel&quot;, and &quot;toys&quot; are\nstill supported, but these should not be used for new products."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#product_labels(instance)
  fullName: Google::Cloud::Vision::V1::Product#product_labels
  name: "#product_labels"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#product_labels"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_labels() -> ::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Product-KeyValue\">::Google::Cloud::Vision::V1::Product::KeyValue</a>&gt;) — Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.</p>\n\n<p>Note that integer values can be provided as strings, e.g. &quot;1199&quot;. Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.</p>\n\n<p>Multiple values can be assigned to the same key. One product may have up to\n500 product_labels.</p>\n\n<p>Notice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
    raises: []
- uid: Google::Cloud::Vision::V1::Product#product_labels=(instance)
  fullName: Google::Cloud::Vision::V1::Product#product_labels=
  name: "#product_labels="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#product_labels="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_labels=(value) -> ::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Product-KeyValue\">::Google::Cloud::Vision::V1::Product::KeyValue</a>&gt;) — Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.</p>\n\n<p>Note that integer values can be provided as strings, e.g. &quot;1199&quot;. Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.</p>\n\n<p>Multiple values can be assigned to the same key. One product may have up to\n500 product_labels.</p>\n\n<p>Notice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Product-KeyValue\">::Google::Cloud::Vision::V1::Product::KeyValue</a>&gt;) — Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.</p>\n\n<p>Note that integer values can be provided as strings, e.g. &quot;1199&quot;. Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.</p>\n\n<p>Multiple values can be assigned to the same key. One product may have up to\n500 product_labels.</p>\n\n<p>Notice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
    raises: []
references:
- uid: Google::Cloud::Vision::V1::Product::KeyValue
  fullName: Google::Cloud::Vision::V1::Product::KeyValue
  name: KeyValue
  module: google-cloud-vision-v1
  id: KeyValue
  summary: "A product label represented as a key-value pair."
  parent: Google::Cloud::Vision::V1::Product