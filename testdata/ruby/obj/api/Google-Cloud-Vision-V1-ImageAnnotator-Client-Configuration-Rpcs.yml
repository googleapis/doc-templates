### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
    children: 
      - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images
      - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files
      - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images
      - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: Rpcs
    summary: "Configuration RPC class for the ImageAnnotator API.\n\nIncludes fields providing the configuration for each RPC in this service.\nEach configuration object is of type `Gapic::Config::Method` and includes\nthe following configuration fields:\n\n *  `timeout` (*type:* `Numeric`) - The call timeout in seconds\n *  `metadata` (*type:* `Hash{Symbol=>String}`) - Additional gRPC headers\n *  `retry_policy (*type:* `Hash`) - The retry policy. The policy fields\n    include the following keys:\n     *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.\n     *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.\n     *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.\n     *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should\n        trigger a retry."
    type: "class"
    name: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images
    name: "#batch_annotate_images"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#batch_annotate_images"
    summary: "RPC-specific configuration for `batch_annotate_images`"
    type: method
    syntax:
      description: "RPC-specific configuration for `batch_annotate_images`"
      content: "#batch_annotate_images => ::Gapic::Config::Method"
      parameters:
        []
      return:
          type:
            - "::Gapic::Config::Method"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files
    name: "#batch_annotate_files"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#batch_annotate_files"
    summary: "RPC-specific configuration for `batch_annotate_files`"
    type: method
    syntax:
      description: "RPC-specific configuration for `batch_annotate_files`"
      content: "#batch_annotate_files => ::Gapic::Config::Method"
      parameters:
        []
      return:
          type:
            - "::Gapic::Config::Method"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images
    name: "#async_batch_annotate_images"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#async_batch_annotate_images"
    summary: "RPC-specific configuration for `async_batch_annotate_images`"
    type: method
    syntax:
      description: "RPC-specific configuration for `async_batch_annotate_images`"
      content: "#async_batch_annotate_images => ::Gapic::Config::Method"
      parameters:
        []
      return:
          type:
            - "::Gapic::Config::Method"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files
    name: "#async_batch_annotate_files"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#async_batch_annotate_files"
    summary: "RPC-specific configuration for `async_batch_annotate_files`"
    type: method
    syntax:
      description: "RPC-specific configuration for `async_batch_annotate_files`"
      content: "#async_batch_annotate_files => ::Gapic::Config::Method"
      parameters:
        []
      return:
          type:
            - "::Gapic::Config::Method"
references: []
