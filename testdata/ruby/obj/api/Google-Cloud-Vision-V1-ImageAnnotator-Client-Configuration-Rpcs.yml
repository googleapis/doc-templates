### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
  children: 
  - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images(instance)
  - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files(instance)
  - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images(instance)
  - Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files(instance)
  fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: Rpcs
  summary: "Configuration RPC class for the ImageAnnotator API.\n\nIncludes fields providing the configuration for each RPC in this service.\nEach configuration object is of type <code>Gapic::Config::Method</code> and includes\nthe following configuration fields:\n\n *  <code>timeout</code> (&#42;type:&#42; <code>Numeric</code>) - The call timeout in seconds\n *  <code>metadata</code> (&#42;type:&#42; <code>Hash{Symbol=>String}</code>) - Additional gRPC headers\n *  <code>retry_policy (&#42;type:&#42; </code>Hash<code>) - The retry policy. The policy fields\n    include the following keys:\n     &#42;  </code>:initial_delay<code> (&#42;type:&#42; </code>Numeric<code>) - The initial delay in seconds.\n     &#42;  </code>:max_delay<code> (&#42;type:&#42; </code>Numeric<code>) - The max delay in seconds.\n     &#42;  </code>:multiplier<code> (*type:* </code>Numeric<code>) - The incremental backoff multiplier.\n     &#42;  </code>:retry_codes<code> (*type:* </code>Array<String><code>) - The error codes that should\n        trigger a retry."
  type: "class"
  name: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs
  example: []
  inherits:
  - "Object"
- uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images(instance)
  fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_images
  name: "#batch_annotate_images"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#batch_annotate_images"
  summary: "RPC-specific configuration for <code>batch_annotate_images</code>"
  type: method
  example: []
  syntax:
    description: "RPC-specific configuration for <code>batch_annotate_images</code>"
    content: "def batch_annotate_images => ::Gapic::Config::Method"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Gapic::Config::Method)"
    raises: []
- uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files(instance)
  fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#batch_annotate_files
  name: "#batch_annotate_files"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#batch_annotate_files"
  summary: "RPC-specific configuration for <code>batch_annotate_files</code>"
  type: method
  example: []
  syntax:
    description: "RPC-specific configuration for <code>batch_annotate_files</code>"
    content: "def batch_annotate_files => ::Gapic::Config::Method"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Gapic::Config::Method)"
    raises: []
- uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images(instance)
  fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_images
  name: "#async_batch_annotate_images"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#async_batch_annotate_images"
  summary: "RPC-specific configuration for <code>async_batch_annotate_images</code>"
  type: method
  example: []
  syntax:
    description: "RPC-specific configuration for <code>async_batch_annotate_images</code>"
    content: "def async_batch_annotate_images => ::Gapic::Config::Method"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Gapic::Config::Method)"
    raises: []
- uid: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files(instance)
  fullName: Google::Cloud::Vision::V1::ImageAnnotator::Client::Configuration::Rpcs#async_batch_annotate_files
  name: "#async_batch_annotate_files"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#async_batch_annotate_files"
  summary: "RPC-specific configuration for <code>async_batch_annotate_files</code>"
  type: method
  example: []
  syntax:
    description: "RPC-specific configuration for <code>async_batch_annotate_files</code>"
    content: "def async_batch_annotate_files => ::Gapic::Config::Method"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Gapic::Config::Method)"
    raises: []
references: []