### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::ImportProductSetsGcsSource
  children: 
  - Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri(instance)
  - Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri=(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsGcsSource
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: ImportProductSetsGcsSource
  summary: "The Google Cloud Storage location for a csv file which preserves a list of\nImportProductSetRequests in each line."
  type: "class"
  name: Google::Cloud::Vision::V1::ImportProductSetsGcsSource
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri
  name: "#csv_file_uri"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#csv_file_uri"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def csv_file_uri() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The Google Cloud Storage URI of the input csv file.</p>\n\n<p>The URI must start with <code>gs://</code>.</p>\n\n<p>The format of the input csv file should be one image per line.\nIn each line, there are 8 columns.</p>\n\n<ol>\n<li> image-uri</li>\n<li> image-id</li>\n<li> product-set-id</li>\n<li> product-id</li>\n<li> product-category</li>\n<li> product-display-name</li>\n<li> labels</li>\n<li> bounding-poly</li>\n</ol>\n\n<p>The <code>image-uri</code>, <code>product-set-id</code>, <code>product-id</code>, and <code>product-category</code>\ncolumns are required. All other columns are optional.</p>\n\n<p>If the <code>ProductSet</code> or <code>Product</code> specified by the <code>product-set-id</code> and\n<code>product-id</code> values does not exist, then the system will create a new\n<code>ProductSet</code> or <code>Product</code> for the image. In this case, the\n<code>product-display-name</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span>, the\n<code>product-category</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_category_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_category (method)\">product&lowbar;category</a></span>, and the\n<code>labels</code> column refers to <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_labels_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_labels (method)\">product&lowbar;labels</a></span>.</p>\n\n<p>The <code>image-id</code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.</p>\n\n<p>The <code>product-display-name</code> column is optional. If it is empty, the system\nsets the <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span> field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name</code> later by using the API.</p>\n\n<p>If a <code>Product</code> with the specified <code>product-id</code> already exists, then the\nsystem ignores the <code>product-display-name</code>, <code>product-category</code>, and <code>labels</code>\ncolumns.</p>\n\n<p>The <code>labels</code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:</p>\n\n<pre><code>&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\n</code></pre>\n\n<p>The <code>bounding-poly</code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage</code>. If\nyou do not specify the <code>bounding-poly</code> column, then the system will try to\ndetect regions of interest automatically.</p>\n\n<p>At most one <code>bounding-poly</code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly</code> values for\neach region of interest.</p>\n\n<p>The <code>bounding-poly</code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.</p>\n\n<p>The system will resize the image if the image resolution is too\nlarge to process (larger than 20MP)."
    raises: []
- uid: Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri=(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsGcsSource#csv_file_uri=
  name: "#csv_file_uri="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#csv_file_uri="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def csv_file_uri=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — The Google Cloud Storage URI of the input csv file.</p>\n\n<p>The URI must start with <code>gs://</code>.</p>\n\n<p>The format of the input csv file should be one image per line.\nIn each line, there are 8 columns.</p>\n\n<ol>\n<li> image-uri</li>\n<li> image-id</li>\n<li> product-set-id</li>\n<li> product-id</li>\n<li> product-category</li>\n<li> product-display-name</li>\n<li> labels</li>\n<li> bounding-poly</li>\n</ol>\n\n<p>The <code>image-uri</code>, <code>product-set-id</code>, <code>product-id</code>, and <code>product-category</code>\ncolumns are required. All other columns are optional.</p>\n\n<p>If the <code>ProductSet</code> or <code>Product</code> specified by the <code>product-set-id</code> and\n<code>product-id</code> values does not exist, then the system will create a new\n<code>ProductSet</code> or <code>Product</code> for the image. In this case, the\n<code>product-display-name</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span>, the\n<code>product-category</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_category_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_category (method)\">product&lowbar;category</a></span>, and the\n<code>labels</code> column refers to <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_labels_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_labels (method)\">product&lowbar;labels</a></span>.</p>\n\n<p>The <code>image-id</code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.</p>\n\n<p>The <code>product-display-name</code> column is optional. If it is empty, the system\nsets the <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span> field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name</code> later by using the API.</p>\n\n<p>If a <code>Product</code> with the specified <code>product-id</code> already exists, then the\nsystem ignores the <code>product-display-name</code>, <code>product-category</code>, and <code>labels</code>\ncolumns.</p>\n\n<p>The <code>labels</code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:</p>\n\n<pre><code>&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\n</code></pre>\n\n<p>The <code>bounding-poly</code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage</code>. If\nyou do not specify the <code>bounding-poly</code> column, then the system will try to\ndetect regions of interest automatically.</p>\n\n<p>At most one <code>bounding-poly</code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly</code> values for\neach region of interest.</p>\n\n<p>The <code>bounding-poly</code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.</p>\n\n<p>The system will resize the image if the image resolution is too\nlarge to process (larger than 20MP)."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The Google Cloud Storage URI of the input csv file.</p>\n\n<p>The URI must start with <code>gs://</code>.</p>\n\n<p>The format of the input csv file should be one image per line.\nIn each line, there are 8 columns.</p>\n\n<ol>\n<li> image-uri</li>\n<li> image-id</li>\n<li> product-set-id</li>\n<li> product-id</li>\n<li> product-category</li>\n<li> product-display-name</li>\n<li> labels</li>\n<li> bounding-poly</li>\n</ol>\n\n<p>The <code>image-uri</code>, <code>product-set-id</code>, <code>product-id</code>, and <code>product-category</code>\ncolumns are required. All other columns are optional.</p>\n\n<p>If the <code>ProductSet</code> or <code>Product</code> specified by the <code>product-set-id</code> and\n<code>product-id</code> values does not exist, then the system will create a new\n<code>ProductSet</code> or <code>Product</code> for the image. In this case, the\n<code>product-display-name</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span>, the\n<code>product-category</code> column refers to\n<span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_category_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_category (method)\">product&lowbar;category</a></span>, and the\n<code>labels</code> column refers to <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_product_labels_instance_\" title=\"Google::Cloud::Vision::V1::Product#product_labels (method)\">product&lowbar;labels</a></span>.</p>\n\n<p>The <code>image-id</code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.</p>\n\n<p>The <code>product-display-name</code> column is optional. If it is empty, the system\nsets the <span class='object_link'><a href=\"Google-Cloud-Vision-V1-Product#Google__Cloud__Vision__V1__Product_display_name_instance_\" title=\"Google::Cloud::Vision::V1::Product#display_name (method)\">display&lowbar;name</a></span> field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name</code> later by using the API.</p>\n\n<p>If a <code>Product</code> with the specified <code>product-id</code> already exists, then the\nsystem ignores the <code>product-display-name</code>, <code>product-category</code>, and <code>labels</code>\ncolumns.</p>\n\n<p>The <code>labels</code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:</p>\n\n<pre><code>&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\n</code></pre>\n\n<p>The <code>bounding-poly</code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage</code>. If\nyou do not specify the <code>bounding-poly</code> column, then the system will try to\ndetect regions of interest automatically.</p>\n\n<p>At most one <code>bounding-poly</code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly</code> values for\neach region of interest.</p>\n\n<p>The <code>bounding-poly</code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.</p>\n\n<p>The system will resize the image if the image resolution is too\nlarge to process (larger than 20MP)."
    raises: []
references: []