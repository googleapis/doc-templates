### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::WebDetectionParams
  children: 
  - Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results(instance)
  - Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results=(instance)
  fullName: Google::Cloud::Vision::V1::WebDetectionParams
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: WebDetectionParams
  summary: "Parameters for web detection request."
  type: "class"
  name: Google::Cloud::Vision::V1::WebDetectionParams
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results(instance)
  fullName: Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results
  name: "#include_geo_results"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#include_geo_results"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def include_geo_results() -> ::Boolean"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Boolean) — Whether to include results derived from the geo information in the image."
    raises: []
- uid: Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results=(instance)
  fullName: Google::Cloud::Vision::V1::WebDetectionParams#include_geo_results=
  name: "#include_geo_results="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#include_geo_results="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def include_geo_results=(value) -> ::Boolean"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Boolean) — Whether to include results derived from the geo information in the image."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Boolean) — Whether to include results derived from the geo information in the image."
    raises: []
references: []