### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest
  children: 
  - Google::Cloud::Vision::V1::CreateProductSetRequest#parent(instance)
  - Google::Cloud::Vision::V1::CreateProductSetRequest#parent=(instance)
  - Google::Cloud::Vision::V1::CreateProductSetRequest#product_set(instance)
  - Google::Cloud::Vision::V1::CreateProductSetRequest#product_set=(instance)
  - Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id(instance)
  - Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id=(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest
  langs:
  - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: CreateProductSetRequest
  summary: "Request message for the <code>CreateProductSet</code> method."
  type: "class"
  name: Google::Cloud::Vision::V1::CreateProductSetRequest
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#parent(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#parent
  name: "#parent"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#parent"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def parent() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Required. The project in which the ProductSet should be created.</p>\n\n<p>Format is <code>projects/PROJECT_ID/locations/LOC_ID</code>."
    raises: []
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#parent=(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#parent=
  name: "#parent="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#parent="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def parent=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — Required. The project in which the ProductSet should be created.</p>\n\n<p>Format is <code>projects/PROJECT_ID/locations/LOC_ID</code>."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Required. The project in which the ProductSet should be created.</p>\n\n<p>Format is <code>projects/PROJECT_ID/locations/LOC_ID</code>."
    raises: []
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set
  name: "#product_set"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#product_set"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_set() -> ::Google::Cloud::Vision::V1::ProductSet"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-ProductSet\">::Google::Cloud::Vision::V1::ProductSet</a>) — Required. The ProductSet to create."
    raises: []
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set=(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set=
  name: "#product_set="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#product_set="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_set=(value) -> ::Google::Cloud::Vision::V1::ProductSet"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-ProductSet\">::Google::Cloud::Vision::V1::ProductSet</a>) — Required. The ProductSet to create."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-ProductSet\">::Google::Cloud::Vision::V1::ProductSet</a>) — Required. The ProductSet to create."
    raises: []
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id
  name: "#product_set_id"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#product_set_id"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_set_id() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — A user-supplied resource id for this ProductSet. If set, the server will\nattempt to use this value as the resource id. If it is already in use, an\nerror is returned with code ALREADY_EXISTS. Must be at most 128 characters\nlong. It cannot contain the character <code>/</code>."
    raises: []
- uid: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id=(instance)
  fullName: Google::Cloud::Vision::V1::CreateProductSetRequest#product_set_id=
  name: "#product_set_id="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#product_set_id="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def product_set_id=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — A user-supplied resource id for this ProductSet. If set, the server will\nattempt to use this value as the resource id. If it is already in use, an\nerror is returned with code ALREADY_EXISTS. Must be at most 128 characters\nlong. It cannot contain the character <code>/</code>."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — A user-supplied resource id for this ProductSet. If set, the server will\nattempt to use this value as the resource id. If it is already in use, an\nerror is returned with code ALREADY_EXISTS. Must be at most 128 characters\nlong. It cannot contain the character <code>/</code>."
    raises: []
references: []