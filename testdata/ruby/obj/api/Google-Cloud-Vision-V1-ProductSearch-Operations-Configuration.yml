### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration
  children: 
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#rpcs(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout=(instance)
  - Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration::Rpcs
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration
  langs:
  - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: Configuration
  summary: "Configuration class for the Operations API.</p>\n\n<p>This class represents the configuration for Operations,\nproviding control over timeouts, retry behavior, logging, transport\nparameters, and other low-level controls. Certain parameters can also be\napplied individually to specific RPCs. See\nLongrunning::Operations::Client::Configuration::Rpcs\nfor a list of RPCs that can be configured independently.</p>\n\n<p>Configuration can be applied globally to all clients, or to a single client\non construction."
  type: "class"
  name: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration
  example:     
    - "<pre class=\"prettyprint lang-rb\">\n# Modify the global config, setting the timeout for\n# list_operations to 20 seconds,\n# and all remaining timeouts to 10 seconds.\n::Google::Longrunning::Operations::Client.configure do |config|\n  config.timeout = 10.0\n  config.rpcs.list_operations.timeout = 20.0\nend\n\n# Apply the above configuration only to a new client.\nclient = ::Google::Longrunning::Operations::Client.new do |config|\n  config.timeout = 10.0\n  config.rpcs.list_operations.timeout = 20.0\nend</pre>"
  inherits:
  - "Object"
  extendedBy:
  - "Gapic::Config"
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args
  name: "#channel_args"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#channel_args"
  summary: "Extra parameters passed to the gRPC channel. Note: this is ignored if a\n<code>GRPC::Core::Channel</code> object is provided as the credential."
  type: method
  example: []
  syntax:
    description: "Extra parameters passed to the gRPC channel. Note: this is ignored if a\n<code>GRPC::Core::Channel</code> object is provided as the credential."
    content: "def channel_args() -> ::Hash"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#channel_args=
  name: "#channel_args="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#channel_args="
  summary: "Extra parameters passed to the gRPC channel. Note: this is ignored if a\n<code>GRPC::Core::Channel</code> object is provided as the credential."
  type: method
  example: []
  syntax:
    description: "Extra parameters passed to the gRPC channel. Note: this is ignored if a\n<code>GRPC::Core::Channel</code> object is provided as the credential."
    content: "def channel_args=(value) -> ::Hash"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Hash)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials
  name: "#credentials"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#credentials"
  summary: "<p>Credentials to send with calls. You may provide any of the following types:</p>\n\n<ul>\n<li> (<code>String</code>) The path to a service account key file in JSON format</li>\n<li> (<code>Hash</code>) A service account key as a Hash</li>\n<li> (<code>Google::Auth::Credentials</code>) A googleauth credentials object\n(see the <a href=\"https://googleapis.dev/ruby/googleauth/latest/index.html\">googleauth docs</a>)</li>\n<li> (<code>Signet::OAuth2::Client</code>) A signet oauth2 client object\n(see the <a href=\"https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html\">signet docs</a>)</li>\n<li> (<code>GRPC::Core::Channel</code>) a gRPC channel with included credentials</li>\n<li> (<code>GRPC::Core::ChannelCredentials</code>) a gRPC credentails object</li>\n<li> (<code>nil</code>) indicating no credentials</li>\n</ul>"
  type: method
  example: []
  syntax:
    description: "<p>Credentials to send with calls. You may provide any of the following types:</p>\n\n<ul>\n<li> (<code>String</code>) The path to a service account key file in JSON format</li>\n<li> (<code>Hash</code>) A service account key as a Hash</li>\n<li> (<code>Google::Auth::Credentials</code>) A googleauth credentials object\n(see the <a href=\"https://googleapis.dev/ruby/googleauth/latest/index.html\">googleauth docs</a>)</li>\n<li> (<code>Signet::OAuth2::Client</code>) A signet oauth2 client object\n(see the <a href=\"https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html\">signet docs</a>)</li>\n<li> (<code>GRPC::Core::Channel</code>) a gRPC channel with included credentials</li>\n<li> (<code>GRPC::Core::ChannelCredentials</code>) a gRPC credentails object</li>\n<li> (<code>nil</code>) indicating no credentials</li>\n</ul>"
    content: "def credentials() -> ::Object"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Object)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#credentials=
  name: "#credentials="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#credentials="
  summary: "<p>Credentials to send with calls. You may provide any of the following types:</p>\n\n<ul>\n<li> (<code>String</code>) The path to a service account key file in JSON format</li>\n<li> (<code>Hash</code>) A service account key as a Hash</li>\n<li> (<code>Google::Auth::Credentials</code>) A googleauth credentials object\n(see the <a href=\"https://googleapis.dev/ruby/googleauth/latest/index.html\">googleauth docs</a>)</li>\n<li> (<code>Signet::OAuth2::Client</code>) A signet oauth2 client object\n(see the <a href=\"https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html\">signet docs</a>)</li>\n<li> (<code>GRPC::Core::Channel</code>) a gRPC channel with included credentials</li>\n<li> (<code>GRPC::Core::ChannelCredentials</code>) a gRPC credentails object</li>\n<li> (<code>nil</code>) indicating no credentials</li>\n</ul>"
  type: method
  example: []
  syntax:
    description: "<p>Credentials to send with calls. You may provide any of the following types:</p>\n\n<ul>\n<li> (<code>String</code>) The path to a service account key file in JSON format</li>\n<li> (<code>Hash</code>) A service account key as a Hash</li>\n<li> (<code>Google::Auth::Credentials</code>) A googleauth credentials object\n(see the <a href=\"https://googleapis.dev/ruby/googleauth/latest/index.html\">googleauth docs</a>)</li>\n<li> (<code>Signet::OAuth2::Client</code>) A signet oauth2 client object\n(see the <a href=\"https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html\">signet docs</a>)</li>\n<li> (<code>GRPC::Core::Channel</code>) a gRPC channel with included credentials</li>\n<li> (<code>GRPC::Core::ChannelCredentials</code>) a gRPC credentails object</li>\n<li> (<code>nil</code>) indicating no credentials</li>\n</ul>"
    content: "def credentials=(value) -> ::Object"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Object)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Object)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint
  name: "#endpoint"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#endpoint"
  summary: "The hostname or hostname:port of the service endpoint.\nDefaults to <code>&quot;vision.googleapis.com&quot;</code>."
  type: method
  example: []
  syntax:
    description: "The hostname or hostname:port of the service endpoint.\nDefaults to <code>&quot;vision.googleapis.com&quot;</code>."
    content: "def endpoint() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#endpoint=
  name: "#endpoint="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#endpoint="
  summary: "The hostname or hostname:port of the service endpoint.\nDefaults to <code>&quot;vision.googleapis.com&quot;</code>."
  type: method
  example: []
  syntax:
    description: "The hostname or hostname:port of the service endpoint.\nDefaults to <code>&quot;vision.googleapis.com&quot;</code>."
    content: "def endpoint=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors
  name: "#interceptors"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#interceptors"
  summary: "An array of interceptors that are run before calls are executed."
  type: method
  example: []
  syntax:
    description: "An array of interceptors that are run before calls are executed."
    content: "def interceptors() -> ::Array<::GRPC::ClientInterceptor>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::GRPC::ClientInterceptor&gt;)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#interceptors=
  name: "#interceptors="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#interceptors="
  summary: "An array of interceptors that are run before calls are executed."
  type: method
  example: []
  syntax:
    description: "An array of interceptors that are run before calls are executed."
    content: "def interceptors=(value) -> ::Array<::GRPC::ClientInterceptor>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;::GRPC::ClientInterceptor&gt;)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::GRPC::ClientInterceptor&gt;)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name
  name: "#lib_name"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#lib_name"
  summary: "The library name as recorded in instrumentation and logging"
  type: method
  example: []
  syntax:
    description: "The library name as recorded in instrumentation and logging"
    content: "def lib_name() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_name=
  name: "#lib_name="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#lib_name="
  summary: "The library name as recorded in instrumentation and logging"
  type: method
  example: []
  syntax:
    description: "The library name as recorded in instrumentation and logging"
    content: "def lib_name=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version
  name: "#lib_version"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#lib_version"
  summary: "The library version as recorded in instrumentation and logging"
  type: method
  example: []
  syntax:
    description: "The library version as recorded in instrumentation and logging"
    content: "def lib_version() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#lib_version=
  name: "#lib_version="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#lib_version="
  summary: "The library version as recorded in instrumentation and logging"
  type: method
  example: []
  syntax:
    description: "The library version as recorded in instrumentation and logging"
    content: "def lib_version=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata
  name: "#metadata"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#metadata"
  summary: "Additional gRPC headers to be sent with the call."
  type: method
  example: []
  syntax:
    description: "Additional gRPC headers to be sent with the call."
    content: "def metadata() -> ::Hash{::Symbol=>::String}"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash{::Symbol=&gt;::String})"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#metadata=
  name: "#metadata="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#metadata="
  summary: "Additional gRPC headers to be sent with the call."
  type: method
  example: []
  syntax:
    description: "Additional gRPC headers to be sent with the call."
    content: "def metadata=(value) -> ::Hash{::Symbol=>::String}"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Hash{::Symbol=&gt;::String})"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash{::Symbol=&gt;::String})"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project
  name: "#quota_project"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#quota_project"
  summary: "A separate project against which to charge quota."
  type: method
  example: []
  syntax:
    description: "A separate project against which to charge quota."
    content: "def quota_project() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#quota_project=
  name: "#quota_project="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#quota_project="
  summary: "A separate project against which to charge quota."
  type: method
  example: []
  syntax:
    description: "A separate project against which to charge quota."
    content: "def quota_project=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy
  name: "#retry_policy"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#retry_policy"
  summary: "<p>The retry policy. The value is a hash with the following keys:</p>\n\n<ul>\n<li> <code>:initial_delay</code> (<em>type:</em> <code>Numeric</code>) - The initial delay in seconds.</li>\n<li> <code>:max_delay</code> (<em>type:</em> <code>Numeric</code>) - The max delay in seconds.</li>\n<li> <code>:multiplier</code> (<em>type:</em> <code>Numeric</code>) - The incremental backoff multiplier.</li>\n<li> <code>:retry_codes</code> (<em>type:</em> <code>Array&lt;String&gt;</code>) - The error codes that should\ntrigger a retry.</li>\n</ul>"
  type: method
  example: []
  syntax:
    description: "<p>The retry policy. The value is a hash with the following keys:</p>\n\n<ul>\n<li> <code>:initial_delay</code> (<em>type:</em> <code>Numeric</code>) - The initial delay in seconds.</li>\n<li> <code>:max_delay</code> (<em>type:</em> <code>Numeric</code>) - The max delay in seconds.</li>\n<li> <code>:multiplier</code> (<em>type:</em> <code>Numeric</code>) - The incremental backoff multiplier.</li>\n<li> <code>:retry_codes</code> (<em>type:</em> <code>Array&lt;String&gt;</code>) - The error codes that should\ntrigger a retry.</li>\n</ul>"
    content: "def retry_policy() -> ::Hash"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#retry_policy=
  name: "#retry_policy="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#retry_policy="
  summary: "<p>The retry policy. The value is a hash with the following keys:</p>\n\n<ul>\n<li> <code>:initial_delay</code> (<em>type:</em> <code>Numeric</code>) - The initial delay in seconds.</li>\n<li> <code>:max_delay</code> (<em>type:</em> <code>Numeric</code>) - The max delay in seconds.</li>\n<li> <code>:multiplier</code> (<em>type:</em> <code>Numeric</code>) - The incremental backoff multiplier.</li>\n<li> <code>:retry_codes</code> (<em>type:</em> <code>Array&lt;String&gt;</code>) - The error codes that should\ntrigger a retry.</li>\n</ul>"
  type: method
  example: []
  syntax:
    description: "<p>The retry policy. The value is a hash with the following keys:</p>\n\n<ul>\n<li> <code>:initial_delay</code> (<em>type:</em> <code>Numeric</code>) - The initial delay in seconds.</li>\n<li> <code>:max_delay</code> (<em>type:</em> <code>Numeric</code>) - The max delay in seconds.</li>\n<li> <code>:multiplier</code> (<em>type:</em> <code>Numeric</code>) - The incremental backoff multiplier.</li>\n<li> <code>:retry_codes</code> (<em>type:</em> <code>Array&lt;String&gt;</code>) - The error codes that should\ntrigger a retry.</li>\n</ul>"
    content: "def retry_policy=(value) -> ::Hash"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Hash)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Hash)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#rpcs(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#rpcs
  name: "#rpcs"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#rpcs"
  summary: "Configurations for individual RPCs"
  type: method
  example: []
  syntax:
    description: "Configurations for individual RPCs"
    content: "def rpcs() -> Rpcs"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-ProductSearch-Operations-Configuration-Rpcs\">Rpcs</a>)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope
  name: "#scope"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#scope"
  summary: "The OAuth scopes"
  type: method
  example: []
  syntax:
    description: "The OAuth scopes"
    content: "def scope() -> ::Array<::String>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::String&gt;)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#scope=
  name: "#scope="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#scope="
  summary: "The OAuth scopes"
  type: method
  example: []
  syntax:
    description: "The OAuth scopes"
    content: "def scope=(value) -> ::Array<::String>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;::String&gt;)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::String&gt;)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout
  name: "#timeout"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#timeout"
  summary: "The call timeout in seconds."
  type: method
  example: []
  syntax:
    description: "The call timeout in seconds."
    content: "def timeout() -> ::Numeric"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Numeric)"
    raises: []
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout=(instance)
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration#timeout=
  name: "#timeout="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#timeout="
  summary: "The call timeout in seconds."
  type: method
  example: []
  syntax:
    description: "The call timeout in seconds."
    content: "def timeout=(value) -> ::Numeric"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Numeric)"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Numeric)"
    raises: []
references:
- uid: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration::Rpcs
  fullName: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration::Rpcs
  name: Rpcs
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: Rpcs
  summary: "<p>Configuration RPC class for the Operations API.</p>\n\n<p>Includes fields providing the configuration for each RPC in this service.\nEach configuration object is of type <code>Gapic::Config::Method</code> and includes\nthe following configuration fields:</p>\n\n<ul>\n<li> <code>timeout</code> (<em>type:</em> <code>Numeric</code>) - The call timeout in seconds</li>\n<li> <code>metadata</code> (<em>type:</em> <code>Hash{Symbol=&gt;String}</code>) - Additional gRPC headers</li>\n<li> <code>retry_policy (*type:*</code>Hash`) - The retry policy. The policy fields\ninclude the following keys:\n\n<ul>\n<li> <code>:initial_delay</code> (<em>type:</em> <code>Numeric</code>) - The initial delay in seconds.</li>\n<li> <code>:max_delay</code> (<em>type:</em> <code>Numeric</code>) - The max delay in seconds.</li>\n<li> <code>:multiplier</code> (<em>type:</em> <code>Numeric</code>) - The incremental backoff multiplier.</li>\n<li> <code>:retry_codes</code> (<em>type:</em> <code>Array&lt;String&gt;</code>) - The error codes that should\ntrigger a retry.</li>\n</ul></li>\n</ul>"
  parent: Google::Cloud::Vision::V1::ProductSearch::Operations::Configuration