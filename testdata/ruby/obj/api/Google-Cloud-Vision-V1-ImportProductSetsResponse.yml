### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::ImportProductSetsResponse
  children: 
  - Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images(instance)
  - Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images=(instance)
  - Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses(instance)
  - Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses=(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsResponse
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: ImportProductSetsResponse
  summary: "Response message for the <code>ImportProductSets</code> method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\n{::Google::Longrunning::Operation#response google.longrunning.Operation.response} field."
  type: "class"
  name: Google::Cloud::Vision::V1::ImportProductSetsResponse
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images
  name: "#reference_images"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#reference_images"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def reference_images => ::Array<::Google::Cloud::Vision::V1::ReferenceImage>"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-ReferenceImage\">::Google::Cloud::Vision::V1::ReferenceImage</a>&gt;) — The list of reference_images that are imported successfully."
    raises: []
- uid: Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images=(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsResponse#reference_images=
  name: "#reference_images="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#reference_images="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def reference_images=(value) => ::Array<::Google::Cloud::Vision::V1::ReferenceImage>"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-ReferenceImage\">::Google::Cloud::Vision::V1::ReferenceImage</a>&gt;) — The list of reference_images that are imported successfully."
    raises: []
- uid: Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses
  name: "#statuses"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#statuses"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def statuses => ::Array<::Google::Rpc::Status>"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Rpc-Status\">::Google::Rpc::Status</a>&gt;) — The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0."
    raises: []
- uid: Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses=(instance)
  fullName: Google::Cloud::Vision::V1::ImportProductSetsResponse#statuses=
  name: "#statuses="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#statuses="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def statuses=(value) => ::Array<::Google::Rpc::Status>"
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Rpc-Status\">::Google::Rpc::Status</a>&gt;) — The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0."
    raises: []
references: []