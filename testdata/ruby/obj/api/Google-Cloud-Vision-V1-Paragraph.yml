### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::Paragraph
  children: 
  - Google::Cloud::Vision::V1::Paragraph#bounding_box(instance)
  - Google::Cloud::Vision::V1::Paragraph#bounding_box=(instance)
  - Google::Cloud::Vision::V1::Paragraph#confidence(instance)
  - Google::Cloud::Vision::V1::Paragraph#confidence=(instance)
  - Google::Cloud::Vision::V1::Paragraph#property(instance)
  - Google::Cloud::Vision::V1::Paragraph#property=(instance)
  - Google::Cloud::Vision::V1::Paragraph#words(instance)
  - Google::Cloud::Vision::V1::Paragraph#words=(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph
  langs:
  - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: Paragraph
  summary: "Structural unit of text representing a number of words in certain order."
  type: "class"
  name: Google::Cloud::Vision::V1::Paragraph
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::Paragraph#bounding_box(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#bounding_box
  name: "#bounding_box"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#bounding_box"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_box() -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — <p>The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li>when the text is horizontal it might look like:\n 0----1\n |    |\n 3----2</li>\n<li>when it&#39;s rotated 180 degrees around the top-left corner it becomes:\n 2----3\n |    |\n 1----0\nand the vertex order will still be (0, 1, 2, 3).</li>\n</ul>"
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#bounding_box=(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#bounding_box=
  name: "#bounding_box="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#bounding_box="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_box=(value) -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — <p>The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li>when the text is horizontal it might look like:\n 0----1\n |    |\n 3----2</li>\n<li>when it&#39;s rotated 180 degrees around the top-left corner it becomes:\n 2----3\n |    |\n 1----0\nand the vertex order will still be (0, 1, 2, 3).</li>\n</ul>"
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — <p>The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li>when the text is horizontal it might look like:\n 0----1\n |    |\n 3----2</li>\n<li>when it&#39;s rotated 180 degrees around the top-left corner it becomes:\n 2----3\n |    |\n 1----0\nand the vertex order will still be (0, 1, 2, 3).</li>\n</ul>"
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#confidence(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#confidence
  name: "#confidence"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#confidence"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence() -> ::Float"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Confidence of the OCR results for the paragraph. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#confidence=(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#confidence=
  name: "#confidence="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#confidence="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence=(value) -> ::Float"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Float) — Confidence of the OCR results for the paragraph. Range [0, 1]."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Confidence of the OCR results for the paragraph. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#property(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#property
  name: "#property"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#property"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def property() -> ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the paragraph."
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#property=(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#property=
  name: "#property="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#property="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def property=(value) -> ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the paragraph."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the paragraph."
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#words(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#words
  name: "#words"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#words"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def words() -> ::Array<::Google::Cloud::Vision::V1::Word>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Word\">::Google::Cloud::Vision::V1::Word</a>&gt;) — List of all words in this paragraph."
    raises: []
- uid: Google::Cloud::Vision::V1::Paragraph#words=(instance)
  fullName: Google::Cloud::Vision::V1::Paragraph#words=
  name: "#words="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#words="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def words=(value) -> ::Array<::Google::Cloud::Vision::V1::Word>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Word\">::Google::Cloud::Vision::V1::Word</a>&gt;) — List of all words in this paragraph."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Word\">::Google::Cloud::Vision::V1::Word</a>&gt;) — List of all words in this paragraph."
    raises: []
references: []