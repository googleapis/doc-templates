### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::Block
  children: 
  - Google::Cloud::Vision::V1::Block#block_type(instance)
  - Google::Cloud::Vision::V1::Block#block_type=(instance)
  - Google::Cloud::Vision::V1::Block#bounding_box(instance)
  - Google::Cloud::Vision::V1::Block#bounding_box=(instance)
  - Google::Cloud::Vision::V1::Block#confidence(instance)
  - Google::Cloud::Vision::V1::Block#confidence=(instance)
  - Google::Cloud::Vision::V1::Block#paragraphs(instance)
  - Google::Cloud::Vision::V1::Block#paragraphs=(instance)
  - Google::Cloud::Vision::V1::Block#property(instance)
  - Google::Cloud::Vision::V1::Block#property=(instance)
  - Google::Cloud::Vision::V1::Block::BlockType
  fullName: Google::Cloud::Vision::V1::Block
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: Block
  summary: "Logical element on the page."
  type: "class"
  name: Google::Cloud::Vision::V1::Block
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::Block#block_type(instance)
  fullName: Google::Cloud::Vision::V1::Block#block_type
  name: "#block_type"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#block_type"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def block_type() -> ::Google::Cloud::Vision::V1::Block::BlockType"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-Block-BlockType\">::Google::Cloud::Vision::V1::Block::BlockType</a>) — Detected block type (text, image etc) for this block."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#block_type=(instance)
  fullName: Google::Cloud::Vision::V1::Block#block_type=
  name: "#block_type="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#block_type="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def block_type=(value) -> ::Google::Cloud::Vision::V1::Block::BlockType"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-Block-BlockType\">::Google::Cloud::Vision::V1::Block::BlockType</a>) — Detected block type (text, image etc) for this block."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-Block-BlockType\">::Google::Cloud::Vision::V1::Block::BlockType</a>) — Detected block type (text, image etc) for this block."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#bounding_box(instance)
  fullName: Google::Cloud::Vision::V1::Block#bounding_box
  name: "#bounding_box"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#bounding_box"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_box() -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li><p>when the text is horizontal it might look like:</p>\n\n<pre><code>0----1\n|    |\n3----2\n</code></pre></li>\n<li><p>when it&#39;s rotated 180 degrees around the top-left corner it becomes:</p>\n\n<pre><code>2----3\n|    |\n1----0\n</code></pre></li>\n</ul>\n\n<p>and the vertex order will still be (0, 1, 2, 3)."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#bounding_box=(instance)
  fullName: Google::Cloud::Vision::V1::Block#bounding_box=
  name: "#bounding_box="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#bounding_box="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_box=(value) -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li><p>when the text is horizontal it might look like:</p>\n\n<pre><code>0----1\n|    |\n3----2\n</code></pre></li>\n<li><p>when it&#39;s rotated 180 degrees around the top-left corner it becomes:</p>\n\n<pre><code>2----3\n|    |\n1----0\n</code></pre></li>\n</ul>\n\n<p>and the vertex order will still be (0, 1, 2, 3)."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the &#39;natural&#39; orientation.\nFor example:</p>\n\n<ul>\n<li><p>when the text is horizontal it might look like:</p>\n\n<pre><code>0----1\n|    |\n3----2\n</code></pre></li>\n<li><p>when it&#39;s rotated 180 degrees around the top-left corner it becomes:</p>\n\n<pre><code>2----3\n|    |\n1----0\n</code></pre></li>\n</ul>\n\n<p>and the vertex order will still be (0, 1, 2, 3)."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#confidence(instance)
  fullName: Google::Cloud::Vision::V1::Block#confidence
  name: "#confidence"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#confidence"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence() -> ::Float"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Confidence of the OCR results on the block. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#confidence=(instance)
  fullName: Google::Cloud::Vision::V1::Block#confidence=
  name: "#confidence="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#confidence="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence=(value) -> ::Float"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Float) — Confidence of the OCR results on the block. Range [0, 1]."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Confidence of the OCR results on the block. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#paragraphs(instance)
  fullName: Google::Cloud::Vision::V1::Block#paragraphs
  name: "#paragraphs"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#paragraphs"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def paragraphs() -> ::Array<::Google::Cloud::Vision::V1::Paragraph>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Paragraph\">::Google::Cloud::Vision::V1::Paragraph</a>&gt;) — List of paragraphs in this block (if this blocks is of type text)."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#paragraphs=(instance)
  fullName: Google::Cloud::Vision::V1::Block#paragraphs=
  name: "#paragraphs="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#paragraphs="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def paragraphs=(value) -> ::Array<::Google::Cloud::Vision::V1::Paragraph>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Paragraph\">::Google::Cloud::Vision::V1::Paragraph</a>&gt;) — List of paragraphs in this block (if this blocks is of type text)."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Paragraph\">::Google::Cloud::Vision::V1::Paragraph</a>&gt;) — List of paragraphs in this block (if this blocks is of type text)."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#property(instance)
  fullName: Google::Cloud::Vision::V1::Block#property
  name: "#property"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#property"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def property() -> ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the block."
    raises: []
- uid: Google::Cloud::Vision::V1::Block#property=(instance)
  fullName: Google::Cloud::Vision::V1::Block#property=
  name: "#property="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#property="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def property=(value) -> ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the block."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-TextAnnotation-TextProperty\">::Google::Cloud::Vision::V1::TextAnnotation::TextProperty</a>) — Additional information detected for the block."
    raises: []
references:
- uid: Google::Cloud::Vision::V1::Block::BlockType
  fullName: Google::Cloud::Vision::V1::Block::BlockType
  name: BlockType
  module: google-cloud-vision-v1
  id: BlockType
  summary: "Type of a block (text, image etc) as identified by OCR."
  parent: Google::Cloud::Vision::V1::Block