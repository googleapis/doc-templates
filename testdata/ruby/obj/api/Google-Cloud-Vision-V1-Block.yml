### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::Block
    children: 
      - Google::Cloud::Vision::V1::Block#property
      - Google::Cloud::Vision::V1::Block#property=
      - Google::Cloud::Vision::V1::Block#bounding_box
      - Google::Cloud::Vision::V1::Block#bounding_box=
      - Google::Cloud::Vision::V1::Block#paragraphs
      - Google::Cloud::Vision::V1::Block#paragraphs=
      - Google::Cloud::Vision::V1::Block#block_type
      - Google::Cloud::Vision::V1::Block#block_type=
      - Google::Cloud::Vision::V1::Block#confidence
      - Google::Cloud::Vision::V1::Block#confidence=
      - Google::Cloud::Vision::V1::Block::BlockType
    fullName: Google::Cloud::Vision::V1::Block
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: Block
    summary: "Logical element on the page."
    type: "class"
    name: Google::Cloud::Vision::V1::Block
  - uid: Google::Cloud::Vision::V1::Block#property
    fullName: Google::Cloud::Vision::V1::Block#property
    name: "#property"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#property"
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#property => ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
          description: "Additional information detected for the block."
  - uid: Google::Cloud::Vision::V1::Block#property=
    fullName: Google::Cloud::Vision::V1::Block#property=
    name: "#property="
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#property="
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#property=(value) => ::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::TextAnnotation::TextProperty"
          description: "Additional information detected for the block."
  - uid: Google::Cloud::Vision::V1::Block#bounding_box
    fullName: Google::Cloud::Vision::V1::Block#bounding_box
    name: "#bounding_box"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#bounding_box"
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#bounding_box => ::Google::Cloud::Vision::V1::BoundingPoly"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::BoundingPoly"
          description: "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n<pre class=\"prettyprint lang-rb\">    0----1\n    |    |\n    3----2</pre>\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n<pre class=\"prettyprint lang-rb\">    2----3\n    |    |\n    1----0\n\n  and the vertex order will still be (0, 1, 2, 3).</pre>"
  - uid: Google::Cloud::Vision::V1::Block#bounding_box=
    fullName: Google::Cloud::Vision::V1::Block#bounding_box=
    name: "#bounding_box="
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#bounding_box="
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#bounding_box=(value) => ::Google::Cloud::Vision::V1::BoundingPoly"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::BoundingPoly"
          description: "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n<pre class=\"prettyprint lang-rb\">    0----1\n    |    |\n    3----2</pre>\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n<pre class=\"prettyprint lang-rb\">    2----3\n    |    |\n    1----0\n\n  and the vertex order will still be (0, 1, 2, 3).</pre>"
  - uid: Google::Cloud::Vision::V1::Block#paragraphs
    fullName: Google::Cloud::Vision::V1::Block#paragraphs
    name: "#paragraphs"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#paragraphs"
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#paragraphs => ::Array<::Google::Cloud::Vision::V1::Paragraph>"
      parameters:
        []
      return:
          type:
            - "::Array<::Google::Cloud::Vision::V1::Paragraph>"
          description: "List of paragraphs in this block (if this blocks is of type text)."
  - uid: Google::Cloud::Vision::V1::Block#paragraphs=
    fullName: Google::Cloud::Vision::V1::Block#paragraphs=
    name: "#paragraphs="
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#paragraphs="
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#paragraphs=(value) => ::Array<::Google::Cloud::Vision::V1::Paragraph>"
      parameters:
        []
      return:
          type:
            - "::Array<::Google::Cloud::Vision::V1::Paragraph>"
          description: "List of paragraphs in this block (if this blocks is of type text)."
  - uid: Google::Cloud::Vision::V1::Block#block_type
    fullName: Google::Cloud::Vision::V1::Block#block_type
    name: "#block_type"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#block_type"
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#block_type => ::Google::Cloud::Vision::V1::Block::BlockType"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::Block::BlockType"
          description: "Detected block type (text, image etc) for this block."
  - uid: Google::Cloud::Vision::V1::Block#block_type=
    fullName: Google::Cloud::Vision::V1::Block#block_type=
    name: "#block_type="
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#block_type="
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#block_type=(value) => ::Google::Cloud::Vision::V1::Block::BlockType"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::Block::BlockType"
          description: "Detected block type (text, image etc) for this block."
  - uid: Google::Cloud::Vision::V1::Block#confidence
    fullName: Google::Cloud::Vision::V1::Block#confidence
    name: "#confidence"
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#confidence"
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#confidence => ::Float"
      parameters:
        []
      return:
          type:
            - "::Float"
          description: "Confidence of the OCR results on the block. Range [0, 1]."
  - uid: Google::Cloud::Vision::V1::Block#confidence=
    fullName: Google::Cloud::Vision::V1::Block#confidence=
    name: "#confidence="
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: "#confidence="
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#confidence=(value) => ::Float"
      parameters:
        []
      return:
          type:
            - "::Float"
          description: "Confidence of the OCR results on the block. Range [0, 1]."
references: 
  - uid: Google::Cloud::Vision::V1::Block::BlockType
    fullName: Google::Cloud::Vision::V1::Block::BlockType
    name: BlockType
    module: google-cloud-vision-v1
    id: BlockType
    summary: "Type of a block (text, image etc) as identified by OCR."
    parent: Google::Cloud::Vision::V1::Block

