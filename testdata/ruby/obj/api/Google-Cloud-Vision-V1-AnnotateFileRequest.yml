### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest
  children: 
  - Google::Cloud::Vision::V1::AnnotateFileRequest#features(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#features=(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#image_context(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#image_context=(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#input_config(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#input_config=(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#pages(instance)
  - Google::Cloud::Vision::V1::AnnotateFileRequest#pages=(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest
  langs:
  - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: AnnotateFileRequest
  summary: "A request to annotate one single file, e.g. a PDF, TIFF or GIF file."
  type: "class"
  name: Google::Cloud::Vision::V1::AnnotateFileRequest
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#features(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#features
  name: "#features"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#features"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def features() -> ::Array<::Google::Cloud::Vision::V1::Feature>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Feature\">::Google::Cloud::Vision::V1::Feature</a>&gt;) — Required. Requested features."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#features=(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#features=
  name: "#features="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#features="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def features=(value) -> ::Array<::Google::Cloud::Vision::V1::Feature>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Feature\">::Google::Cloud::Vision::V1::Feature</a>&gt;) — Required. Requested features."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Feature\">::Google::Cloud::Vision::V1::Feature</a>&gt;) — Required. Requested features."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#image_context(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#image_context
  name: "#image_context"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#image_context"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def image_context() -> ::Google::Cloud::Vision::V1::ImageContext"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-ImageContext\">::Google::Cloud::Vision::V1::ImageContext</a>) — Additional context that may accompany the image(s) in the file."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#image_context=(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#image_context=
  name: "#image_context="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#image_context="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def image_context=(value) -> ::Google::Cloud::Vision::V1::ImageContext"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-ImageContext\">::Google::Cloud::Vision::V1::ImageContext</a>) — Additional context that may accompany the image(s) in the file."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-ImageContext\">::Google::Cloud::Vision::V1::ImageContext</a>) — Additional context that may accompany the image(s) in the file."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#input_config(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#input_config
  name: "#input_config"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#input_config"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def input_config() -> ::Google::Cloud::Vision::V1::InputConfig"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-InputConfig\">::Google::Cloud::Vision::V1::InputConfig</a>) — Required. Information about the input file."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#input_config=(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#input_config=
  name: "#input_config="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#input_config="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def input_config=(value) -> ::Google::Cloud::Vision::V1::InputConfig"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-InputConfig\">::Google::Cloud::Vision::V1::InputConfig</a>) — Required. Information about the input file."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-InputConfig\">::Google::Cloud::Vision::V1::InputConfig</a>) — Required. Information about the input file."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#pages(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#pages
  name: "#pages"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#pages"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def pages() -> ::Array<::Integer>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::Integer&gt;) — Pages of the file to perform image annotation.</p>\n\n<p>Pages starts from 1, we assume the first page of the file is page 1.\nAt most 5 pages are supported per request. Pages can be negative.</p>\n\n<p>Page 1 means the first page.\nPage 2 means the second page.\nPage -1 means the last page.\nPage -2 means the second to the last page.</p>\n\n<p>If the file is GIF instead of PDF or TIFF, page refers to GIF frames.</p>\n\n<p>If this field is empty, by default the service performs image annotation\nfor the first 5 pages of the file."
    raises: []
- uid: Google::Cloud::Vision::V1::AnnotateFileRequest#pages=(instance)
  fullName: Google::Cloud::Vision::V1::AnnotateFileRequest#pages=
  name: "#pages="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#pages="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def pages=(value) -> ::Array<::Integer>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;::Integer&gt;) — Pages of the file to perform image annotation.</p>\n\n<p>Pages starts from 1, we assume the first page of the file is page 1.\nAt most 5 pages are supported per request. Pages can be negative.</p>\n\n<p>Page 1 means the first page.\nPage 2 means the second page.\nPage -1 means the last page.\nPage -2 means the second to the last page.</p>\n\n<p>If the file is GIF instead of PDF or TIFF, page refers to GIF frames.</p>\n\n<p>If this field is empty, by default the service performs image annotation\nfor the first 5 pages of the file."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;::Integer&gt;) — Pages of the file to perform image annotation.</p>\n\n<p>Pages starts from 1, we assume the first page of the file is page 1.\nAt most 5 pages are supported per request. Pages can be negative.</p>\n\n<p>Page 1 means the first page.\nPage 2 means the second page.\nPage -1 means the last page.\nPage -2 means the second to the last page.</p>\n\n<p>If the file is GIF instead of PDF or TIFF, page refers to GIF frames.</p>\n\n<p>If this field is empty, by default the service performs image annotation\nfor the first 5 pages of the file."
    raises: []
references: []