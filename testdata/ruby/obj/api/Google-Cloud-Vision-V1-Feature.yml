### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::Feature
  children: 
  - Google::Cloud::Vision::V1::Feature#max_results(instance)
  - Google::Cloud::Vision::V1::Feature#max_results=(instance)
  - Google::Cloud::Vision::V1::Feature#model(instance)
  - Google::Cloud::Vision::V1::Feature#model=(instance)
  - Google::Cloud::Vision::V1::Feature#type(instance)
  - Google::Cloud::Vision::V1::Feature#type=(instance)
  - Google::Cloud::Vision::V1::Feature::Type
  fullName: Google::Cloud::Vision::V1::Feature
  langs:
  - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: Feature
  summary: "The type of Google Cloud Vision API detection to perform, and the maximum\nnumber of results to return for that type. Multiple <code>Feature</code> objects can\nbe specified in the <code>features</code> list."
  type: "class"
  name: Google::Cloud::Vision::V1::Feature
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::Feature#max_results(instance)
  fullName: Google::Cloud::Vision::V1::Feature#max_results
  name: "#max_results"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#max_results"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def max_results() -> ::Integer"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Integer) — Maximum number of results of this type. Does not apply to\n<code>TEXT_DETECTION</code>, <code>DOCUMENT_TEXT_DETECTION</code>, or <code>CROP_HINTS</code>."
    raises: []
- uid: Google::Cloud::Vision::V1::Feature#max_results=(instance)
  fullName: Google::Cloud::Vision::V1::Feature#max_results=
  name: "#max_results="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#max_results="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def max_results=(value) -> ::Integer"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Integer) — Maximum number of results of this type. Does not apply to\n<code>TEXT_DETECTION</code>, <code>DOCUMENT_TEXT_DETECTION</code>, or <code>CROP_HINTS</code>."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Integer) — Maximum number of results of this type. Does not apply to\n<code>TEXT_DETECTION</code>, <code>DOCUMENT_TEXT_DETECTION</code>, or <code>CROP_HINTS</code>."
    raises: []
- uid: Google::Cloud::Vision::V1::Feature#model(instance)
  fullName: Google::Cloud::Vision::V1::Feature#model
  name: "#model"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#model"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def model() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Model to use for the feature.\nSupported values: &quot;builtin/stable&quot; (the default if unset) and\n&quot;builtin/latest&quot;."
    raises: []
- uid: Google::Cloud::Vision::V1::Feature#model=(instance)
  fullName: Google::Cloud::Vision::V1::Feature#model=
  name: "#model="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#model="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def model=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — Model to use for the feature.\nSupported values: &quot;builtin/stable&quot; (the default if unset) and\n&quot;builtin/latest&quot;."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Model to use for the feature.\nSupported values: &quot;builtin/stable&quot; (the default if unset) and\n&quot;builtin/latest&quot;."
    raises: []
- uid: Google::Cloud::Vision::V1::Feature#type(instance)
  fullName: Google::Cloud::Vision::V1::Feature#type
  name: "#type"
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#type"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def type() -> ::Google::Cloud::Vision::V1::Feature::Type"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-Feature-Type\">::Google::Cloud::Vision::V1::Feature::Type</a>) — The feature type."
    raises: []
- uid: Google::Cloud::Vision::V1::Feature#type=(instance)
  fullName: Google::Cloud::Vision::V1::Feature#type=
  name: "#type="
  langs:
    - ruby
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: "#type="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def type=(value) -> ::Google::Cloud::Vision::V1::Feature::Type"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-Feature-Type\">::Google::Cloud::Vision::V1::Feature::Type</a>) — The feature type."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-Feature-Type\">::Google::Cloud::Vision::V1::Feature::Type</a>) — The feature type."
    raises: []
references:
- uid: Google::Cloud::Vision::V1::Feature::Type
  fullName: Google::Cloud::Vision::V1::Feature::Type
  name: Type
  module: google-cloud-vision-v1
  friendlyApiName: "Cloud Vision V1 API"
  id: Type
  summary: "Type of Google Cloud Vision API feature to be extracted."
  parent: Google::Cloud::Vision::V1::Feature