### YamlMime:UniversalReference
items:
- uid: Google::Cloud::Vision::V1::EntityAnnotation
  children: 
  - Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#confidence(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#confidence=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#description(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#description=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#locale(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#locale=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#locations(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#locations=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#mid(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#mid=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#properties(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#properties=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#score(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#score=(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#topicality(instance)
  - Google::Cloud::Vision::V1::EntityAnnotation#topicality=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation
  langs:
  - ruby
  module: google-cloud-vision-v1
  id: EntityAnnotation
  summary: "Set of detected entity features."
  type: "class"
  name: Google::Cloud::Vision::V1::EntityAnnotation
  example: []
  inherits:
  - "Object"
  extendedBy:
  - "Google::Protobuf::MessageExts::ClassMethods"
  includes:
  - "Google::Protobuf::MessageExts"
- uid: Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly
  name: "#bounding_poly"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#bounding_poly"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_poly() -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — Image region to which this entity belongs. Not produced\nfor <code>LABEL_DETECTION</code> features."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#bounding_poly=
  name: "#bounding_poly="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#bounding_poly="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def bounding_poly=(value) -> ::Google::Cloud::Vision::V1::BoundingPoly"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — Image region to which this entity belongs. Not produced\nfor <code>LABEL_DETECTION</code> features."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(<a href=\"./Google-Cloud-Vision-V1-BoundingPoly\">::Google::Cloud::Vision::V1::BoundingPoly</a>) — Image region to which this entity belongs. Not produced\nfor <code>LABEL_DETECTION</code> features."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#confidence(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#confidence
  name: "#confidence"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#confidence"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence() -> ::Float"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — <strong>Deprecated. Use <code>score</code> instead.</strong>\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the &quot;Eiffel Tower&quot; entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#confidence=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#confidence=
  name: "#confidence="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#confidence="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def confidence=(value) -> ::Float"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Float) — <strong>Deprecated. Use <code>score</code> instead.</strong>\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the &quot;Eiffel Tower&quot; entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1]."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — <strong>Deprecated. Use <code>score</code> instead.</strong>\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the &quot;Eiffel Tower&quot; entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#description(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#description
  name: "#description"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#description"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def description() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Entity textual description, expressed in its <code>locale</code> language."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#description=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#description=
  name: "#description="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#description="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def description=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — Entity textual description, expressed in its <code>locale</code> language."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Entity textual description, expressed in its <code>locale</code> language."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#locale(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#locale
  name: "#locale"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#locale"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def locale() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The language code for the locale in which the entity textual\n<code>description</code> is expressed."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#locale=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#locale=
  name: "#locale="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#locale="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def locale=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — The language code for the locale in which the entity textual\n<code>description</code> is expressed."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — The language code for the locale in which the entity textual\n<code>description</code> is expressed."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#locations(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#locations
  name: "#locations"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#locations"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def locations() -> ::Array<::Google::Cloud::Vision::V1::LocationInfo>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-LocationInfo\">::Google::Cloud::Vision::V1::LocationInfo</a>&gt;) — The location information for the detected entity. Multiple\n<code>LocationInfo</code> elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#locations=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#locations=
  name: "#locations="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#locations="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def locations=(value) -> ::Array<::Google::Cloud::Vision::V1::LocationInfo>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-LocationInfo\">::Google::Cloud::Vision::V1::LocationInfo</a>&gt;) — The location information for the detected entity. Multiple\n<code>LocationInfo</code> elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-LocationInfo\">::Google::Cloud::Vision::V1::LocationInfo</a>&gt;) — The location information for the detected entity. Multiple\n<code>LocationInfo</code> elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#mid(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#mid
  name: "#mid"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#mid"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def mid() -> ::String"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Opaque entity ID. Some IDs may be available in\n<a href=\"https://developers.google.com/knowledge-graph/\">Google Knowledge Graph Search\nAPI</a>."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#mid=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#mid=
  name: "#mid="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#mid="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def mid=(value) -> ::String"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::String) — Opaque entity ID. Some IDs may be available in\n<a href=\"https://developers.google.com/knowledge-graph/\">Google Knowledge Graph Search\nAPI</a>."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::String) — Opaque entity ID. Some IDs may be available in\n<a href=\"https://developers.google.com/knowledge-graph/\">Google Knowledge Graph Search\nAPI</a>."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#properties(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#properties
  name: "#properties"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#properties"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def properties() -> ::Array<::Google::Cloud::Vision::V1::Property>"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Property\">::Google::Cloud::Vision::V1::Property</a>&gt;) — Some entities may have optional user-supplied <code>Property</code> (name/value)\nfields, such a score or string that qualifies the entity."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#properties=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#properties=
  name: "#properties="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#properties="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def properties=(value) -> ::Array<::Google::Cloud::Vision::V1::Property>"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Property\">::Google::Cloud::Vision::V1::Property</a>&gt;) — Some entities may have optional user-supplied <code>Property</code> (name/value)\nfields, such a score or string that qualifies the entity."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Array&lt;<a href=\"./Google-Cloud-Vision-V1-Property\">::Google::Cloud::Vision::V1::Property</a>&gt;) — Some entities may have optional user-supplied <code>Property</code> (name/value)\nfields, such a score or string that qualifies the entity."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#score(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#score
  name: "#score"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#score"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def score() -> ::Float"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Overall score of the result. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#score=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#score=
  name: "#score="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#score="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def score=(value) -> ::Float"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Float) — Overall score of the result. Range [0, 1]."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — Overall score of the result. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#topicality(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#topicality
  name: "#topicality"
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#topicality"
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def topicality() -> ::Float"
    aliases: []
    arguments: []
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of &quot;tower&quot; is likely higher to an image\ncontaining the detected &quot;Eiffel Tower&quot; than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
    raises: []
- uid: Google::Cloud::Vision::V1::EntityAnnotation#topicality=(instance)
  fullName: Google::Cloud::Vision::V1::EntityAnnotation#topicality=
  name: "#topicality="
  langs:
    - ruby
  module: google-cloud-vision-v1
  id: "#topicality="
  summary: ""
  type: method
  example: []
  syntax:
    description: ""
    content: "def topicality=(value) -> ::Float"
    aliases: []
    arguments:
    - description: "<strong>value</strong> (::Float) — The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of &quot;tower&quot; is likely higher to an image\ncontaining the detected &quot;Eiffel Tower&quot; than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
    yields: []
    yieldparams: []
    returnValues:
    - description: "(::Float) — The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of &quot;tower&quot; is likely higher to an image\ncontaining the detected &quot;Eiffel Tower&quot; than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
    raises: []
references: []